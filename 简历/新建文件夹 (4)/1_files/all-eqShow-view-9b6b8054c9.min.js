function checkBrower(){var t=!0;if(navigator.userAgent.indexOf("Safari")>0&&navigator.userAgent.indexOf("Chrome")<=0)return t}function mobilecheck(){var t=!1;return function(e){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0)}(navigator.userAgent||navigator.vendor||window.opera),document.body&&document.body.clientWidth&&document.body.clientHeight&&document.body.clientWidth<350&&document.body.clientHeight<500&&(t=!0),t}function iphoneCheck(){var t=!1;return/iPhone/i.test(navigator.userAgent)&&(t=!0),!0}function isWeixin(){var t=navigator.userAgent.toLowerCase();return"micromessenger"==t.match(/MicroMessenger/i)}function isAndroid(){var t=navigator.userAgent,e=(navigator.appVersion,t.indexOf("Android")>-1||t.indexOf("Linux")>-1);return e}function tabletCheck(){var t=/ipad|android|android 3.0|xoom|sch-i800|playbook|tablet|kindle/i.test(navigator.userAgent.toLowerCase());return t}function countCharacters(t){var e=0;if(!t)return 0;for(var i=0;i<t.length;i++){var n=t.charCodeAt(i);n>=1&&n<=126||65376<=n&&n<=65439?e++:e+=2}return e}function renderPage(t,e,i,n){function o(t,e){var i=e.properties.longPage,n=1;if(e.elements)for(var o=0;o<e.elements.length;o++)if(3==e.elements[o].type){2==e.elements[o].properties.croptype&&(n=2);break}var s,a,r,l,c,h=window.scene?scene.pageMode:0,u=0,g={touchPos:0,pLen:(i-1)*-486,contain:$("#page"+t),cH:mobilecheck()?$(document).height():486,stopInertiaMove:!1},f=1==n?".edit_area":".edit_wrapper";0==h||1==h||2==h||6==h||7==h||8==h||11==h||12==h||13==h?h="NS":(h="WE",$('<section class="u-arrow-bottom"><div class="pre-wrap"><div class="pre-box1"><div class="pre1"></div></div><div class="pre-box2"><div class="pre2"></div></div></div></section>').appendTo("#page"+t));var m=0,v=0;g.contain.on("mousedown touchstart",function(t){return"button"==t.target.tagName.toLowerCase()||t.target.getAttribute("data")||t.target.getAttribute("href")||"8"==t.target.getAttribute("ctype")||"z"==t.target.getAttribute("ctype")?void t.stopPropagation():(t.stopPropagation(),t.preventDefault(),void(g.touchPos<g.pLen||g.touchPos>0||(s=!0,r=0,g.stopInertiaMove=!0,a=t.originalEvent.touches?t.originalEvent.changedTouches[0].clientY:t.clientY,"WE"==h&&(l=t.originalEvent.touches?t.originalEvent.changedTouches[0].clientX:t.clientX),v=g.touchPos,m=Date.now())))}),g.contain.on("mousemove touchmove",function(t){if(t.stopPropagation(),s){if(r=g.touchPos+(t.originalEvent.touches?t.originalEvent.changedTouches[0].clientY:t.clientY)-a,"WE"==h&&(c=(t.originalEvent.touches?t.originalEvent.touches[0].clientX:t.clientX)-l,Math.abs(c)>Math.abs(r-g.touchPos)&&!scene.property.forbidHandFlip)){if(c>0){if(c<5)return;eqxiu.prePage()}else eqxiu.nextPage();return void(s=!1)}if(r<g.pLen||r>5)return s=!1,r>0&&"NS"==h&&(scene.property.forbidHandFlip?g.touchPos=0:eqxiu.prePage()),void(r<0&&"NS"==h&&(scene.property.forbidHandFlip?g.touchPos=g.pLen:eqxiu.nextPage()));if(r>0)return;g.stopInertiaMove=!0,$(this).find(f).css("transform","translate3d(0,"+(r-u)+"px,0)"),$(this).find(f).css("-webkit-transform","translate3d(0,"+(r-u)+"px,0)");var e=$(this).find(".alock");if(e.length>0)for(var i=0;i<e.length;i++)p(e[i],e[i].style.transform,u-r);var n=Date.now();$(document).trigger("pageScrollPos",[r-g.cH]),n-m>300&&(m=n,v=r),g.stopInertiaMove=!1}}),g.contain.on("mouseup touchend mouseleave",function(t){if(t.stopPropagation(),s){if(s=!1,0===r||r-v==0)return void $(t.target).trigger("click","longPage");if(!(r<0&&r>g.pLen))return r>=0?void(g.touchPos=0):void(g.touchPos=g.pLen);g.touchPos=r,"WE"==h&&g.contain.find(".u-arrow-bottom").hide();var e=Date.now(),i=(r-v)/(e-m);!function(t,e,i,n){function o(){if(!n.stopInertiaMove){var r=Date.now(),l=r-e,c=t+l*a;if(!(s*c<0)){var d=(t+c)/2*l,h=i+d;if(!(h>0||h<n.pLen)){n.timmer=null,n.contain.find(f).css("transform","translate3d(0,"+(h-u)+"px,0)"),n.contain.find(f).css("-webkit-transform","translate3d(0,"+(h-u)+"px,0)");var g=n.contain.find(".alock");if(g.length>0)for(var m=0;m<g.length;m++)p(g[m],g[m].style.transform,u-h);n.touchPos=h,$(document).trigger("pageScrollPos",[h-n.cH]),setTimeout(o,10)}}}}var s=t<0?-1:1,a=s*-6e-4;o()}(i,e,r,g)}}),$(document).on("clearTouchPos",function(){g.touchPos=0,g.contain.find(f).css("transform","translateY(0px)"),g.contain.find(f).css("-webkit-transform","translateY(0px)");var t,e=g.contain.find(".alock");if(e.length>0)for(var i=0;i<e.length;i++)t=e[i].style.transform.replace(d,""),e[i].style.transform="translate3d(0,0,0) "+t})}t.templateParser("jsonParser").parse({def:i[e-1],appendTo:"#page"+e,mode:"view",disEvent:n}),listPages=i;var s,a,r=1,l=$(".z-current").width(),c=$(".z-current").height();imageWidth=$(".m-img").width(),imageHeight=$(".m-img").height(),l/c>=320/486?(r=c/486,s=(l/r-320)/2):(r=l/320,a=(c/r-486)/2),window!=window.top&&$(".phoneBox .nr").css({width:"100%",height:"486px"}),window===window.top&&mobilecheck()&&$(".edit_area").css({marginTop:a||0}),s&&$(".edit_area").css({marginLeft:s}),tplCount==i.length&&$("#eqMobileViewport").attr("content","width=320, initial-scale="+r+", maximum-scale="+r+", user-scalable=no"),i[e-1].properties&&i[e-1].properties.longPage&&o(e,i[e-1]);var d=/translate3d\(.*?\)/g,p=function(t,e,i){e=e.replace(d,""),e&&(t.style.transform="translate3d(0,"+i+"px,0) "+e)}}(function(){"use strict";var t=this,e=t.Chart,i=function(t){this.canvas=t.canvas,this.ctx=t;var e=function(t,e){return t["offset"+e]?t["offset"+e]:document.defaultView.getComputedStyle(t).getPropertyValue(e)},i=this.width=e(t.canvas,"Width")||t.canvas.width,o=this.height=e(t.canvas,"Height")||t.canvas.height;return i=this.width=t.canvas.width,o=this.height=t.canvas.height,this.aspectRatio=this.width/this.height,n.retinaScale(this),this};i.defaults={global:{animation:!0,animationSteps:60,animationEasing:"easeOutQuart",showScale:!0,scaleOverride:!1,scaleSteps:null,scaleStepWidth:null,scaleStartValue:null,scaleLineColor:"rgba(0,0,0,.1)",scaleLineWidth:1,scaleShowLabels:!0,scaleLabel:"<%=value%>",scaleIntegersOnly:!0,scaleBeginAtZero:!1,scaleFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",scaleFontSize:12,scaleFontStyle:"normal",scaleFontColor:"#666",responsive:!1,maintainAspectRatio:!0,showTooltips:!0,customTooltips:!1,tooltipEvents:["mousemove","touchstart","touchmove","mouseout"],tooltipFillColor:"rgba(0,0,0,0.8)",tooltipFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",tooltipFontSize:14,tooltipFontStyle:"normal",tooltipFontColor:"#fff",tooltipTitleFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",tooltipTitleFontSize:14,tooltipTitleFontStyle:"bold",tooltipTitleFontColor:"#fff",tooltipTitleTemplate:"<%= label%>",tooltipYPadding:6,tooltipXPadding:6,tooltipCaretSize:8,tooltipCornerRadius:6,tooltipXOffset:10,tooltipTemplate:"<%if (label){%><%=label%>: <%}%><%= value %>",multiTooltipTemplate:"<%= value %>",multiTooltipKeyBackground:"#fff",segmentColorDefault:["#A6CEE3","#1F78B4","#B2DF8A","#33A02C","#FB9A99","#E31A1C","#FDBF6F","#FF7F00","#CAB2D6","#6A3D9A","#B4B482","#B15928"],segmentHighlightColorDefaults:["#CEF6FF","#47A0DC","#DAFFB2","#5BC854","#FFC2C1","#FF4244","#FFE797","#FFA728","#F2DAFE","#9265C2","#DCDCAA","#D98150"],onAnimationProgress:function(){},onAnimationComplete:function(){}}},i.types={};var n=i.helpers={},o=n.each=function(t,e,i){var n=Array.prototype.slice.call(arguments,3);if(t)if(t.length===+t.length){var o;for(o=0;o<t.length;o++)e.apply(i,[t[o],o].concat(n))}else for(var s in t)e.apply(i,[t[s],s].concat(n))},s=n.clone=function(t){var e={};return o(t,function(i,n){t.hasOwnProperty(n)&&(e[n]=i)}),e},a=n.extend=function(t){return o(Array.prototype.slice.call(arguments,1),function(e){o(e,function(i,n){e.hasOwnProperty(n)&&(t[n]=i)})}),t},r=n.merge=function(t,e){var i=Array.prototype.slice.call(arguments,0);return i.unshift({}),a.apply(null,i)},l=n.indexOf=function(t,e){if(Array.prototype.indexOf)return t.indexOf(e);for(var i=0;i<t.length;i++)if(t[i]===e)return i;return-1},c=(n.where=function(t,e){var i=[];return n.each(t,function(t){e(t)&&i.push(t)}),i},n.findNextWhere=function(t,e,i){i||(i=-1);for(var n=i+1;n<t.length;n++){var o=t[n];if(e(o))return o}},n.findPreviousWhere=function(t,e,i){i||(i=t.length);for(var n=i-1;n>=0;n--){var o=t[n];if(e(o))return o}},n.inherits=function(t){var e=this,i=t&&t.hasOwnProperty("constructor")?t.constructor:function(){return e.apply(this,arguments)},n=function(){this.constructor=i};return n.prototype=e.prototype,i.prototype=new n,i.extend=c,t&&a(i.prototype,t),i.__super__=e.prototype,i}),d=n.noop=function(){},p=n.uid=function(){var t=0;return function(){return"chart-"+t++}}(),h=n.warn=function(t){window.console&&"function"==typeof window.console.warn&&console.warn(t)},u=n.amd="function"==typeof define&&define.amd,g=n.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},f=n.max=function(t){return Math.max.apply(Math,t)},m=n.min=function(t){return Math.min.apply(Math,t)},v=(n.cap=function(t,e,i){if(g(e)){if(t>e)return e}else if(g(i)&&i>t)return i;return t},n.getDecimalPlaces=function(t){if(t%1!==0&&g(t)){var e=t.toString();if(e.indexOf("e-")<0)return e.split(".")[1].length;if(e.indexOf(".")<0)return parseInt(e.split("e-")[1]);var i=e.split(".")[1].split("e-");return i[0].length+parseInt(i[1])}return 0}),b=n.radians=function(t){return t*(Math.PI/180)},w=(n.getAngleFromPoint=function(t,e){var i=e.x-t.x,n=e.y-t.y,o=Math.sqrt(i*i+n*n),s=2*Math.PI+Math.atan2(n,i);return 0>i&&0>n&&(s+=2*Math.PI),{angle:s,distance:o}},n.aliasPixel=function(t){return t%2===0?0:.5}),x=(n.splineCurve=function(t,e,i,n){var o=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),s=Math.sqrt(Math.pow(i.x-e.x,2)+Math.pow(i.y-e.y,2)),a=n*o/(o+s),r=n*s/(o+s);return{inner:{x:e.x-a*(i.x-t.x),y:e.y-a*(i.y-t.y)},outer:{x:e.x+r*(i.x-t.x),y:e.y+r*(i.y-t.y)}}},n.calculateOrderOfMagnitude=function(t){return Math.floor(Math.log(t)/Math.LN10)}),y=(n.calculateScaleRange=function(t,e,i,n,s){var a=2,r=Math.floor(e/(1.5*i)),l=a>=r,c=[];o(t,function(t){null==t||c.push(t)});var d=m(c),p=f(c);p===d&&(p+=.5,d>=.5&&!n?d-=.5:p+=.5);for(var h=Math.abs(p-d),u=x(h),g=Math.ceil(p/(1*Math.pow(10,u)))*Math.pow(10,u),v=n?0:Math.floor(d/(1*Math.pow(10,u)))*Math.pow(10,u),b=g-v,w=Math.pow(10,u),y=Math.round(b/w);(y>r||r>2*y)&&!l;)if(y>r)w*=2,y=Math.round(b/w),y%1!==0&&(l=!0);else if(s&&u>=0){if(w/2%1!==0)break;w/=2,y=Math.round(b/w)}else w/=2,y=Math.round(b/w);return l&&(y=a,w=b/y),{steps:y,stepValue:w,min:v,max:v+y*w}},n.template=function(t,e){function i(t,e){var i=/\W/.test(t)?new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+t.replace(/[\r\t\n]/g," ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');"):n[t]=n[t];return e?i(e):i}if(t instanceof Function)return t(e);var n={};return i(t,e)}),S=(n.generateLabels=function(t,e,i,n){var s=new Array(e);return t&&o(s,function(e,o){s[o]=y(t,{value:i+n*(o+1)})}),s},n.easingEffects={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-1*t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return 1*((t=t/1-1)*t*t+1)},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-1*((t=t/1-1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return 1*(t/=1)*t*t*t*t},easeOutQuint:function(t){return 1*((t=t/1-1)*t*t*t*t+1)},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return-1*Math.cos(t/1*(Math.PI/2))+1},easeOutSine:function(t){return 1*Math.sin(t/1*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t/1)-1)},easeInExpo:function(t){return 0===t?1:1*Math.pow(2,10*(t/1-1))},easeOutExpo:function(t){return 1===t?1:1*(-Math.pow(2,-10*t/1)+1)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(-Math.pow(2,-10*--t)+2)},easeInCirc:function(t){return t>=1?t:-1*(Math.sqrt(1-(t/=1)*t)-1)},easeOutCirc:function(t){return 1*Math.sqrt(1-(t=t/1-1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,i=0,n=1;return 0===t?0:1==(t/=1)?1:(i||(i=.3),n<Math.abs(1)?(n=1,e=i/4):e=i/(2*Math.PI)*Math.asin(1/n),-(n*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/i)))},easeOutElastic:function(t){var e=1.70158,i=0,n=1;return 0===t?0:1==(t/=1)?1:(i||(i=.3),n<Math.abs(1)?(n=1,e=i/4):e=i/(2*Math.PI)*Math.asin(1/n),n*Math.pow(2,-10*t)*Math.sin((1*t-e)*(2*Math.PI)/i)+1)},easeInOutElastic:function(t){var e=1.70158,i=0,n=1;return 0===t?0:2==(t/=.5)?1:(i||(i=1*(.3*1.5)),n<Math.abs(1)?(n=1,e=i/4):e=i/(2*Math.PI)*Math.asin(1/n),1>t?-.5*(n*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/i)):n*Math.pow(2,-10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/i)*.5+1)},easeInBack:function(t){var e=1.70158;return 1*(t/=1)*t*((e+1)*t-e)},easeOutBack:function(t){var e=1.70158;return 1*((t=t/1-1)*t*((e+1)*t+e)+1)},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?.5*(t*t*(((e*=1.525)+1)*t-e)):.5*((t-=2)*t*(((e*=1.525)+1)*t+e)+2)},easeInBounce:function(t){return 1-S.easeOutBounce(1-t)},easeOutBounce:function(t){return(t/=1)<1/2.75?1*(7.5625*t*t):2/2.75>t?1*(7.5625*(t-=1.5/2.75)*t+.75):2.5/2.75>t?1*(7.5625*(t-=2.25/2.75)*t+.9375):1*(7.5625*(t-=2.625/2.75)*t+.984375)},easeInOutBounce:function(t){return.5>t?.5*S.easeInBounce(2*t):.5*S.easeOutBounce(2*t-1)+.5}}),C=n.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)}}(),P=(n.cancelAnimFrame=function(){return window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||window.msCancelAnimationFrame||function(t){return window.clearTimeout(t,1e3/60)}}(),n.animationLoop=function(t,e,i,n,o,s){var a=0,r=S[i]||S.linear,l=function(){a++;var i=a/e,c=r(i);t.call(s,c,i,a),n.call(s,c,i),e>a?s.animationFrame=C(l):o.apply(s)};C(l)},n.getRelativePosition=function(t){var e,i,n=t.originalEvent||t,o=t.currentTarget||t.srcElement,s=o.getBoundingClientRect();return n.touches?(e=n.touches[0].clientX-s.left,i=n.touches[0].clientY-s.top):(e=n.clientX-s.left,i=n.clientY-s.top),{x:e,y:i}},n.addEvent=function(t,e,i){t.addEventListener?t.addEventListener(e,i):t.attachEvent?t.attachEvent("on"+e,i):t["on"+e]=i}),k=n.removeEvent=function(t,e,i){t.removeEventListener?t.removeEventListener(e,i,!1):t.detachEvent?t.detachEvent("on"+e,i):t["on"+e]=d},$=(n.bindEvents=function(t,e,i){t.events||(t.events={}),o(e,function(e){t.events[e]=function(){i.apply(t,arguments)},P(t.chart.canvas,e,t.events[e])})},n.unbindEvents=function(t,e){o(e,function(e,i){k(t.chart.canvas,i,e)})}),I=n.getMaximumWidth=function(t){var e=t.parentNode,i=parseInt(T(e,"padding-left"))+parseInt(T(e,"padding-right"));return e.clientWidth-i},_=n.getMaximumHeight=function(t){var e=t.parentNode,i=parseInt(T(e,"padding-bottom"))+parseInt(T(e,"padding-top"));return e.clientHeight-i},T=n.getStyle=function(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)},E=(n.getMaximumSize=n.getMaximumWidth,n.retinaScale=function(t){var e=t.ctx,i=t.canvas.width,n=t.canvas.height;window.devicePixelRatio&&(e.canvas.style.width=i+"px",e.canvas.style.height=n+"px",e.canvas.height=n*window.devicePixelRatio,e.canvas.width=i*window.devicePixelRatio,e.scale(window.devicePixelRatio,window.devicePixelRatio))}),A=n.clear=function(t){t.ctx.clearRect(0,0,t.width,t.height)},L=n.fontString=function(t,e,i){return e+" "+t+"px "+i},F=n.longestText=function(t,e,i){t.font=e;var n=0;return o(i,function(e){var i=t.measureText(e).width;n=i>n?i:n}),n},M=n.drawRoundedRectangle=function(t,e,i,n,o,s){t.beginPath(),t.moveTo(e+s,i),t.lineTo(e+n-s,i),t.quadraticCurveTo(e+n,i,e+n,i+s),t.lineTo(e+n,i+o-s),t.quadraticCurveTo(e+n,i+o,e+n-s,i+o),t.lineTo(e+s,i+o),t.quadraticCurveTo(e,i+o,e,i+o-s),t.lineTo(e,i+s),t.quadraticCurveTo(e,i,e+s,i),t.closePath()};i.instances={},i.Type=function(t,e,n){this.options=e,this.chart=n,this.id=p(),i.instances[this.id]=this,e.responsive&&this.resize(),this.initialize.call(this,t)},a(i.Type.prototype,{initialize:function(){return this},clear:function(){return A(this.chart),this},stop:function(){return i.animationService.cancelAnimation(this),this},resize:function(t){this.stop();var e=this.chart.canvas,i=I(this.chart.canvas),n=this.options.maintainAspectRatio?i/this.chart.aspectRatio:_(this.chart.canvas);return e.width=this.chart.width=i,e.height=this.chart.height=n,E(this.chart),"function"==typeof t&&t.apply(this,Array.prototype.slice.call(arguments,1)),this},reflow:d,render:function(t){if(t&&this.reflow(),this.options.animation&&!t){var e=new i.Animation;e.numSteps=this.options.animationSteps,e.easing=this.options.animationEasing,e.render=function(t,e){var i=n.easingEffects[e.easing],o=e.currentStep/e.numSteps,s=i(o);t.draw(s,o,e.currentStep)},e.onAnimationProgress=this.options.onAnimationProgress,e.onAnimationComplete=this.options.onAnimationComplete,i.animationService.addAnimation(this,e)}else this.draw(),this.options.onAnimationComplete.call(this);return this},generateLegend:function(){return y(this.options.legendTemplate,this)},destroy:function(){this.clear(),$(this,this.events);var t=this.chart.canvas;t.width=this.chart.width,t.height=this.chart.height,t.style.removeProperty?(t.style.removeProperty("width"),t.style.removeProperty("height")):(t.style.removeAttribute("width"),t.style.removeAttribute("height")),delete i.instances[this.id]},showTooltip:function(t,e){"undefined"==typeof this.activeElements&&(this.activeElements=[]);var s=function(t){var e=!1;return t.length!==this.activeElements.length?e=!0:(o(t,function(t,i){t!==this.activeElements[i]&&(e=!0)},this),e)}.call(this,t);if(s||e){if(this.activeElements=t,this.draw(),this.options.customTooltips&&this.options.customTooltips(!1),t.length>0)if(this.datasets&&this.datasets.length>1){for(var a,r,c=this.datasets.length-1;c>=0&&(a=this.datasets[c].points||this.datasets[c].bars||this.datasets[c].segments,r=l(a,t[0]),-1===r);c--);var d=[],p=[],h=function(t){var e,i,o,s,a,l=[],c=[],h=[];return n.each(this.datasets,function(t){e=t.points||t.bars||t.segments,e[r]&&e[r].hasValue()&&l.push(e[r])}),n.each(l,function(t){c.push(t.x),h.push(t.y),d.push(n.template(this.options.multiTooltipTemplate,t)),p.push({fill:t._saved.fillColor||t.fillColor,stroke:t._saved.strokeColor||t.strokeColor})},this),a=m(h),o=f(h),s=m(c),i=f(c),{x:s>this.chart.width/2?s:i,y:(a+o)/2}}.call(this,r);new i.MultiTooltip({x:h.x,y:h.y,xPadding:this.options.tooltipXPadding,yPadding:this.options.tooltipYPadding,xOffset:this.options.tooltipXOffset,fillColor:this.options.tooltipFillColor,textColor:this.options.tooltipFontColor,fontFamily:this.options.tooltipFontFamily,fontStyle:this.options.tooltipFontStyle,fontSize:this.options.tooltipFontSize,titleTextColor:this.options.tooltipTitleFontColor,titleFontFamily:this.options.tooltipTitleFontFamily,titleFontStyle:this.options.tooltipTitleFontStyle,titleFontSize:this.options.tooltipTitleFontSize,cornerRadius:this.options.tooltipCornerRadius,labels:d,legendColors:p,legendColorBackground:this.options.multiTooltipKeyBackground,title:y(this.options.tooltipTitleTemplate,t[0]),chart:this.chart,ctx:this.chart.ctx,custom:this.options.customTooltips}).draw()}else o(t,function(t){var e=t.tooltipPosition();new i.Tooltip({x:Math.round(e.x),y:Math.round(e.y),xPadding:this.options.tooltipXPadding,yPadding:this.options.tooltipYPadding,fillColor:this.options.tooltipFillColor,textColor:this.options.tooltipFontColor,fontFamily:this.options.tooltipFontFamily,fontStyle:this.options.tooltipFontStyle,fontSize:this.options.tooltipFontSize,caretHeight:this.options.tooltipCaretSize,cornerRadius:this.options.tooltipCornerRadius,text:y(this.options.tooltipTemplate,t),chart:this.chart,custom:this.options.customTooltips}).draw()},this);return this}},toBase64Image:function(){return this.chart.canvas.toDataURL.apply(this.chart.canvas,arguments)}}),i.Type.extend=function(t){var e=this,n=function(){return e.apply(this,arguments)};if(n.prototype=s(e.prototype),a(n.prototype,t),n.extend=i.Type.extend,t.name||e.prototype.name){var o=t.name||e.prototype.name,l=i.defaults[e.prototype.name]?s(i.defaults[e.prototype.name]):{};i.defaults[o]=a(l,t.defaults),i.types[o]=n,i.prototype[o]=function(t,e){var s=r(i.defaults.global,i.defaults[o],e||{});return new n(t,s,this)}}else h("Name not provided for this chart, so it hasn't been registered");return e},i.Element=function(t){a(this,t),this.initialize.apply(this,arguments),this.save()},a(i.Element.prototype,{initialize:function(){},restore:function(t){return t?o(t,function(t){this[t]=this._saved[t]},this):a(this,this._saved),this},save:function(){return this._saved=s(this),delete this._saved._saved,this},update:function(t){return o(t,function(t,e){this._saved[e]=this[e],this[e]=t},this),this},transition:function(t,e){return o(t,function(t,i){this[i]=(t-this._saved[i])*e+this._saved[i]},this),this},tooltipPosition:function(){return{x:this.x,y:this.y}},hasValue:function(){return g(this.value)}}),i.Element.extend=c,i.Point=i.Element.extend({display:!0,inRange:function(t,e){var i=this.hitDetectionRadius+this.radius;return Math.pow(t-this.x,2)+Math.pow(e-this.y,2)<Math.pow(i,2)},draw:function(){if(this.display){var t=this.ctx;t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.closePath(),t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWidth,t.fillStyle=this.fillColor,t.fill(),t.stroke()}}}),i.Arc=i.Element.extend({inRange:function(t,e){var i=n.getAngleFromPoint(this,{x:t,y:e}),o=i.angle%(2*Math.PI),s=(2*Math.PI+this.startAngle)%(2*Math.PI),a=(2*Math.PI+this.endAngle)%(2*Math.PI)||360,r=s>a?a>=o||o>=s:o>=s&&a>=o,l=i.distance>=this.innerRadius&&i.distance<=this.outerRadius;return r&&l},tooltipPosition:function(){var t=this.startAngle+(this.endAngle-this.startAngle)/2,e=(this.outerRadius-this.innerRadius)/2+this.innerRadius;return{x:this.x+Math.cos(t)*e,y:this.y+Math.sin(t)*e}},draw:function(t){var e=this.ctx;e.beginPath(),e.arc(this.x,this.y,this.outerRadius<0?0:this.outerRadius,this.startAngle,this.endAngle),e.arc(this.x,this.y,this.innerRadius<0?0:this.innerRadius,this.endAngle,this.startAngle,!0),e.closePath(),e.strokeStyle=this.strokeColor,e.lineWidth=this.strokeWidth,e.fillStyle=this.fillColor,e.fill(),e.lineJoin="bevel",this.showStroke&&e.stroke()}}),i.Rectangle=i.Element.extend({draw:function(){var t=this.ctx,e=this.width/2,i=this.x-e,n=this.x+e,o=this.base-(this.base-this.y),s=this.strokeWidth/2;this.showStroke&&(i+=s,n-=s,o+=s),t.beginPath(),t.fillStyle=this.fillColor,t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWidth,t.moveTo(i,this.base),t.lineTo(i,o),t.lineTo(n,o),t.lineTo(n,this.base),t.fill(),this.showStroke&&t.stroke()},height:function(){return this.base-this.y},inRange:function(t,e){return t>=this.x-this.width/2&&t<=this.x+this.width/2&&e>=this.y&&e<=this.base}}),i.Animation=i.Element.extend({currentStep:null,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),i.Tooltip=i.Element.extend({draw:function(){var t=this.chart.ctx;t.font=L(this.fontSize,this.fontStyle,this.fontFamily),this.xAlign="center",this.yAlign="above";var e=this.caretPadding=2,i=t.measureText(this.text).width+2*this.xPadding,n=this.fontSize+2*this.yPadding,o=n+this.caretHeight+e;this.x+i/2>this.chart.width?this.xAlign="left":this.x-i/2<0&&(this.xAlign="right"),this.y-o<0&&(this.yAlign="below");var s=this.x-i/2,a=this.y-o;if(t.fillStyle=this.fillColor,this.custom)this.custom(this);else{switch(this.yAlign){case"above":t.beginPath(),t.moveTo(this.x,this.y-e),t.lineTo(this.x+this.caretHeight,this.y-(e+this.caretHeight)),t.lineTo(this.x-this.caretHeight,this.y-(e+this.caretHeight)),t.closePath(),t.fill();break;case"below":a=this.y+e+this.caretHeight,t.beginPath(),t.moveTo(this.x,this.y+e),t.lineTo(this.x+this.caretHeight,this.y+e+this.caretHeight),t.lineTo(this.x-this.caretHeight,this.y+e+this.caretHeight),t.closePath(),t.fill()}switch(this.xAlign){case"left":s=this.x-i+(this.cornerRadius+this.caretHeight);break;case"right":s=this.x-(this.cornerRadius+this.caretHeight)}M(t,s,a,i,n,this.cornerRadius),t.fill(),t.fillStyle=this.textColor,t.textAlign="center",t.textBaseline="middle",t.fillText(this.text,s+i/2,a+n/2)}}}),i.MultiTooltip=i.Element.extend({initialize:function(){this.font=L(this.fontSize,this.fontStyle,this.fontFamily),this.titleFont=L(this.titleFontSize,this.titleFontStyle,this.titleFontFamily),this.titleHeight=this.title?1.5*this.titleFontSize:0,this.height=this.labels.length*this.fontSize+(this.labels.length-1)*(this.fontSize/2)+2*this.yPadding+this.titleHeight,this.ctx.font=this.titleFont;var t=this.ctx.measureText(this.title).width,e=F(this.ctx,this.font,this.labels)+this.fontSize+3,i=f([e,t]);this.width=i+2*this.xPadding;var n=this.height/2;this.y-n<0?this.y=n:this.y+n>this.chart.height&&(this.y=this.chart.height-n),this.x>this.chart.width/2?this.x-=this.xOffset+this.width:this.x+=this.xOffset},getLineHeight:function(t){var e=this.y-this.height/2+this.yPadding,i=t-1;return 0===t?e+this.titleHeight/3:e+(1.5*this.fontSize*i+this.fontSize/2)+this.titleHeight},draw:function(){if(this.custom)this.custom(this);else{M(this.ctx,this.x,this.y-this.height/2,this.width,this.height,this.cornerRadius);var t=this.ctx;t.fillStyle=this.fillColor,t.fill(),t.closePath(),t.textAlign="left",t.textBaseline="middle",t.fillStyle=this.titleTextColor,t.font=this.titleFont,t.fillText(this.title,this.x+this.xPadding,this.getLineHeight(0)),t.font=this.font,n.each(this.labels,function(e,i){t.fillStyle=this.textColor,t.fillText(e,this.x+this.xPadding+this.fontSize+3,this.getLineHeight(i+1)),t.fillStyle=this.legendColorBackground,t.fillRect(this.x+this.xPadding,this.getLineHeight(i+1)-this.fontSize/2,this.fontSize,this.fontSize),t.fillStyle=this.legendColors[i].fill,t.fillRect(this.x+this.xPadding,this.getLineHeight(i+1)-this.fontSize/2,this.fontSize,this.fontSize)},this)}}}),i.Scale=i.Element.extend({initialize:function(){this.fit()},buildYLabels:function(){this.yLabels=[];for(var t=v(this.stepValue),e=0;e<=this.steps;e++)this.yLabels.push(y(this.templateString,{value:(this.min+e*this.stepValue).toFixed(t)}));this.yLabelWidth=this.display&&this.showLabels?F(this.ctx,this.font,this.yLabels)+10:0},addXLabel:function(t){this.xLabels.push(t),this.valuesCount++,this.fit()},removeXLabel:function(){this.xLabels.shift(),this.valuesCount--,this.fit()},fit:function(){this.startPoint=this.display?this.fontSize:0,this.endPoint=this.display?this.height-1.5*this.fontSize-5:this.height,this.startPoint+=this.padding,this.endPoint-=this.padding;var t,e=this.endPoint,i=this.endPoint-this.startPoint;for(this.calculateYRange(i),this.buildYLabels(),this.calculateXLabelRotation();i>this.endPoint-this.startPoint;)i=this.endPoint-this.startPoint,t=this.yLabelWidth,this.calculateYRange(i),this.buildYLabels(),t<this.yLabelWidth&&(this.endPoint=e,this.calculateXLabelRotation())},calculateXLabelRotation:function(){this.ctx.font=this.font;var t,e,i=this.ctx.measureText(this.xLabels[0]).width,n=this.ctx.measureText(this.xLabels[this.xLabels.length-1]).width;if(this.xScalePaddingRight=n/2+3,this.xScalePaddingLeft=i/2>this.yLabelWidth?i/2:this.yLabelWidth,this.xLabelRotation=0,this.display){var o,s=F(this.ctx,this.font,this.xLabels);this.xLabelWidth=s;for(var a=Math.floor(this.calculateX(1)-this.calculateX(0))-6;this.xLabelWidth>a&&0===this.xLabelRotation||this.xLabelWidth>a&&this.xLabelRotation<=90&&this.xLabelRotation>0;)o=Math.cos(b(this.xLabelRotation)),t=o*i,e=o*n,t+this.fontSize/2>this.yLabelWidth&&(this.xScalePaddingLeft=t+this.fontSize/2),this.xScalePaddingRight=this.fontSize/2,this.xLabelRotation++,this.xLabelWidth=o*s;this.xLabelRotation>0&&(this.endPoint-=Math.sin(b(this.xLabelRotation))*s+3)}else this.xLabelWidth=0,this.xScalePaddingRight=this.padding,this.xScalePaddingLeft=this.padding},calculateYRange:d,drawingArea:function(){return this.startPoint-this.endPoint},calculateY:function(t){var e=this.drawingArea()/(this.min-this.max);return this.endPoint-e*(t-this.min)},calculateX:function(t){var e=(this.xLabelRotation>0,this.width-(this.xScalePaddingLeft+this.xScalePaddingRight)),i=e/Math.max(this.valuesCount-(this.offsetGridLines?0:1),1),n=i*t+this.xScalePaddingLeft;return this.offsetGridLines&&(n+=i/2),Math.round(n)},update:function(t){n.extend(this,t),this.fit()},draw:function(){var t=this.ctx,e=(this.endPoint-this.startPoint)/this.steps,i=Math.round(this.xScalePaddingLeft);this.display&&(t.fillStyle=this.textColor,t.font=this.font,o(this.yLabels,function(o,s){var a=this.endPoint-e*s,r=Math.round(a),l=this.showHorizontalLines;t.textAlign="right",t.textBaseline="middle",this.showLabels&&t.fillText(o,i-10,a),0!==s||l||(l=!0),l&&t.beginPath(),s>0?(t.lineWidth=this.gridLineWidth,t.strokeStyle=this.gridLineColor):(t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor),r+=n.aliasPixel(t.lineWidth),l&&(t.moveTo(i,r),t.lineTo(this.width,r),t.stroke(),t.closePath()),t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor,t.beginPath(),t.moveTo(i-5,r),t.lineTo(i,r),t.stroke(),t.closePath()},this),o(this.xLabels,function(e,i){var n=this.calculateX(i)+w(this.lineWidth),o=this.calculateX(i-(this.offsetGridLines?.5:0))+w(this.lineWidth),s=this.xLabelRotation>0,a=this.showVerticalLines;0!==i||a||(a=!0),a&&t.beginPath(),i>0?(t.lineWidth=this.gridLineWidth,t.strokeStyle=this.gridLineColor):(t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor),a&&(t.moveTo(o,this.endPoint),t.lineTo(o,this.startPoint-3),t.stroke(),t.closePath()),t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor,t.beginPath(),t.moveTo(o,this.endPoint),t.lineTo(o,this.endPoint+5),t.stroke(),t.closePath(),t.save(),t.translate(n,s?this.endPoint+12:this.endPoint+8),
t.rotate(-1*b(this.xLabelRotation)),t.font=this.font,t.textAlign=s?"right":"center",t.textBaseline=s?"middle":"top",t.fillText(e,0,0),t.restore()},this))}}),i.RadialScale=i.Element.extend({initialize:function(){this.size=m([this.height,this.width]),this.drawingArea=this.display?this.size/2-(this.fontSize/2+this.backdropPaddingY):this.size/2},calculateCenterOffset:function(t){var e=this.drawingArea/(this.max-this.min);return(t-this.min)*e},update:function(){this.lineArc?this.drawingArea=this.display?this.size/2-(this.fontSize/2+this.backdropPaddingY):this.size/2:this.setScaleSize(),this.buildYLabels()},buildYLabels:function(){this.yLabels=[];for(var t=v(this.stepValue),e=0;e<=this.steps;e++)this.yLabels.push(y(this.templateString,{value:(this.min+e*this.stepValue).toFixed(t)}))},getCircumference:function(){return 2*Math.PI/this.valuesCount},setScaleSize:function(){var t,e,i,n,o,s,a,r,l,c,d,p,h=m([this.height/2-this.pointLabelFontSize-5,this.width/2]),u=this.width,f=0;for(this.ctx.font=L(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily),e=0;e<this.valuesCount;e++)t=this.getPointPosition(e,h),i=this.ctx.measureText(y(this.templateString,{value:this.labels[e]})).width+5,0===e||e===this.valuesCount/2?(n=i/2,t.x+n>u&&(u=t.x+n,o=e),t.x-n<f&&(f=t.x-n,a=e)):e<this.valuesCount/2?t.x+i>u&&(u=t.x+i,o=e):e>this.valuesCount/2&&t.x-i<f&&(f=t.x-i,a=e);l=f,c=Math.ceil(u-this.width),s=this.getIndexAngle(o),r=this.getIndexAngle(a),d=c/Math.sin(s+Math.PI/2),p=l/Math.sin(r+Math.PI/2),d=g(d)?d:0,p=g(p)?p:0,this.drawingArea=h-(p+d)/2,this.setCenterPoint(p,d)},setCenterPoint:function(t,e){var i=this.width-e-this.drawingArea,n=t+this.drawingArea;this.xCenter=(n+i)/2,this.yCenter=this.height/2},getIndexAngle:function(t){var e=2*Math.PI/this.valuesCount;return t*e-Math.PI/2},getPointPosition:function(t,e){var i=this.getIndexAngle(t);return{x:Math.cos(i)*e+this.xCenter,y:Math.sin(i)*e+this.yCenter}},draw:function(){if(this.display){var t=this.ctx;if(o(this.yLabels,function(e,i){if(i>0){var n,o=i*(this.drawingArea/this.steps),s=this.yCenter-o;if(this.lineWidth>0)if(t.strokeStyle=this.lineColor,t.lineWidth=this.lineWidth,this.lineArc)t.beginPath(),t.arc(this.xCenter,this.yCenter,o,0,2*Math.PI),t.closePath(),t.stroke();else{t.beginPath();for(var a=0;a<this.valuesCount;a++)n=this.getPointPosition(a,this.calculateCenterOffset(this.min+i*this.stepValue)),0===a?t.moveTo(n.x,n.y):t.lineTo(n.x,n.y);t.closePath(),t.stroke()}if(this.showLabels){if(t.font=L(this.fontSize,this.fontStyle,this.fontFamily),this.showLabelBackdrop){var r=t.measureText(e).width;t.fillStyle=this.backdropColor,t.fillRect(this.xCenter-r/2-this.backdropPaddingX,s-this.fontSize/2-this.backdropPaddingY,r+2*this.backdropPaddingX,this.fontSize+2*this.backdropPaddingY)}t.textAlign="center",t.textBaseline="middle",t.fillStyle=this.fontColor,t.fillText(e,this.xCenter,s)}}},this),!this.lineArc){t.lineWidth=this.angleLineWidth,t.strokeStyle=this.angleLineColor;for(var e=this.valuesCount-1;e>=0;e--){var i=null,n=null;if(this.angleLineWidth>0&&(i=this.calculateCenterOffset(this.max),n=this.getPointPosition(e,i),t.beginPath(),t.moveTo(this.xCenter,this.yCenter),t.lineTo(n.x,n.y),t.stroke(),t.closePath()),this.backgroundColors&&this.backgroundColors.length==this.valuesCount){null==i&&(i=this.calculateCenterOffset(this.max)),null==n&&(n=this.getPointPosition(e,i));var s=this.getPointPosition(0===e?this.valuesCount-1:e-1,i),a=this.getPointPosition(e===this.valuesCount-1?0:e+1,i),r={x:(s.x+n.x)/2,y:(s.y+n.y)/2},l={x:(n.x+a.x)/2,y:(n.y+a.y)/2};t.beginPath(),t.moveTo(this.xCenter,this.yCenter),t.lineTo(r.x,r.y),t.lineTo(n.x,n.y),t.lineTo(l.x,l.y),t.fillStyle=this.backgroundColors[e],t.fill(),t.closePath()}var c=this.getPointPosition(e,this.calculateCenterOffset(this.max)+5);t.font=L(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily),t.fillStyle=this.pointLabelFontColor;var d=this.labels.length,p=this.labels.length/2,h=p/2,u=h>e||e>d-h,g=e===h||e===d-h;0===e?t.textAlign="center":e===p?t.textAlign="center":p>e?t.textAlign="left":t.textAlign="right",g?t.textBaseline="middle":u?t.textBaseline="bottom":t.textBaseline="top",t.fillText(this.labels[e],c.x,c.y)}}}}}),i.animationService={frameDuration:17,animations:[],dropFrames:0,addAnimation:function(t,e){for(var i=0;i<this.animations.length;++i)if(this.animations[i].chartInstance===t)return void(this.animations[i].animationObject=e);this.animations.push({chartInstance:t,animationObject:e}),1==this.animations.length&&n.requestAnimFrame.call(window,this.digestWrapper)},cancelAnimation:function(t){var e=n.findNextWhere(this.animations,function(e){return e.chartInstance===t});e&&this.animations.splice(e,1)},digestWrapper:function(){i.animationService.startDigest.call(i.animationService)},startDigest:function(){var t=Date.now(),e=0;this.dropFrames>1&&(e=Math.floor(this.dropFrames),this.dropFrames-=e);for(var i=0;i<this.animations.length;i++)null===this.animations[i].animationObject.currentStep&&(this.animations[i].animationObject.currentStep=0),this.animations[i].animationObject.currentStep+=1+e,this.animations[i].animationObject.currentStep>this.animations[i].animationObject.numSteps&&(this.animations[i].animationObject.currentStep=this.animations[i].animationObject.numSteps),this.animations[i].animationObject.render(this.animations[i].chartInstance,this.animations[i].animationObject),this.animations[i].animationObject.currentStep==this.animations[i].animationObject.numSteps&&(this.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance),this.animations.splice(i,1),i--);var o=Date.now(),s=o-t-this.frameDuration,a=s/this.frameDuration;a>1&&(this.dropFrames+=a),this.animations.length>0&&n.requestAnimFrame.call(window,this.digestWrapper)}},n.addEvent(window,"resize",function(){var t;return function(){clearTimeout(t),t=setTimeout(function(){o(i.instances,function(t){t.options.responsive&&t.resize(t.render,!0)})},50)}}()),u?define(function(){return i}):"object"==typeof module&&module.exports&&(module.exports=i),t.Chart=i,i.noConflict=function(){return t.Chart=e,i}}).call(this),function(){"use strict";var t=this,e=t.Chart,i=e.helpers,n={scaleBeginAtZero:!0,scaleShowGridLines:!0,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,scaleShowHorizontalLines:!0,scaleShowVerticalLines:!0,barShowStroke:!0,barStrokeWidth:2,barValueSpacing:5,barDatasetSpacing:1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>'};e.Type.extend({name:"Bar",defaults:n,initialize:function(t){var n=this.options;this.ScaleClass=e.Scale.extend({offsetGridLines:!0,calculateBarX:function(t,e,i){var o=this.calculateBaseWidth(),s=this.calculateX(i)-o/2,a=this.calculateBarWidth(t);return s+a*e+e*n.barDatasetSpacing+a/2},calculateBaseWidth:function(){return this.calculateX(1)-this.calculateX(0)-2*n.barValueSpacing},calculateBarWidth:function(t){var e=this.calculateBaseWidth()-(t-1)*n.barDatasetSpacing;return e/t}}),this.datasets=[],this.options.showTooltips&&i.bindEvents(this,this.options.tooltipEvents,function(t){var e="mouseout"!==t.type?this.getBarsAtEvent(t):[];this.eachBars(function(t){t.restore(["fillColor","strokeColor"])}),i.each(e,function(t){t.fillColor=t.highlightFill,t.strokeColor=t.highlightStroke}),this.showTooltip(e)}),this.BarClass=e.Rectangle.extend({strokeWidth:this.options.barStrokeWidth,showStroke:this.options.barShowStroke,ctx:this.chart.ctx}),i.each(t.datasets,function(e,n){var o={label:e.label||null,fillColor:e.fillColor,strokeColor:e.strokeColor,bars:[]};this.datasets.push(o),i.each(e.data,function(i,n){o.bars.push(new this.BarClass({value:i,label:t.labels[n],datasetLabel:e.label,strokeColor:e.strokeColor,fillColor:e.fillColor,highlightFill:e.highlightFill||e.fillColor,highlightStroke:e.highlightStroke||e.strokeColor}))},this)},this),this.buildScale(t.labels),this.BarClass.prototype.base=this.scale.endPoint,this.eachBars(function(t,e,n){i.extend(t,{width:this.scale.calculateBarWidth(this.datasets.length),x:this.scale.calculateBarX(this.datasets.length,n,e),y:this.scale.endPoint}),t.save()},this),this.render()},update:function(){this.scale.update(),i.each(this.activeElements,function(t){t.restore(["fillColor","strokeColor"])}),this.eachBars(function(t){t.save()}),this.render()},eachBars:function(t){i.each(this.datasets,function(e,n){i.each(e.bars,t,this,n)},this)},getBarsAtEvent:function(t){for(var e,n=[],o=i.getRelativePosition(t),s=function(t){n.push(t.bars[e])},a=0;a<this.datasets.length;a++)for(e=0;e<this.datasets[a].bars.length;e++)if(this.datasets[a].bars[e].inRange(o.x,o.y))return i.each(this.datasets,s),n;return n},buildScale:function(t){var e=this,n=function(){var t=[];return e.eachBars(function(e){t.push(e.value)}),t},o={templateString:this.options.scaleLabel,height:this.chart.height,width:this.chart.width,ctx:this.chart.ctx,textColor:this.options.scaleFontColor,fontSize:this.options.scaleFontSize,fontStyle:this.options.scaleFontStyle,fontFamily:this.options.scaleFontFamily,valuesCount:t.length,beginAtZero:this.options.scaleBeginAtZero,integersOnly:this.options.scaleIntegersOnly,calculateYRange:function(t){var e=i.calculateScaleRange(n(),t,this.fontSize,this.beginAtZero,this.integersOnly);i.extend(this,e)},xLabels:t,font:i.fontString(this.options.scaleFontSize,this.options.scaleFontStyle,this.options.scaleFontFamily),lineWidth:this.options.scaleLineWidth,lineColor:this.options.scaleLineColor,showHorizontalLines:this.options.scaleShowHorizontalLines,showVerticalLines:this.options.scaleShowVerticalLines,gridLineWidth:this.options.scaleShowGridLines?this.options.scaleGridLineWidth:0,gridLineColor:this.options.scaleShowGridLines?this.options.scaleGridLineColor:"rgba(0,0,0,0)",padding:this.options.showScale?0:this.options.barShowStroke?this.options.barStrokeWidth:0,showLabels:this.options.scaleShowLabels,display:this.options.showScale};this.options.scaleOverride&&i.extend(o,{calculateYRange:i.noop,steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}),this.scale=new this.ScaleClass(o)},addData:function(t,e){i.each(t,function(t,i){this.datasets[i].bars.push(new this.BarClass({value:t,label:e,datasetLabel:this.datasets[i].label,x:this.scale.calculateBarX(this.datasets.length,i,this.scale.valuesCount+1),y:this.scale.endPoint,width:this.scale.calculateBarWidth(this.datasets.length),base:this.scale.endPoint,strokeColor:this.datasets[i].strokeColor,fillColor:this.datasets[i].fillColor}))},this),this.scale.addXLabel(e),this.update()},removeData:function(){this.scale.removeXLabel(),i.each(this.datasets,function(t){t.bars.shift()},this),this.update()},reflow:function(){i.extend(this.BarClass.prototype,{y:this.scale.endPoint,base:this.scale.endPoint});var t=i.extend({height:this.chart.height,width:this.chart.width});this.scale.update(t)},draw:function(t){var e=t||1;this.clear(),this.chart.ctx,this.scale.draw(e),i.each(this.datasets,function(t,n){i.each(t.bars,function(t,i){t.hasValue()&&(t.base=this.scale.endPoint,t.transition({x:this.scale.calculateBarX(this.datasets.length,n,i),y:this.scale.calculateY(t.value),width:this.scale.calculateBarWidth(this.datasets.length)},e).draw())},this)},this)}})}.call(this),function(){"use strict";var t=this,e=t.Chart,i=e.helpers,n={segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:50,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>'};e.Type.extend({name:"Doughnut",defaults:n,initialize:function(t){this.segments=[],this.outerRadius=(i.min([this.chart.width,this.chart.height])-this.options.segmentStrokeWidth/2)/2,this.SegmentArc=e.Arc.extend({ctx:this.chart.ctx,x:this.chart.width/2,y:this.chart.height/2}),this.options.showTooltips&&i.bindEvents(this,this.options.tooltipEvents,function(t){var e="mouseout"!==t.type?this.getSegmentsAtEvent(t):[];i.each(this.segments,function(t){t.restore(["fillColor"])}),i.each(e,function(t){t.fillColor=t.highlightColor}),this.showTooltip(e)}),this.calculateTotal(t),i.each(t,function(e,i){e.color||(e.color="hsl("+360*i/t.length+", 100%, 50%)"),this.addData(e,i,!0)},this),this.render()},getSegmentsAtEvent:function(t){var e=[],n=i.getRelativePosition(t);return i.each(this.segments,function(t){t.inRange(n.x,n.y)&&e.push(t)},this),e},addData:function(t,i,n){var o=void 0!==i?i:this.segments.length;"undefined"==typeof t.color&&(t.color=e.defaults.global.segmentColorDefault[o%e.defaults.global.segmentColorDefault.length],t.highlight=e.defaults.global.segmentHighlightColorDefaults[o%e.defaults.global.segmentHighlightColorDefaults.length]),this.segments.splice(o,0,new this.SegmentArc({value:t.value,outerRadius:this.options.animateScale?0:this.outerRadius,innerRadius:this.options.animateScale?0:this.outerRadius/100*this.options.percentageInnerCutout,fillColor:t.color,highlightColor:t.highlight||t.color,showStroke:this.options.segmentShowStroke,strokeWidth:this.options.segmentStrokeWidth,strokeColor:this.options.segmentStrokeColor,startAngle:1.5*Math.PI,circumference:this.options.animateRotate?0:this.calculateCircumference(t.value),label:t.label})),n||(this.reflow(),this.update())},calculateCircumference:function(t){return this.total>0?2*Math.PI*(t/this.total):0},calculateTotal:function(t){this.total=0,i.each(t,function(t){this.total+=Math.abs(t.value)},this)},update:function(){this.calculateTotal(this.segments),i.each(this.activeElements,function(t){t.restore(["fillColor"])}),i.each(this.segments,function(t){t.save()}),this.render()},removeData:function(t){var e=i.isNumber(t)?t:this.segments.length-1;this.segments.splice(e,1),this.reflow(),this.update()},reflow:function(){i.extend(this.SegmentArc.prototype,{x:this.chart.width/2,y:this.chart.height/2}),this.outerRadius=(i.min([this.chart.width,this.chart.height])-this.options.segmentStrokeWidth/2)/2,i.each(this.segments,function(t){t.update({outerRadius:this.outerRadius,innerRadius:this.outerRadius/100*this.options.percentageInnerCutout})},this)},draw:function(t){var e=t?t:1;this.clear(),i.each(this.segments,function(t,i){t.transition({circumference:this.calculateCircumference(t.value),outerRadius:this.outerRadius,innerRadius:this.outerRadius/100*this.options.percentageInnerCutout},e),t.endAngle=t.startAngle+t.circumference,t.draw(),0===i&&(t.startAngle=1.5*Math.PI),i<this.segments.length-1&&(this.segments[i+1].startAngle=t.endAngle)},this)}}),e.types.Doughnut.extend({name:"Pie",defaults:i.merge(n,{percentageInnerCutout:0})})}.call(this),function(){"use strict";var t=this,e=t.Chart,i=e.helpers,n={scaleShowGridLines:!0,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,scaleShowHorizontalLines:!0,scaleShowVerticalLines:!0,bezierCurve:!0,bezierCurveTension:.4,pointDot:!0,pointDotRadius:4,pointDotStrokeWidth:1,pointHitDetectionRadius:20,datasetStroke:!0,datasetStrokeWidth:2,datasetFill:!0,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].strokeColor%>"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>',offsetGridLines:!1};e.Type.extend({name:"Line",defaults:n,initialize:function(t){this.PointClass=e.Point.extend({offsetGridLines:this.options.offsetGridLines,strokeWidth:this.options.pointDotStrokeWidth,radius:this.options.pointDotRadius,display:this.options.pointDot,hitDetectionRadius:this.options.pointHitDetectionRadius,ctx:this.chart.ctx,inRange:function(t){return Math.pow(t-this.x,2)<Math.pow(this.radius+this.hitDetectionRadius,2)}}),this.datasets=[],this.options.showTooltips&&i.bindEvents(this,this.options.tooltipEvents,function(t){var e="mouseout"!==t.type?this.getPointsAtEvent(t):[];this.eachPoints(function(t){t.restore(["fillColor","strokeColor"])}),i.each(e,function(t){t.fillColor=t.highlightFill,t.strokeColor=t.highlightStroke}),this.showTooltip(e)}),i.each(t.datasets,function(e){var n={label:e.label||null,fillColor:e.fillColor,strokeColor:e.strokeColor,pointColor:e.pointColor,pointStrokeColor:e.pointStrokeColor,points:[]};this.datasets.push(n),i.each(e.data,function(i,o){n.points.push(new this.PointClass({value:i,label:t.labels[o],datasetLabel:e.label,strokeColor:e.pointStrokeColor,fillColor:e.pointColor,highlightFill:e.pointHighlightFill||e.pointColor,highlightStroke:e.pointHighlightStroke||e.pointStrokeColor}))},this),this.buildScale(t.labels),this.eachPoints(function(t,e){i.extend(t,{x:this.scale.calculateX(e),y:this.scale.endPoint}),t.save()},this)},this),this.render()},update:function(){this.scale.update(),i.each(this.activeElements,function(t){t.restore(["fillColor","strokeColor"])}),this.eachPoints(function(t){t.save()}),this.render()},eachPoints:function(t){i.each(this.datasets,function(e){i.each(e.points,t,this)},this)},getPointsAtEvent:function(t){var e=[],n=i.getRelativePosition(t);return i.each(this.datasets,function(t){i.each(t.points,function(t){t.inRange(n.x,n.y)&&e.push(t)})},this),e},buildScale:function(t){var n=this,o=function(){var t=[];return n.eachPoints(function(e){t.push(e.value)}),t},s={templateString:this.options.scaleLabel,height:this.chart.height,width:this.chart.width,ctx:this.chart.ctx,textColor:this.options.scaleFontColor,offsetGridLines:this.options.offsetGridLines,fontSize:this.options.scaleFontSize,fontStyle:this.options.scaleFontStyle,fontFamily:this.options.scaleFontFamily,valuesCount:t.length,beginAtZero:this.options.scaleBeginAtZero,integersOnly:this.options.scaleIntegersOnly,calculateYRange:function(t){var e=i.calculateScaleRange(o(),t,this.fontSize,this.beginAtZero,this.integersOnly);i.extend(this,e)},xLabels:t,font:i.fontString(this.options.scaleFontSize,this.options.scaleFontStyle,this.options.scaleFontFamily),lineWidth:this.options.scaleLineWidth,lineColor:this.options.scaleLineColor,showHorizontalLines:this.options.scaleShowHorizontalLines,showVerticalLines:this.options.scaleShowVerticalLines,gridLineWidth:this.options.scaleShowGridLines?this.options.scaleGridLineWidth:0,gridLineColor:this.options.scaleShowGridLines?this.options.scaleGridLineColor:"rgba(0,0,0,0)",padding:this.options.showScale?0:this.options.pointDotRadius+this.options.pointDotStrokeWidth,showLabels:this.options.scaleShowLabels,display:this.options.showScale};this.options.scaleOverride&&i.extend(s,{calculateYRange:i.noop,steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}),this.scale=new e.Scale(s)},addData:function(t,e){i.each(t,function(t,i){this.datasets[i].points.push(new this.PointClass({value:t,label:e,datasetLabel:this.datasets[i].label,x:this.scale.calculateX(this.scale.valuesCount+1),y:this.scale.endPoint,strokeColor:this.datasets[i].pointStrokeColor,fillColor:this.datasets[i].pointColor}))},this),this.scale.addXLabel(e),this.update()},removeData:function(){this.scale.removeXLabel(),i.each(this.datasets,function(t){t.points.shift()},this),this.update()},reflow:function(){var t=i.extend({height:this.chart.height,width:this.chart.width});this.scale.update(t)},draw:function(t){var e=t||1;this.clear();var n=this.chart.ctx,o=function(t){return null!==t.value},s=function(t,e,n){return i.findNextWhere(e,o,n)||t},a=function(t,e,n){return i.findPreviousWhere(e,o,n)||t};this.scale&&(this.scale.draw(e),i.each(this.datasets,function(t){var r=i.where(t.points,o);i.each(t.points,function(t,i){t.hasValue()&&t.transition({y:this.scale.calculateY(t.value),x:this.scale.calculateX(i)},e)},this),this.options.bezierCurve&&i.each(r,function(t,e){var n=e>0&&e<r.length-1?this.options.bezierCurveTension:0;t.controlPoints=i.splineCurve(a(t,r,e),t,s(t,r,e),n),t.controlPoints.outer.y>this.scale.endPoint?t.controlPoints.outer.y=this.scale.endPoint:t.controlPoints.outer.y<this.scale.startPoint&&(t.controlPoints.outer.y=this.scale.startPoint),t.controlPoints.inner.y>this.scale.endPoint?t.controlPoints.inner.y=this.scale.endPoint:t.controlPoints.inner.y<this.scale.startPoint&&(t.controlPoints.inner.y=this.scale.startPoint)},this),n.lineWidth=this.options.datasetStrokeWidth,n.strokeStyle=t.strokeColor,n.beginPath(),i.each(r,function(t,e){if(0===e)n.moveTo(t.x,t.y);else if(this.options.bezierCurve){var i=a(t,r,e);n.bezierCurveTo(i.controlPoints.outer.x,i.controlPoints.outer.y,t.controlPoints.inner.x,t.controlPoints.inner.y,t.x,t.y)}else n.lineTo(t.x,t.y)},this),this.options.datasetStroke&&n.stroke(),this.options.datasetFill&&r.length>0&&(n.lineTo(r[r.length-1].x,this.scale.endPoint),n.lineTo(r[0].x,this.scale.endPoint),n.fillStyle=t.fillColor,n.closePath(),n.fill()),i.each(r,function(t){t.draw()})},this))}})}.call(this),function(){"use strict";var t=this,e=t.Chart,i=e.helpers,n={scaleShowLabelBackdrop:!0,scaleBackdropColor:"rgba(255,255,255,0.75)",scaleBeginAtZero:!0,scaleBackdropPaddingY:2,scaleBackdropPaddingX:2,scaleShowLine:!0,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>'};e.Type.extend({name:"PolarArea",defaults:n,initialize:function(t){this.segments=[],this.SegmentArc=e.Arc.extend({showStroke:this.options.segmentShowStroke,strokeWidth:this.options.segmentStrokeWidth,strokeColor:this.options.segmentStrokeColor,ctx:this.chart.ctx,innerRadius:0,x:this.chart.width/2,y:this.chart.height/2}),this.scale=new e.RadialScale({display:this.options.showScale,fontStyle:this.options.scaleFontStyle,fontSize:this.options.scaleFontSize,fontFamily:this.options.scaleFontFamily,fontColor:this.options.scaleFontColor,showLabels:this.options.scaleShowLabels,showLabelBackdrop:this.options.scaleShowLabelBackdrop,backdropColor:this.options.scaleBackdropColor,backdropPaddingY:this.options.scaleBackdropPaddingY,backdropPaddingX:this.options.scaleBackdropPaddingX,lineWidth:this.options.scaleShowLine?this.options.scaleLineWidth:0,lineColor:this.options.scaleLineColor,lineArc:!0,width:this.chart.width,height:this.chart.height,xCenter:this.chart.width/2,yCenter:this.chart.height/2,ctx:this.chart.ctx,templateString:this.options.scaleLabel,valuesCount:t.length}),this.updateScaleRange(t),this.scale.update(),i.each(t,function(t,e){this.addData(t,e,!0)},this),this.options.showTooltips&&i.bindEvents(this,this.options.tooltipEvents,function(t){var e="mouseout"!==t.type?this.getSegmentsAtEvent(t):[];i.each(this.segments,function(t){t.restore(["fillColor"])}),i.each(e,function(t){t.fillColor=t.highlightColor}),this.showTooltip(e)}),this.render()},getSegmentsAtEvent:function(t){var e=[],n=i.getRelativePosition(t);return i.each(this.segments,function(t){t.inRange(n.x,n.y)&&e.push(t)},this),e},addData:function(t,e,i){var n=e||this.segments.length;this.segments.splice(n,0,new this.SegmentArc({fillColor:t.color,highlightColor:t.highlight||t.color,label:t.label,value:t.value,outerRadius:this.options.animateScale?0:this.scale.calculateCenterOffset(t.value),circumference:this.options.animateRotate?0:this.scale.getCircumference(),startAngle:1.5*Math.PI})),i||(this.reflow(),this.update())},removeData:function(t){var e=i.isNumber(t)?t:this.segments.length-1;this.segments.splice(e,1),this.reflow(),this.update()},calculateTotal:function(t){this.total=0,i.each(t,function(t){this.total+=t.value},this),this.scale.valuesCount=this.segments.length},updateScaleRange:function(t){var e=[];i.each(t,function(t){e.push(t.value)});var n=this.options.scaleOverride?{steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}:i.calculateScaleRange(e,i.min([this.chart.width,this.chart.height])/2,this.options.scaleFontSize,this.options.scaleBeginAtZero,this.options.scaleIntegersOnly);i.extend(this.scale,n,{size:i.min([this.chart.width,this.chart.height]),xCenter:this.chart.width/2,yCenter:this.chart.height/2})},update:function(){this.calculateTotal(this.segments),i.each(this.segments,function(t){t.save()}),this.reflow(),this.render()},reflow:function(){i.extend(this.SegmentArc.prototype,{x:this.chart.width/2,y:this.chart.height/2}),this.updateScaleRange(this.segments),this.scale.update(),i.extend(this.scale,{xCenter:this.chart.width/2,yCenter:this.chart.height/2}),i.each(this.segments,function(t){t.update({outerRadius:this.scale.calculateCenterOffset(t.value)})},this)},draw:function(t){var e=t||1;this.clear(),i.each(this.segments,function(t,i){t.transition({circumference:this.scale.getCircumference(),outerRadius:this.scale.calculateCenterOffset(t.value)},e),t.endAngle=t.startAngle+t.circumference,0===i&&(t.startAngle=1.5*Math.PI),i<this.segments.length-1&&(this.segments[i+1].startAngle=t.endAngle),t.draw()},this),this.scale.draw()}})}.call(this),function(){"use strict";var t=this,e=t.Chart,i=e.helpers;e.Type.extend({name:"Radar",defaults:{scaleShowLine:!0,angleShowLineOut:!0,scaleShowLabels:!1,scaleBeginAtZero:!0,angleLineColor:"rgba(0,0,0,.1)",angleLineWidth:1,pointLabelFontFamily:"'Arial'",pointLabelFontStyle:"normal",pointLabelFontSize:10,pointLabelFontColor:"#666",pointDot:!0,pointDotRadius:3,pointDotStrokeWidth:1,pointHitDetectionRadius:20,datasetStroke:!0,datasetStrokeWidth:2,datasetFill:!0,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].strokeColor%>"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>'},initialize:function(t){this.PointClass=e.Point.extend({strokeWidth:this.options.pointDotStrokeWidth,radius:this.options.pointDotRadius,display:this.options.pointDot,hitDetectionRadius:this.options.pointHitDetectionRadius,ctx:this.chart.ctx}),this.datasets=[],this.buildScale(t),this.options.showTooltips&&i.bindEvents(this,this.options.tooltipEvents,function(t){var e="mouseout"!==t.type?this.getPointsAtEvent(t):[];this.eachPoints(function(t){t.restore(["fillColor","strokeColor"])}),i.each(e,function(t){t.fillColor=t.highlightFill,t.strokeColor=t.highlightStroke}),this.showTooltip(e)}),i.each(t.datasets,function(e){var n={label:e.label||null,fillColor:e.fillColor,strokeColor:e.strokeColor,pointColor:e.pointColor,pointStrokeColor:e.pointStrokeColor,points:[]};this.datasets.push(n),i.each(e.data,function(i,o){var s;this.scale.animation||(s=this.scale.getPointPosition(o,this.scale.calculateCenterOffset(i))),n.points.push(new this.PointClass({value:i,label:t.labels[o],datasetLabel:e.label,x:this.options.animation?this.scale.xCenter:s.x,y:this.options.animation?this.scale.yCenter:s.y,strokeColor:e.pointStrokeColor,fillColor:e.pointColor,highlightFill:e.pointHighlightFill||e.pointColor,highlightStroke:e.pointHighlightStroke||e.pointStrokeColor}))},this)},this),this.render()},eachPoints:function(t){i.each(this.datasets,function(e){i.each(e.points,t,this)},this)},getPointsAtEvent:function(t){var e=i.getRelativePosition(t),n=i.getAngleFromPoint({x:this.scale.xCenter,y:this.scale.yCenter},e),o=2*Math.PI/this.scale.valuesCount,s=Math.round((n.angle-1.5*Math.PI)/o),a=[];return(s>=this.scale.valuesCount||0>s)&&(s=0),n.distance<=this.scale.drawingArea&&i.each(this.datasets,function(t){a.push(t.points[s])}),a},buildScale:function(t){this.scale=new e.RadialScale({display:this.options.showScale,fontStyle:this.options.scaleFontStyle,fontSize:this.options.scaleFontSize,fontFamily:this.options.scaleFontFamily,fontColor:this.options.scaleFontColor,showLabels:this.options.scaleShowLabels,showLabelBackdrop:this.options.scaleShowLabelBackdrop,backdropColor:this.options.scaleBackdropColor,backgroundColors:this.options.scaleBackgroundColors,backdropPaddingY:this.options.scaleBackdropPaddingY,backdropPaddingX:this.options.scaleBackdropPaddingX,lineWidth:this.options.scaleShowLine?this.options.scaleLineWidth:0,lineColor:this.options.scaleLineColor,angleLineColor:this.options.angleLineColor,angleLineWidth:this.options.angleShowLineOut?this.options.angleLineWidth:0,pointLabelFontColor:this.options.pointLabelFontColor,pointLabelFontSize:this.options.pointLabelFontSize,pointLabelFontFamily:this.options.pointLabelFontFamily,pointLabelFontStyle:this.options.pointLabelFontStyle,height:this.chart.height,width:this.chart.width,xCenter:this.chart.width/2,yCenter:this.chart.height/2,ctx:this.chart.ctx,templateString:this.options.scaleLabel,labels:t.labels,valuesCount:t.datasets[0].data.length}),this.scale.setScaleSize(),this.updateScaleRange(t.datasets),this.scale.buildYLabels()},updateScaleRange:function(t){var e=function(){var e=[];return i.each(t,function(t){t.data?e=e.concat(t.data):i.each(t.points,function(t){e.push(t.value)})}),e}(),n=this.options.scaleOverride?{steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}:i.calculateScaleRange(e,i.min([this.chart.width,this.chart.height])/2,this.options.scaleFontSize,this.options.scaleBeginAtZero,this.options.scaleIntegersOnly);i.extend(this.scale,n)},addData:function(t,e){this.scale.valuesCount++,i.each(t,function(t,i){var n=this.scale.getPointPosition(this.scale.valuesCount,this.scale.calculateCenterOffset(t));this.datasets[i].points.push(new this.PointClass({value:t,label:e,datasetLabel:this.datasets[i].label,x:n.x,y:n.y,strokeColor:this.datasets[i].pointStrokeColor,fillColor:this.datasets[i].pointColor}))},this),this.scale.labels.push(e),this.reflow(),this.update()},removeData:function(){this.scale.valuesCount--,this.scale.labels.shift(),i.each(this.datasets,function(t){t.points.shift()},this),this.reflow(),this.update()},update:function(){this.eachPoints(function(t){t.save()}),this.reflow(),this.render()},reflow:function(){i.extend(this.scale,{width:this.chart.width,height:this.chart.height,size:i.min([this.chart.width,this.chart.height]),xCenter:this.chart.width/2,yCenter:this.chart.height/2}),this.updateScaleRange(this.datasets),this.scale.setScaleSize(),this.scale.buildYLabels()},draw:function(t){var e=t||1,n=this.chart.ctx;this.clear(),this.scale.draw(),i.each(this.datasets,function(t){i.each(t.points,function(t,i){t.hasValue()&&t.transition(this.scale.getPointPosition(i,this.scale.calculateCenterOffset(t.value)),e)},this),n.lineWidth=this.options.datasetStrokeWidth,n.strokeStyle=t.strokeColor,n.beginPath(),i.each(t.points,function(t,e){0===e?n.moveTo(t.x,t.y):n.lineTo(t.x,t.y)},this),n.closePath(),n.stroke(),n.fillStyle=t.fillColor,this.options.datasetFill&&n.fill(),i.each(t.points,function(t){t.hasValue()&&t.draw()})},this)}})}.call(this),!function(t){"use strict";var e=function(e,i){this.el=t(e),this.options=t.extend({},t.fn.typed.defaults,i),this.isInput=this.el.is("input"),this.attr=this.options.attr,this.showCursor=!this.isInput&&this.options.showCursor,this.elContent=this.attr?this.el.attr(this.attr):this.el.text(),this.contentType=this.options.contentType,this.typeSpeed=this.options.typeSpeed,this.startDelay=this.options.startDelay,this.backSpeed=this.options.backSpeed,this.backDelay=this.options.backDelay,this.stringsElement=this.options.stringsElement,this.strings=this.options.strings,this.strPos=0,this.arrayPos=0,this.stopNum=0,this.loop=this.options.loop,this.loopCount=this.options.loopCount,this.curLoop=0,this.stop=!1,this.cursorChar=this.options.cursorChar,this.shuffle=this.options.shuffle,
this.sequence=[],this.build()};e.prototype={constructor:e,init:function(){var t=this;t.timeout=setTimeout(function(){for(var e=0;e<t.strings.length;++e)t.sequence[e]=e;t.shuffle&&(t.sequence=t.shuffleArray(t.sequence)),t.typewrite(t.strings[t.sequence[t.arrayPos]],t.strPos)},t.startDelay)},build:function(){var e=this;if(this.showCursor===!0&&(this.cursor=t('<span class="typed-cursor">'+this.cursorChar+"</span>"),this.el.after(this.cursor)),this.stringsElement){e.strings=[],this.stringsElement.hide();var i=this.stringsElement.find("p");t.each(i,function(i,n){e.strings.push(t(n).html())})}this.init()},typewrite:function(t,e){if(this.stop!==!0){var i=Math.round(70*Math.random())+this.typeSpeed,n=this;n.timeout=setTimeout(function(){var i=0,o=t.substr(e);if("^"===o.charAt(0)){var s=1;/^\^\d+/.test(o)&&(o=/\d+/.exec(o)[0],s+=o.length,i=parseInt(o)),t=t.substring(0,e)+t.substring(e+s)}if("html"===n.contentType){var a=t.substr(e).charAt(0);if("<"===a||"&"===a){var r="",l="";for(l="<"===a?">":";";t.substr(e).charAt(0)!==l;)r+=t.substr(e).charAt(0),e++;r+=l}}n.timeout=setTimeout(function(){if(e===t.length){if(n.options.onStringTyped(n.arrayPos),n.arrayPos===n.strings.length-1&&(n.options.callback(),n.curLoop++,n.loop===!1||n.curLoop===n.loopCount))return;n.timeout=setTimeout(function(){n.backspace(t,e)},n.backDelay)}else{0===e&&n.options.preStringTyped(n.arrayPos);var i=t.substr(0,e+1);n.attr?n.el.attr(n.attr,i):n.isInput?n.el.val(i):"html"===n.contentType?n.el.html(i):n.el.text(i),e++,n.typewrite(t,e)}},i)},i)}},backspace:function(t,e){if(this.stop!==!0){var i=Math.round(70*Math.random())+this.backSpeed,n=this;n.timeout=setTimeout(function(){if("html"===n.contentType&&">"===t.substr(e).charAt(0)){for(var i="";"<"!==t.substr(e).charAt(0);)i-=t.substr(e).charAt(0),e--;e--,i+="<"}var o=t.substr(0,e);n.attr?n.el.attr(n.attr,o):n.isInput?n.el.val(o):"html"===n.contentType?n.el.html(o):n.el.text(o),e>n.stopNum?(e--,n.backspace(t,e)):e<=n.stopNum&&(n.arrayPos++,n.arrayPos===n.strings.length?(n.arrayPos=0,n.shuffle&&(n.sequence=n.shuffleArray(n.sequence)),n.init()):n.typewrite(n.strings[n.sequence[n.arrayPos]],e))},i)}},shuffleArray:function(t){var e,i,n=t.length;if(n)for(;--n;)i=Math.floor(Math.random()*(n+1)),e=t[i],t[i]=t[n],t[n]=e;return t},reset:function(){var t=this;clearInterval(t.timeout);var e=this.el.attr("id");this.el.after('<span id="'+e+'"/>'),this.el.remove(),"undefined"!=typeof this.cursor&&this.cursor.remove(),t.options.resetCallback()}},t.fn.typed=function(i){return this.each(function(){var n=t(this),o=n.data("typed"),s="object"==typeof i&&i;o||n.data("typed",o=new e(this,s)),"string"==typeof i&&o[i]()})},t.fn.typed.defaults={strings:["These are the default values...","You know what you should do?","Use your own!","Have a great day!"],stringsElement:null,typeSpeed:0,startDelay:0,backSpeed:0,shuffle:!1,backDelay:500,loop:!1,loopCount:!1,showCursor:!0,cursorChar:"|",attr:null,contentType:"html",callback:function(){},preStringTyped:function(){},onStringTyped:function(){},resetCallback:function(){}}}(window.jQuery),function(t){function e(){var t={};this.addInterval=function(e,i){t[e]=i},this.deleteInterval=function(e){t[e]&&(clearInterval(t[e]),delete t[e])},this.clearInterval=function(){for(var e in t)this.deleteInterval(e)};var e=[{value:1,desc:"轮播",name:"slide"},{value:2,desc:"下落",name:"bars"},{value:3,desc:"百页窗",name:"blinds"},{value:4,desc:"消隐",name:"blocks"},{value:5,desc:"渐变",name:"blocks2"},{value:9,desc:"梳理",name:"zip"},{value:11,desc:"翻转",name:"bars3d"},{value:13,desc:"立方体",name:"cube"},{value:14,desc:"棋盘",name:"tiles3d"},{value:16,desc:"飞出",name:"explode"}];this.getPicStyle=function(t){if(void 0===t)return e;for(var i=0;i<e.length;i++)if(t===e[i].value)return e[i]}}t.utilPictures=new e}(window),function(t){function e(){var t={CLICK:{name:"click",value:1,title:"点击"},SHAKE:{name:"shake",value:2,title:"摇一摇"}},e={SHOW:{name:"show",value:1},HIDE:{name:"hide",value:2},RANDOMEVENT:{name:"randomEvent",value:3}};this.getSendType=function(e){if(void 0===e)return t;for(var i in t)if(e===t[i].value)return t[i];return null},this.getHandleType=function(t){if(void 0===t)return e;for(var i in e)if(t===e[i].value)return e[i];return null}}t.utilTrigger=new e}(window),function(t,e){function i(){var t,i,n,o=[];e("#media");this.addAudio=function(t,s){var a=new Audio;a.src=s,o.push({elem:t,audio:a}),e(a).bind("ended",function(){i=!1,n()})},this.play=function(e,s,a){var r;n=s;for(var l=0;l<o.length;l++)o[l].elem==e&&(r=o[l].audio);t==r&&i?(r.pause(),i=!1,s()):t!=r||i?(t&&t.pause(),r.currentTime=0,r.play(),a(),i=!0,t=r):(r.play(),i=!0,a())},this.pause=function(){t&&(t.pause(),i=!1)}}t.utilSound=new i}(window,$),window.flux={version:"1.4.4"},function(t){flux.slider=function(e,i){flux.browser.init(),flux.browser.supportsTransitions||window.console&&window.console.error&&console.error("Flux Slider requires a browser that supports CSS3 transitions");var n=this;this.element=t(e),this.transitions=[];for(var o in flux.transitions)this.transitions.push(o);this.options=t.extend({autoplay:!0,transitions:this.transitions,delay:4e3,pagination:!0,controls:!1,captions:!1,width:null,height:null,onTransitionEnd:null,onStartEnd:null,bgColor:""},i),this.height=this.options.height?this.options.height:null,this.width=this.options.width?this.options.width:null;var s=[];t(this.options.transitions).each(function(t,e){var i=new flux.transitions[e](this),n=!0;i.options.requires3d&&!flux.browser.supports3d&&(n=!1),i.options.compatibilityCheck&&(n=i.options.compatibilityCheck()),n&&s.push(e)}),this.options.transitions=s,this.images=new Array,this.imageLoadedCount=0,this.currentImageIndex=0,this.nextImageIndex=1,this.playing=!1,this.container=t('<div class="fluxslider"></div>').appendTo(this.element),this.surface=t('<div class="surface" style="position: relative"></div>').appendTo(this.container),this.container.bind("click",function(e){t(e.target).hasClass("hasLink")&&(window.location=t(e.target).data("href"))}),this.imageContainer=t('<div class="images loading1"></div>').css({position:"relative",overflow:"hidden"}).appendTo(this.surface),this.width&&this.height&&this.imageContainer.css({width:this.width+"px",height:this.height+"px"}),this.image1=t('<div class="image1" style="height: 100%; width: 100%"></div>').appendTo(this.imageContainer),this.image2=t('<div class="image2" style="height: 100%; width: 100%"></div>').appendTo(this.imageContainer),t(this.image1).add(this.image2).css({position:"absolute",top:"0px",left:"0px"}),this.element.find("img, a img").each(function(e,i){var o=i.cloneNode(!1),s=t(i).parent();s.is("a")&&t(o).data("href",s.attr("href")),n.images.push(o),t(i).remove()});for(var a=0;a<this.images.length;a++){var r=new Image;r.onload=function(){n.imageLoadedCount++,n.width=n.width?n.width:this.width,n.height=n.height?n.height:this.height,n.imageLoadedCount>=n.images.length&&(n.finishedLoading(),n.setupImages())},r.src=this.images[a].src}this.element.bind("fluxTransitionEnd",function(t,e){n.options.onTransitionEnd&&(t.preventDefault(),n.options.onTransitionEnd(e))}),this.options.autoplay&&this.start();var l={},c={},d=20;this.element.bind("mousedown touchstart",function(t){"touchstart"==t.type?l.left=t.originalEvent.touches[0].pageX:"mousedown"==t.type&&(l.left=t.pageX)}).bind("mouseup touchend",function(t){"touchend"==t.type?c.left=t.originalEvent.changedTouches[0].pageX:"mouseup"==t.type&&(c.left=t.pageX),c.left-l.left>d?n.prev(null,{direction:"right"}):l.left-c.left>d&&n.next(null,{direction:"left"}),n.options.autoplay&&(n.stop(),n.start())}),setTimeout(function(){t(window).focus(function(){n.isPlaying()&&n.next()})},100)},flux.slider.prototype={constructor:flux.slider,playing:!1,start:function(){var t=this;this.playing=!0,this.interval=setInterval(function(){t.transition()},this.options.delay),"function"==typeof this.options.onStartEnd&&this.options.onStartEnd(this.interval)},stop:function(){this.playing=!1,clearInterval(this.interval),this.interval=null},isPlaying:function(){return this.playing},next:function(t,e){e=e||{},e.direction="left",this.showImage(this.currentImageIndex+1,t,e)},prev:function(t,e){e=e||{},e.direction="right",this.showImage(this.currentImageIndex-1,t,e)},showImage:function(t,e,i){this.setNextIndex(t),this.setupImages(),this.transition(e,i)},finishedLoading:function(){var e=this;if(this.container.css({width:this.width+"px",height:this.height+"px"}),this.imageContainer.removeClass("loading1"),this.options.pagination&&(this.pagination=t('<ul class="pagination"></ul>').css({margin:"0px",padding:"0px","text-align":"center"}),this.pagination.bind("click",function(i){i.preventDefault(),e.showImage(t(i.target).data("index"))}),t(this.images).each(function(i,n){var o=t('<li data-index="'+i+'">'+(i+1)+"</li>").css({display:"inline-block","margin-left":"0.5em",cursor:"pointer"}).appendTo(e.pagination);0==i&&o.css("margin-left",0).addClass("current")}),this.container.append(this.pagination)),t(this.imageContainer).css({width:this.width+"px",height:this.height+"px"}),t(this.image1).css({width:this.width+"px",height:this.height+"px"}),t(this.image2).css({width:this.width+"px",height:this.height+"px"}),this.container.css({width:this.width+"px",height:this.height+(this.options.pagination?this.pagination.height():0)+"px"}),this.options.controls){var i={padding:"4px 10px 10px","font-size":"60px","font-family":"arial, sans-serif","line-height":"1em","font-weight":"bold",color:"#FFF","text-decoration":"none",background:"rgba(0,0,0,0.5)",position:"absolute","z-index":2e3};this.nextButton=t('<a href="#">»</a>').css(i).css3({"border-radius":"4px"}).appendTo(this.surface).bind("click",function(t){t.preventDefault(),e.next()}),this.prevButton=t('<a href="#">«</a>').css(i).css3({"border-radius":"4px"}).appendTo(this.surface).bind("click",function(t){t.preventDefault(),e.prev()});var n=(this.height-this.nextButton.height())/2;this.nextButton.css({top:n+"px",right:"10px"}),this.prevButton.css({top:n+"px",left:"10px"})}this.options.captions&&(this.captionBar=t('<div class="caption"></div>').css({background:"rgba(0,0,0,0.6)",color:"#FFF","font-size":"16px","font-family":"helvetica, arial, sans-serif","text-decoration":"none","font-weight":"bold",padding:"1.5em 1em",opacity:0,position:"absolute","z-index":110,width:"100%",bottom:0}).css3({"transition-property":"opacity","transition-duration":"800ms","box-sizing":"border-box"}).prependTo(this.surface)),this.updateCaption()},setupImages:function(){var e=this.getImage(this.currentImageIndex),i={background:'url("'+e.src+'") 50% 50% / contain no-repeat '+this.options.bgColor,zIndex:101,cursor:"auto"};t(e).data("href")?(i.cursor="pointer",this.image1.addClass("hasLink"),this.image1.data("href",t(e).data("href"))):(this.image1.removeClass("hasLink"),this.image1.data("href",null)),this.image1.css(i).children().remove(),this.image2.css({background:'url("'+this.getImage(this.nextImageIndex).src+'") 50% 50% / contain no-repeat '+this.options.bgColor,zIndex:100,display:"none"}),this.options.pagination&&this.pagination&&(this.pagination.find("li.current").removeClass("current"),t(this.pagination.find("li")[this.currentImageIndex]).addClass("current"))},transition:function(e,i){if(void 0==e||!flux.transitions[e]){var n=Math.floor(Math.random()*this.options.transitions.length);e=this.options.transitions[n]}var o=null;try{o=new flux.transitions[e](this,t.extend(this.options[e]?this.options[e]:{},i))}catch(s){o=new flux.transition(this,{fallback:!0})}o.run(),this.currentImageIndex=this.nextImageIndex,this.setNextIndex(this.currentImageIndex+1),this.updateCaption()},updateCaption:function(){var e=t(this.getImage(this.currentImageIndex)).attr("title");this.options.captions&&this.captionBar&&(""!==e&&this.captionBar.html(e),this.captionBar.css("opacity",""===e?0:1))},getImage:function(t){return t%=this.images.length,this.images[t]},setNextIndex:function(t){void 0==t&&(t=this.currentImageIndex+1),this.nextImageIndex=t,this.nextImageIndex>this.images.length-1&&(this.nextImageIndex=0),this.nextImageIndex<0&&(this.nextImageIndex=this.images.length-1)},increment:function(){this.currentImageIndex++,this.currentImageIndex>this.images.length-1&&(this.currentImageIndex=0)}}}(window.jQuery||window.Zepto),function(t){flux.browser={init:function(){if(void 0===flux.browser.supportsTransitions){var e=(document.createElement("div"),["-webkit","-moz","-o","-ms"]);if(window.Modernizr&&void 0!==Modernizr.csstransitions?flux.browser.supportsTransitions=Modernizr.csstransitions:flux.browser.supportsTransitions=this.supportsCSSProperty("Transition"),window.Modernizr&&void 0!==Modernizr.csstransforms3d)flux.browser.supports3d=Modernizr.csstransforms3d;else if(flux.browser.supports3d=this.supportsCSSProperty("Perspective"),flux.browser.supports3d&&"webkitPerspective"in t("body").get(0).style){var i=t('<div id="csstransform3d"></div>'),n=t('<style media="(transform-3d), ('+e.join("-transform-3d),(")+'-transform-3d)">div#csstransform3d { position: absolute; left: 9px }</style>');t("body").append(i),t("head").append(n),flux.browser.supports3d=9==i.get(0).offsetLeft,i.remove(),n.remove()}}},supportsCSSProperty:function(t){for(var e=document.createElement("div"),i=["Webkit","Moz","O","Ms"],n=!1,o=0;o<i.length;o++)i[o]+t in e.style&&(n=n||!0);return n},translate:function(t,e,i){return t=void 0!=t?t:0,e=void 0!=e?e:0,i=void 0!=i?i:0,"translate"+(flux.browser.supports3d?"3d(":"(")+t+"px,"+e+(flux.browser.supports3d?"px,"+i+"px)":"px)")},rotateX:function(t){return flux.browser.rotate("x",t)},rotateY:function(t){return flux.browser.rotate("y",t)},rotateZ:function(t){return flux.browser.rotate("z",t)},rotate:function(t,e){return!t in{x:"",y:"",z:""}&&(t="z"),e=void 0!=e?e:0,flux.browser.supports3d?"rotate3d("+("x"==t?"1":"0")+", "+("y"==t?"1":"0")+", "+("z"==t?"1":"0")+", "+e+"deg)":"z"==t?"rotate("+e+"deg)":""}},t(function(){flux.browser.init()})}(window.jQuery||window.Zepto),function(t){t.fn.css3=function(t){var e={},i=["webkit","moz","ms","o"];for(var n in t){for(var o=0;o<i.length;o++)e["-"+i[o]+"-"+n]=t[n];e[n]=t[n]}return this.css(e),this},t.fn.transitionEnd=function(e){for(var i=["webkitTransitionEnd","transitionend","oTransitionEnd"],n=0;n<i.length;n++)this.bind(i[n],function(n){for(var o=0;o<i.length;o++)t(this).unbind(i[o]);e&&e.call(this,n)});return this},flux.transition=function(e,i){if(this.options=t.extend({requires3d:!1,after:function(){}},i),this.slider=e,this.options.requires3d&&!flux.browser.supports3d||!flux.browser.supportsTransitions||this.options.fallback===!0){var n=this;this.options.after=void 0,this.options.setup=function(){n.fallbackSetup()},this.options.execute=function(){n.fallbackExecute()}}},flux.transition.prototype={constructor:flux.transition,hasFinished:!1,run:function(){var t=this;void 0!==this.options.setup&&this.options.setup.call(this),this.slider.image1.css({"background-image":"none"}),this.slider.imageContainer.css("overflow",this.options.requires3d?"visible":"hidden"),setTimeout(function(){void 0!==t.options.execute&&t.slider.image1.css("background-color",""),t.options.execute.call(t)},5)},finished:function(){this.hasFinished||(this.hasFinished=!0,this.options.after&&this.options.after.call(this),this.slider.imageContainer.css("overflow","hidden"),this.slider.setupImages(),this.slider.element.trigger("fluxTransitionEnd",{currentImage:this.slider.getImage(this.slider.currentImageIndex)}))},fallbackSetup:function(){},fallbackExecute:function(){this.finished()}},flux.transitions={},flux.transition_grid=function(e,i){return new flux.transition(e,t.extend({columns:6,rows:6,forceSquare:!1,setup:function(){var e=this.slider.image1.width(),i=this.slider.image1.height(),n=Math.floor(e/this.options.columns),o=Math.floor(i/this.options.rows);this.options.forceSquare&&(o=n,this.options.rows=Math.floor(i/o));for(var s=e-this.options.columns*n,a=Math.ceil(s/this.options.columns),r=i-this.options.rows*o,l=Math.ceil(r/this.options.rows),c=(this.slider.image1.height(),0),d=0,p=document.createDocumentFragment(),h=0;h<this.options.columns;h++){var u=n,d=0;if(s>0){var g=s>=a?a:s;u+=g,s-=g}for(var f=0;f<this.options.rows;f++){var m=o,v=r;if(v>0){var g=v>=l?l:v;m+=g,v-=g}var b=t('<div class="tile tile-'+h+"-"+f+'"></div>').css({width:u+"px",height:m+"px",position:"absolute",top:d+"px",left:c+"px"});this.options.renderTile.call(this,b,h,f,u,m,c,d),p.appendChild(b.get(0)),d+=m}c+=u}this.slider.image1.get(0).appendChild(p)},execute:function(){var t=this,e=this.slider.image1.height(),i=this.slider.image1.find("div.barcontainer");this.slider.image2.hide(),i.last().transitionEnd(function(e){t.slider.image2.show(),t.finished()}),i.css3({transform:flux.browser.rotateX(-90)+" "+flux.browser.translate(0,e/2,e/2)})},renderTile:function(t,e,i,n,o,s,a){}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.bars=function(e,i){return new flux.transition_grid(e,t.extend({columns:10,rows:1,delayBetweenBars:40,renderTile:function(e,i,n,o,s,a,r){t(e).css({background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":"-"+a+"px 0px"}).css3({"transition-duration":"400ms","transition-timing-function":"ease-in","transition-property":"all","transition-delay":i*this.options.delayBetweenBars+"ms"})},execute:function(){var e=this,i=this.slider.image1.height(),n=this.slider.image1.find("div.tile");t(n[n.length-1]).transitionEnd(function(){e.finished()}),setTimeout(function(){n.css({opacity:"0.5"}).css3({transform:flux.browser.translate(0,i)})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.bars3d=function(e,i){return new flux.transition_grid(e,t.extend({requires3d:!0,columns:7,rows:1,delayBetweenBars:150,perspective:1e3,renderTile:function(e,i,n,o,s,a,r){var l=t('<div class="bar-'+i+'"></div>').css({width:o+"px",height:"100%",position:"absolute",top:"0px",left:"0px","z-index":200,background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":"-"+a+"px 0px","background-repeat":"no-repeat"}).css3({"backface-visibility":"hidden"}),c=t(l.get(0).cloneNode(!1)).css({"background-image":this.slider.image2.css("background-image")}).css3({transform:flux.browser.rotateX(90)+" "+flux.browser.translate(0,-s/2,s/2)}),d=t('<div class="side bar-'+i+'"></div>').css({width:s+"px",height:s+"px",position:"absolute",top:"0px",left:"0px",background:"#222","z-index":190}).css3({transform:flux.browser.rotateY(90)+" "+flux.browser.translate(s/2,0,-s/2)+" "+flux.browser.rotateY(180),"backface-visibility":"hidden"}),p=t(d.get(0).cloneNode(!1)).css3({transform:flux.browser.rotateY(90)+" "+flux.browser.translate(s/2,0,o-s/2)});t(e).css({width:o+"px",height:"100%",position:"absolute",top:"0px",left:a+"px","z-index":i>this.options.columns/2?1e3-i:1e3}).css3({"transition-duration":"800ms","transition-timing-function":"linear","transition-property":"all","transition-delay":i*this.options.delayBetweenBars+"ms","transform-style":"preserve-3d"}).append(l).append(c).append(d).append(p)},execute:function(){this.slider.image1.css3({perspective:this.options.perspective,"perspective-origin":"50% 50%"}).css({"-moz-transform":"perspective("+this.options.perspective+"px)","-moz-perspective":"none","-moz-transform-style":"preserve-3d"});var t=this,e=this.slider.image1.height(),i=this.slider.image1.find("div.tile");this.slider.image2.hide(),i.last().transitionEnd(function(e){t.slider.image1.css3({"transform-style":"flat"}),t.slider.image2.show(),t.finished()}),setTimeout(function(){i.css3({transform:flux.browser.rotateX(-90)+" "+flux.browser.translate(0,e/2,e/2)})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.blinds=function(e,i){return new flux.transitions.bars(e,t.extend({execute:function(){var e=this,i=(this.slider.image1.height(),this.slider.image1.find("div.tile"));t(i[i.length-1]).transitionEnd(function(){e.finished()}),setTimeout(function(){i.css({opacity:"0.5"}).css3({transform:"scalex(0.0001)"})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.zip=function(e,i){return new flux.transitions.bars(e,t.extend({execute:function(){var e=this,i=this.slider.image1.height(),n=this.slider.image1.find("div.tile");t(n[n.length-1]).transitionEnd(function(){e.finished()}),setTimeout(function(){n.each(function(e,n){t(n).css({opacity:"0.3"}).css3({transform:flux.browser.translate(0,e%2?"-"+2*i:i)})})},20)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.blocks=function(e,i){return new flux.transition_grid(e,t.extend({forceSquare:!0,delayBetweenBars:100,renderTile:function(e,i,n,o,s,a,r){var l=Math.floor(10*Math.random()*this.options.delayBetweenBars);t(e).css({background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":"-"+a+"px -"+r+"px"}).css3({"transition-duration":"350ms","transition-timing-function":"ease-in","transition-property":"all","transition-delay":l+"ms"}),void 0===this.maxDelay&&(this.maxDelay=0),l>this.maxDelay&&(this.maxDelay=l,this.maxDelayTile=e)},execute:function(){var e=this,i=this.slider.image1.find("div.tile");this.maxDelayTile.transitionEnd(function(){e.finished()}),setTimeout(function(){i.each(function(e,i){t(i).css({opacity:"0"}).css3({transform:"scale(0.8)"})})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.blocks2=function(e,i){return new flux.transition_grid(e,t.extend({cols:12,forceSquare:!0,delayBetweenDiagnols:150,renderTile:function(e,i,n,o,s,a,r){Math.floor(10*Math.random()*this.options.delayBetweenBars);t(e).css({background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":"-"+a+"px -"+r+"px"}).css3({"transition-duration":"350ms","transition-timing-function":"ease-in","transition-property":"all","transition-delay":(i+n)*this.options.delayBetweenDiagnols+"ms","backface-visibility":"hidden"})},execute:function(){var e=this,i=this.slider.image1.find("div.tile");i.last().transitionEnd(function(){e.finished()}),setTimeout(function(){i.each(function(e,i){t(i).css({opacity:"0"}).css3({transform:"scale(0.8)"})})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.cube=function(e,i){return new flux.transition(e,t.extend({requires3d:!0,barWidth:100,direction:"left",perspective:1e3,setup:function(){var e=this.slider.image1.width(),i=this.slider.image1.height();this.slider.image1.css3({perspective:this.options.perspective,"perspective-origin":"50% 50%"}),this.cubeContainer=t('<div class="cube"></div>').css({width:e+"px",height:i+"px",position:"relative"}).css3({"transition-duration":"800ms","transition-timing-function":"linear","transition-property":"all","transform-style":"preserve-3d"});var n={height:"100%",width:"100%",position:"absolute",top:"0px",left:"0px"},o=t('<div class="face current"></div>').css(t.extend(n,{background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px"})).css3({"backface-visibility":"hidden"});this.cubeContainer.append(o);var s=t('<div class="face next"></div>').css(t.extend(n,{background:this.slider.image2.css("background-image")})).css3({transform:this.options.transitionStrings.call(this,this.options.direction,"nextFace"),"backface-visibility":"hidden"});this.cubeContainer.append(s),this.slider.image1.append(this.cubeContainer)},execute:function(){var t=this;this.slider.image1.width(),this.slider.image1.height();this.slider.image2.hide(),this.cubeContainer.transitionEnd(function(){t.slider.image2.show(),t.finished()}),setTimeout(function(){t.cubeContainer.css3({transform:t.options.transitionStrings.call(t,t.options.direction,"container")})},50)},transitionStrings:function(t,e){var i=this.slider.image1.width(),n=this.slider.image1.height(),o={up:{nextFace:flux.browser.rotateX(-90)+" "+flux.browser.translate(0,n/2,n/2),container:flux.browser.rotateX(90)+" "+flux.browser.translate(0,-n/2,n/2)},down:{nextFace:flux.browser.rotateX(90)+" "+flux.browser.translate(0,-n/2,n/2),container:flux.browser.rotateX(-90)+" "+flux.browser.translate(0,n/2,n/2)},left:{nextFace:flux.browser.rotateY(90)+" "+flux.browser.translate(i/2,0,i/2),container:flux.browser.rotateY(-90)+" "+flux.browser.translate(-i/2,0,i/2)},right:{nextFace:flux.browser.rotateY(-90)+" "+flux.browser.translate(-i/2,0,i/2),container:flux.browser.rotateY(90)+" "+flux.browser.translate(i/2,0,i/2)}};return!(!o[t]||!o[t][e])&&o[t][e]}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.tiles3d=function(e,i){return new flux.transition_grid(e,t.extend({requires3d:!0,forceSquare:!0,columns:5,perspective:600,delayBetweenBarsX:200,delayBetweenBarsY:150,renderTile:function(e,i,n,o,s,a,r){var l=t("<div></div>").css({width:o+"px",height:s+"px",position:"absolute",top:"0px",left:"0px",background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":"-"+a+"px -"+r+"px","background-repeat":"no-repeat","-moz-transform":"translateZ(1px)"}).css3({"backface-visibility":"hidden"}),c=t(l.get(0).cloneNode(!1)).css({"background-image":this.slider.image2.css("background-image")}).css3({transform:flux.browser.rotateY(180),"backface-visibility":"hidden"});t(e).css({"z-index":(i>this.options.columns/2?500-i:500)+(n>this.options.rows/2?500-n:500)}).css3({"transition-duration":"800ms","transition-timing-function":"ease-out","transition-property":"all","transition-delay":i*this.options.delayBetweenBarsX+n*this.options.delayBetweenBarsY+"ms","transform-style":"preserve-3d"}).append(l).append(c)},execute:function(){this.slider.image1.css3({perspective:this.options.perspective,"perspective-origin":"50% 50%"});var t=this,e=this.slider.image1.find("div.tile");this.slider.image2.hide(),e.last().transitionEnd(function(e){t.slider.image2.show(),t.finished()}),setTimeout(function(){e.css3({transform:flux.browser.rotateY(180)})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.turn=function(e,i){return new flux.transition(e,t.extend({requires3d:!0,perspective:1300,direction:"left",setup:function(){var e=t('<div class="tab"></div>').css({width:"50%",height:"100%",position:"absolute",top:"0px",left:"left"==this.options.direction?"50%":"0%","z-index":101}).css3({"transform-style":"preserve-3d","transition-duration":"1000ms","transition-timing-function":"ease-out","transition-property":"all","transform-origin":"left"==this.options.direction?"left center":"right center"}),i=(t("<div></div>").appendTo(e).css({background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":("left"==this.options.direction?"-"+this.slider.image1.width()/2:0)+"px 0",width:"100%",height:"100%",position:"absolute",top:"0",left:"0","-moz-transform":"translateZ(1px)"}).css3({"backface-visibility":"hidden"}),t("<div></div>").appendTo(e).css({background:this.slider.image2.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":("left"==this.options.direction?0:"-"+this.slider.image1.width()/2)+"px 0",width:"100%",height:"100%",position:"absolute",top:"0",left:"0"}).css3({transform:flux.browser.rotateY(180),"backface-visibility":"hidden"}),t("<div></div>").css({position:"absolute",top:"0",left:"left"==this.options.direction?"0":"50%",width:"50%",height:"100%",background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":("left"==this.options.direction?0:"-"+this.slider.image1.width()/2)+"px 0","z-index":100})),n=t('<div class="overlay"></div>').css({position:"absolute",top:"0",left:"left"==this.options.direction?"50%":"0",width:"50%",height:"100%",background:"#000",opacity:1}).css3({"transition-duration":"800ms","transition-timing-function":"linear","transition-property":"opacity"}),o=t("<div></div>").css3({width:"100%",height:"100%"}).css3({perspective:this.options.perspective,"perspective-origin":"50% 50%"}).append(e).append(i).append(n);this.slider.image1.append(o)},execute:function(){var t=this;this.slider.image1.find("div.tab").first().transitionEnd(function(){t.finished()}),setTimeout(function(){t.slider.image1.find("div.tab").css3({transform:flux.browser.rotateY("left"==t.options.direction?-179:179)}),t.slider.image1.find("div.overlay").css({opacity:0})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.slide=function(e,i){return new flux.transition(e,t.extend({direction:"left",setup:function(){var e=this.slider.image1.width(),i=this.slider.image1.height(),n=t('<div class="current"></div>').css({height:i+"px",width:e+"px",position:"absolute",top:"0px",left:"0px",background:this.slider["left"==this.options.direction?"image1":"image2"].css("background")}).css3({"backface-visibility":"hidden"}),o=t('<div class="next"></div>').css({height:i+"px",width:e+"px",position:"absolute",top:"0px",left:e+"px",background:this.slider["left"==this.options.direction?"image2":"image1"].css("background")}).css3({"backface-visibility":"hidden"});this.slideContainer=t('<div class="slide"></div>').css({width:2*e+"px",height:i+"px",position:"relative",left:"left"==this.options.direction?"0px":-e+"px","z-index":101}).css3({"transition-duration":"600ms","transition-timing-function":"ease-in","transition-property":"all"}),this.slideContainer.append(n).append(o),this.slider.image1.append(this.slideContainer)},execute:function(){var t=this,e=this.slider.image1.width();"left"==this.options.direction&&(e=-e),this.slideContainer.transitionEnd(function(){t.finished()}),setTimeout(function(){t.slideContainer.css3({transform:flux.browser.translate(e)})},50)}},i))}}(window.jQuery||window.Zepto),function(t){flux.transitions.explode=function(e,i){return new flux.transition_grid(e,t.extend({columns:6,forceSquare:!0,delayBetweenBars:30,perspective:800,requires3d:!0,renderTile:function(e,i,n,o,s,a,r){var l=Math.floor(10*Math.random()*this.options.delayBetweenBars);t(e).css({background:this.slider.image1.css("background"),"background-size":this.slider.width+"px "+this.slider.height+"px","background-position":"-"+a+"px -"+r+"px"}).css3({"transition-duration":"500ms","transition-timing-function":"ease-in","transition-property":"all","transition-delay":l+"ms"}),void 0===this.maxDelay&&(this.maxDelay=0),l>this.maxDelay&&(this.maxDelay=l,this.maxDelayTile=e)},execute:function(){this.slider.image1.css3({perspective:this.options.perspective,"perspective-origin":"50% 50%"}).css({"-moz-transform":"perspective("+this.options.perspective+"px)","-moz-perspective":"none","-moz-transform-style":"preserve-3d"});var e=this,i=this.slider.image1.find("div.tile");this.maxDelayTile.transitionEnd(function(){e.slider.image1.css3({"transform-style":"flat"}),e.finished()}),setTimeout(function(){i.each(function(e,i){t(i).css({opacity:"0"}).css3({transform:flux.browser.translate(0,0,700)+" rotate3d("+(Math.round(2*Math.random())-1)+", "+(Math.round(2*Math.random())-1)+", "+(Math.round(2*Math.random())-1)+", 90deg) "})})},50)}},i))}}(window.jQuery||window.Zepto),function(){window.eqxiuSvg={NAMESPACE:"http://www.w3.org/2000/svg",SYMBOLS:{},boundingBox:function(t){var e,i=t.parentNode,n=document.createElementNS(eqxiuSvg.NAMESPACE,"svg");return n.setAttribute("width","0"),n.setAttribute("height","0"),n.setAttribute("style","visibility: hidden; position: absolute; left: 0; top: 0;"),n.appendChild(t),document.body.appendChild(n),e=t.getBBox(),i?i.appendChild(t):n.removeChild(t),document.body.removeChild(n),e},pointsToPolygon:function(t){for(var e=[];t.length>=2;)e.push(t.shift()+","+t.shift());return e.join(" ")},symbol:function(t,e,i){var n=i?i:"#555",o=eqxiuSvg.SYMBOLS[t],s='<g fill="'+n+'" id="path_'+e+'">'+o+"</g>";return s},ShapeFromType:function(t,e,i,n,o){return e||(e=64),i||(i=64),/symbols\-/.test(t)?eqxiuSvg.symbol(t.replace(/^symbols\-/,""),n,o):"rect"==t?eqxiuSvg.rect(e,i):"circle"==t?eqxiuSvg.ellipse(e,i):"diamond"==t?eqxiuSvg.polygon(e,i,4):"octagon"==t?eqxiuSvg.polygon(e,i,8):"triangle-up"==t?eqxiuSvg.triangleUp(e,i):"triangle-down"==t?eqxiuSvg.triangleDown(e,i):"triangle-left"==t?eqxiuSvg.triangleLeft(e,i):"triangle-right"==t?eqxiuSvg.triangleRight(e,i):"arrow-up"==t?eqxiuSvg.arrowUp(e,i):"arrow-down"==t?eqxiuSvg.arrowDown(e,i):"arrow-left"==t?eqxiuSvg.arrowLeft(e,i):"arrow-right"==t?eqxiuSvg.arrowRight(e,i):void 0;
},rect:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"rect");return i.setAttribute("width",t),i.setAttribute("height",e),i},ellipse:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"ellipse");return i.setAttribute("rx",t/2),i.setAttribute("ry",e/2),i.setAttribute("cx",t/2),i.setAttribute("cy",e/2),i},triangleUp:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([t/2,0,t,e,0,e])),i},triangleDown:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([0,0,t,0,t/2,e])),i},triangleLeft:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([0,e/2,t,0,t,e])),i},triangleRight:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([t,e/2,0,e,0,0])),i},arrowUp:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([.5*t,0,t,.5*e,.7*t,.5*e,.7*t,e,.3*t,e,.3*t,.5*e,0,.5*e,.5*t,0])),i},arrowDown:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([.5*t,e,t,.5*e,.7*t,.5*e,.7*t,0,.3*t,0,.3*t,.5*e,0,.5*e,.5*t,e])),i},arrowLeft:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([t,.3*e,.5*t,.3*e,.5*t,0,0,.5*e,.5*t,e,.5*t,.7*e,t,.7*e,t,.3*e])),i},arrowRight:function(t,e){var i=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon");return i.setAttribute("points",eqxiuSvg.pointsToPolygon([0,.3*e,.5*t,.3*e,.5*t,0,t,.5*e,.5*t,e,.5*t,.7*e,0,.7*e])),i},polygon:function(t,e,i){var n=document.createElementNS(eqxiuSvg.NAMESPACE,"polygon"),o=[];if(3===i)o=[t/2,0,t,e,0,e];else if(i>3)for(var s=t/2,a=e/2,r=0;i>r;r++){var l=s+s*Math.cos(2*Math.PI*r/i),c=a+a*Math.sin(2*Math.PI*r/i);l=Math.round(10*l)/10,c=Math.round(10*c)/10,o.push(l),o.push(c)}return n.setAttribute("points",eqxiuSvg.pointsToPolygon(o)),n}}}(),function(t,e){function i(t){function e(t,e,i){return t[e]||(t[e]=i())}var i=e(t,"eqShow",Object);return e(i,"templateParser",function(){var t={};return function(i,n){if("hasOwnProperty"===i)throw new Error("hasOwnProperty is not a valid name");return n&&t.hasOwnProperty(i)&&(t[i]=null),e(t,i,n)}})}function n(e){templateParser=i(t)}var o=t.eqShow||(t.eqShow={});n(o)}(window,document),function(){var t=!0,e=!0;eqShow.playVideo=function(i){if(i&&i.bgAudio){var n=$("#media"),o=$("#audio_btn"),s="";i.bgAudio.url?s=0===i.bgAudio.url.indexOf("http://")?i.bgAudio.url:PREFIX_FILE_HOST+i.bgAudio.url:!i.bgAudio.url&&i.bgAudio.src&&(s=0===i.bgAudio.src.indexOf("http://")?i.bgAudio.src:PREFIX_FILE_HOST+i.bgAudio.src),n.attr("src",s),o.addClass("video_exist"),n.bind("canplay",function(){n.get(0).play()}).bind("play",function(){o.addClass("rotate")}).bind("pause",function(t){o.removeClass("rotate")});var a=mobilecheck()?"touchend":"click";$("#audio_btn").show().on(a,function(e){e.cancelBubble=!0,e.stopPropagation(),$(this).hasClass("rotate")?(t=!1,n.get(0).pause()):(n.get(0).play(),t=!0,utilSound.pause())})}$("#nr #page1").on("mousedown touchstart",function(){if(mobilecheck()&&!isWeixin()&&e){var t=$("#nr .z-current .m-img"),i=parseInt(t.attr("id").substring(4),10);e&&1===i&&window.completeEffect(t)&&(e=!1,window.scene.bgAudio&&$("#media").get(0).play())}})},eqShow.executePlay=function(){t&&$("#media").get(0).play()},eqShow.executePause=function(){t&&$("#media").get(0).pause()}}(),function(t){function e(t){var e=document.getElementsByTagName("style")[0];e||(e=document.createElement("style"),head=document.head||document.getElementsByTagName("head")[0],e.type="text/css",head.appendChild(e));var i=document.createTextNode(t);e.appendChild(i)}function i(){var t=[{value:1,path:"1.7 0.1 0.1 0 -0.287 0 1.7 0.1 0 -0.287 0 0.1 1.6 0 -0.287 0 0 0 1.0 0"},{value:2,path:"2.1 -1.4 0.6 0.0 -0.12 -0.3 2.0 -0.3 0.0 -0.12 -1.1 -0.2 2.6 0.0 -0.12 0.0 0.0 0.0 1.0 0.0"},{value:3,path:"1.9 -0.3 -0.2 0 -0.341 -0.2  1.7 -0.1  0 -0.341 -0.1 -0.6 2.0 0 -0.341 0 0 0 1.0 0"},{value:4,path:"1.0 0.0 0.0 0.0 -0.26 0.0 1.1 0.0 0.0 -0.26 0.0 0.0 1.0 0.0 -0.26 0.0 0.0 0.0 1.0 0.0"},{value:5,path:"1.2 0.0 0.0 0.0 0.0 0.0 0.9 0.0 0.0 0.0 0.0 0.0 0.8 0.0 0.0 0 0 0 1.0 0"},{value:6,path:"0.8 0.3 0.1 0.0 0.182 0.1 0.9 0.0 0.0 0.182 0.1 0.3 0.7 0.0 0.182 0.0 0.0 0.0 1.0 0.0"},{value:7,path:"0.9 0 0 0 0.255 0 0.9 0 0 0.255 0 0 0.9 0 0.255 0 0 0 1.0 0"},{value:8,path:"0.6 0.3 0.1 0 0.28745 0.2 0.7 0.1 0 0.28745 0.2 0.3 0.4 0 0.28745 0 0 0 1.0 0"},{value:9,path:"0.8 1.6 0.2 0 -0.639 0.8 1.6 0.2 0 -0.639 0.8 1.6 0.2 0 -0.639 0 0 0 1.0 0"},{value:10,path:"0.2 0.5 0.1 0 0.16 0.2 0.5 0.1 0 0.16 0.2 0.5 0.1 0 0.16 0 0 0 1 0"},{value:11,path:"4.8 -1.0 -0.1 0 -1.523 -0.5 4.4 -0.1 0 -1.523 -0.5 -1.0 5.2 0 -1.523 0 0 0 1.0 0"}];return t}function n(t,e){for(var i=0;i<t.length;i++){var n=[];$.each(e,function(e,o){var s,a=$(o).attr("style");if(a){for(var r=a.split(";"),l=0,c=r.length;l<c;l++)if(r[l].indexOf("fill:")>=0){s=r[l].split(":")[1];break}}else s=$(o).attr("fill");s===t[i].svgFill&&n.push(e)}),t[i].elements=n}return t}function o(t,e,i,n){var o={},s=t/e,a=i/n;return s>a?(o.width=i,o.height=i/s):(o.height=n,o.width=n*s),o}function a(t,e,i){var n,o=t.properties.lineChart,s=[],a="",r="",l="",c=[],d=[],p=[],h=[],u=[];i.datasets.forEach(function(t){h.push(t.strokeColor),u.push(t.fillColor)});for(var g=0;g<h.length;g++)"line"===o.chartType?h[g]=o.fillColors[g]:u[g]=o.fillColors[g];for(var f=o.segments,m=0;m<f.length;m++)n=f[m],a=isNaN(n.value1)||n.value1<0?0:n.value1,r=isNaN(n.value2)||n.value2<0?0:n.value2,l=isNaN(n.value3)||n.value3<0?0:n.value3,(n.label||a||r||l)&&(s.push(n.label),c.push(a),d.push(r),p.push(l));var v={labels:s,datasets:[{label:o.lengends[0],fillColor:u[0],strokeColor:h[0],pointColor:h[0],pointStrokeColor:"#fff",data:c},{label:o.lengends[1],fillColor:u[1],strokeColor:h[1],pointColor:h[1],pointStrokeColor:"#fff",data:d},{label:o.lengends[2],fillColor:u[2],strokeColor:h[2],pointColor:h[2],pointStrokeColor:"#fff",data:p}]},b=i.options;return o.options&&o.options.scaleFontColor&&(b.scaleFontColor=o.options.scaleFontColor),i.destroy(),i=new Chart(e).Line(v,b),i.datasets.forEach(function(t){var e=!0;t.points.forEach(function(t){t.value&&(e=!1)}),e?t.points.length=0:t.points.forEach(function(t){t.value||(t.value=0)})}),i.update(),i}function r(t,e,i){for(var n,o=i.options,s=t.properties.barChart,a=[],r="",l="",c="",d=[],p=[],h=[],u=s.segments,g=0;g<u.length;g++){var n=u[g];r=isNaN(n.value1)||n.value1<0?"":n.value1,l=isNaN(n.value2)||n.value2<0?"":n.value2,c=isNaN(n.value3)||n.value3<0?"":n.value3,(n.label||r||l||c)&&(a.push(n.label),d.push(r),p.push(l),h.push(c))}var f={labels:a,datasets:[{fillColor:s.fillColors[0],strokeColor:"rgba(0,0,0,0)",data:d,label:s.lengends[0]},{fillColor:s.fillColors[1],strokeColor:"rgba(0,0,0,0)",data:p,label:s.lengends[1]},{fillColor:s.fillColors[2],strokeColor:"rgba(0,0,0,0)",data:h,label:s.lengends[2]}]};return s.options&&s.options.scaleFontColor&&(o.scaleFontColor=s.options.scaleFontColor),i.destroy(),new Chart(e).Bar(f,o)}function l(t,e,i){var n=i.options,o="#000",s=t.properties.pieChart;s.options&&s.options.scaleFontColor&&(o=s.options.scaleFontColor),n.scaleFontColor=o,n.onAnimationComplete=function(){var t=this.chart.ctx,e=this.segments;t.textAlign="start",t.textBaseline="middle";for(var i=0,n=0;n<e.length;n++)i+=parseFloat(e[n].value);t.fillText(i,t.width/2-20,t.height/2,100);for(var n=0;n<e.length;n++){var s=e[n].startAngle+(e[n].endAngle-e[n].startAngle)/2,a=(e[n].outerRadius-e[n].innerRadius)/1.5+e[n].innerRadius,r=e[n].x+Math.cos(s)*a,l=e[n].y+Math.sin(s)*a;t.textAlign="center",t.textBaseline="middle",t.fillStyle=o,t.font="normal 12px Helvetica",t.fillText(e[n].value,r,l)}};var a=s;s.segments&&(a=s.segments);for(var r=0;r<a.length;r++)(isNaN(a[r].value)||a[r].value<0)&&(a[r].value="");return i.destroy(),new Chart(e).Pie(a,n)}function c(t){var e=[{value:300,color:"#57c7d4",label:"1月"},{value:150,color:"#3aa99e",label:"2月"},{value:100,color:"#f2a654",label:"3月"},{value:140,color:"#f96868",label:"4月"},{value:120,color:"#926dde",label:"5月"}],i={segmentShowStroke:!1,showTooltips:!1,scaleFontColor:"#000",legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><%if(segments[i].label){%><span style="background-color:<%=segments[i].fillColor%>"></span><%=segments[i].label%><%}%></li><%}%></ul>',animation:!1,onAnimationComplete:function(){var t=this.chart.ctx,e=this.segments;t.textAlign="start",t.textBaseline="middle";for(var i=0,n=0;n<e.length;n++)i+=parseFloat(e[n].value);t.fillText(i,t.width/2-20,t.height/2,100);for(var n=0;n<e.length;n++){var o=e[n].startAngle+(e[n].endAngle-e[n].startAngle)/2,s=(e[n].outerRadius-e[n].innerRadius)/1.5+e[n].innerRadius,a=e[n].x+Math.cos(o)*s,r=e[n].y+Math.sin(o)*s;t.textAlign="center",t.textBaseline="middle",t.fillStyle="#000",t.font="normal 12px Helvetica",t.fillText(e[n].value,a,r)}}},n=new Chart(t).Pie(e,i);return n}function d(t){var e={labels:["1月","2月","3月","4月","5月"],datasets:[{fillColor:"#62a8ea",strokeColor:"rgba(0,0,0,0)",data:[60,70,80,56,40],label:"图例1"},{fillColor:"#926dde",strokeColor:"rgba(0,0,0,0)",data:[80,56,40,93,112],label:"图例2"},{fillColor:"#f2a654",strokeColor:"rgba(0,0,0,0)",data:[160,86,140,123,23],label:"图例3"}]},i={showTooltips:!1,scaleShowLabels:!0,scaleShowGridLines:!1,scaleBeginAtZero:!0,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><%if(datasets[i].label){%><span style="background-color:<%=datasets[i].fillColor%>"></span><%=datasets[i].label%><%}%></li><%}%></ul>',animation:!1,onAnimationComplete:function(){var t=this.chart.ctx;t.fillStyle=this.scale.textColor,t.font="normal 12px Helvetica",t.textAlign="center",t.textBaseline="bottom",this.datasets.forEach(function(e){e.bars.forEach(function(e){t.fillText(e.value,e.x,e.y)})})}},n=new Chart(t).Bar(e,i);return n}function p(t,e){var i=["rgba(255,255,255,0)","rgba(255,255,255,0)","rgba(255,255,255,0)"],n=["rgba(146,109,222,1)","rgba(87,199,212,1)","rgba(242,166,84,1)"],o=!1,s='<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><%if(datasets[i].label){%><span style="background-color:<%=datasets[i].pointColor%>"></span><%=datasets[i].label%><%}%></li><%}%></ul>';"curve"===e&&(i=["rgba(146, 109, 222,0.2)","rgba(87,199,212,0.2)","rgba(242,166,84,0.2)"],o=!0,s='<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><%if(datasets[i].label){%><span style="background-color:<%=datasets[i].fillColor%>"></span><%=datasets[i].label%><%}%></li><%}%></ul>');var a={labels:["1月","2月","3月","4月","5月"],datasets:[{label:"图例1",fillColor:i[0],strokeColor:n[0],pointColor:n[0],pointStrokeColor:"#fff",data:[28,24,40,19,27]},{label:"图例2",fillColor:i[1],strokeColor:n[1],pointColor:n[1],pointStrokeColor:"#fff",data:[123,132,146,118,189]},{label:"图例3",fillColor:i[2],strokeColor:n[2],pointColor:n[2],pointStrokeColor:"#fff",data:[201,232,256,215,278]}]},r={showTooltips:!1,scaleShowLabels:!0,scaleShowGridLines:!1,scaleBeginAtZero:!0,bezierCurve:o,legendTemplate:s,animation:!1,onAnimationComplete:function(){var t=this.chart.ctx,e=this.scale.max;t.font=this.scale.font,t.fillStyle=this.scale.textColor,t.textAlign="center",t.textBaseline="bottom",this.datasets.forEach(function(i){i.points.forEach(function(n,o){var s=5;e-n.value<10&&(s=0),0===o?t.fillText(n.value,n.x+10,n.y-s):o===i.points.length-1?t.fillText(n.value,n.x-10,n.y-s):t.fillText(n.value,n.x,n.y-s)})})}},l=new Chart(t).Line(a,r);return l}function h(t,e){"view"===w.mode&&e.properties.url&&$(t).click(function(){var t=e.properties.url;isNaN(t)?window.open(t):eqxiu.pageScroll(t)})}function u(t){$(t).bind("touchstart mousedown",function(t){t.stopPropagation()})}function g(t){t.focus(function(){eqxiu.pauseAutoFlip()}).blur(function(){$(document).trigger("startAutoFlip")})}function f(t){for(var e=$(t).find("a[data]"),i=0;i<e.length;i++)if(e[i]&&"view"===w.mode){$(e[i]).css("cursor","pointer");var n=$(e[i]).attr("data");!function(t){e[i].removeAttribute("href"),$(e[i]).click(function(){eqxiu.pageScroll(t)})}(n)}}function m(e,i,n){var o=PREFIX_S1_URL+"scene/msg/list?sceneId="+e;n&&(o+="&lastTime="+n),o+="&date="+(new Date).getTime(),$.ajax({type:"GET",url:o,success:function(e){if(e.success){for(var n,o,s,a=document.createDocumentFragment(),r=e.list,l=0;l<r.length;l++)o=r[l].url?'<div class="headimg" style="background-image:url('+r[l].url+')"></div>':'<div class="headimg headimg-bg"><div class="logo-scale"><em class="eqf-eqxiu"></em></div></div>',n=$('<div class="record">'+o+'<div class="name">'+r[l].name+'</div><div class="mes">'+r[l].content+'</div><div class="time">'+t.DateFormit(r[l].createTime,"MM月DD日")+"</div></div>").get(0),a.appendChild(n);10===r.length?s=r[r.length-1].createTime:0===r.length&&(s=0),n&&a.appendChild(n),i(a,s)}}})}function v(t,e){if(e.trigger){var i=$(t);i.attr("data-event","1120603"),S&&clearTimeout(S),e.trigger.sends&&e.trigger.sends.length&&$.each(e.trigger.sends,function(t,e){i.bind(utilTrigger.getSendType(e.type).name,function(){S=setTimeout(function(){$.each(e.handles,function(t,e){var i=utilTrigger.getHandleType(e.type).name;$.each(e.ids,function(t,e){var n;n=$("#inside_"+e,".phone-view").length?$("#inside_"+e,".phone-view"):$("#inside_"+e),n.trigger(i)})})},1e3*e.delay)})})}}function b(e,i){if(i.sound){var n=$(e),o=$("#media").get(0);0===i.sound.src.indexOf("http://")?i.sound.src=i.sound.src:i.sound.src=PREFIX_FILE_HOST+i.sound.src,utilSound.addAudio(e,i.sound.src),n.click(function(){utilSound.play(e,function(){o&&t.executePlay()},function(){o&&t.executePause()})})}}var w=t.templateParser("jsonParser",function(){function t(t){return function(e,i){t[e]=i}}function i(t,i){try{var n=c[(""+t.type).charAt(0)](t,i)}catch(o){return}if(n){var s=$('<li comp-drag comp-rotate class="comp-resize comp-rotate inside" id="inside_'+t.id+'" num="'+t.num+'" ctype="'+t.type+'"></li>'),a=(""+t.type).charAt(0);if("3"!==a&&"1"!==a&&s.attr("comp-resize",""),"p"===a?s.removeAttr("comp-rotate"):"1"===a?s.removeAttr("comp-drag"):"2"===a?s.addClass("wsite-text"):"x"===a?s.addClass("show-text"):"4"===a?(t.properties.imgStyle&&$(n).css(t.properties.imgStyle),s.addClass("wsite-image")):"n"===a?s.addClass("wsite-image"):"h"===a?s.addClass("wsite-shape"):"5"===a?s.addClass("wsite-input"):"6"===a?s.addClass("wsite-button"):"8"===a?s.addClass("wsite-button"):"v"===a?s.addClass("wsite-video"):"b"===a&&(s.addClass("wsite-boards"),s.attr("min-h",60),s.attr("min-w",230)),"v"===(""+t.type).charAt(0)&&s.addClass("wsite-video"),t.properties&&t.properties.lock&&s.addClass("alock"),s.mouseenter(function(){$(this).addClass("inside-hover")}),s.mouseleave(function(){$(this).removeClass("inside-hover")}),"edit"===w.mode||"x"!==(""+t.type).charAt(0)){var r=$('<div class="element-box-contents">'),l=$('<div class="element-box">').append(r.append(n));s.append(l),"5"!==(""+t.type).charAt(0)&&"6"!==(""+t.type).charAt(0)&&"r"!==t.type&&"c"!==t.type&&"a"!==t.type&&"8"!==t.type&&"l"!==t.type&&"s"!==t.type&&"i"!==t.type&&"h"!==t.type&&"z"!==t.type||"edit"!==i||$(n).before($('<div class="element" style="position: absolute; height: 100%; width: 100%;z-index: 1;">'))}var d,p=t.fonts||t.css.fontFamily||t.fontFamily;if("2"===a||"x"===a){for(var h=t.content,u=/font-family:(.*?);/g,g=[],f=[];null!==(g=u.exec(h));)f.push(g[1].trim());if(1!==f.length||"defaultFont"!==f[0]&&"moren"!==f[0]||(p=null),p){if("view"===w.mode&&t.css.fontFamily&&window.scene&&(window.scene.publishTime||!mobilecheck()&&!tabletCheck()||(d="@font-face{font-family:"+t.css.fontFamily+';src: url("'+t.properties.localFontPath+'") format("truetype");}',e(d))),"object"==typeof p&&p.constructor===Object){if(!jQuery.isEmptyObject(p))for(var m in p)x[m]||("edit"===w.mode?d="@font-face{font-family:"+m+";src: url("+PREFIX_FILE_HOST+p[m]+") format(woff);}":window.scene&&window.scene.publishTime&&(d="@font-face{font-family:"+m+';src: url("'+PREFIX_S2_URL+"fc/"+m+"_"+t.sceneId+"_"+scene.publishTime+'.woff") format("woff");}'),e(d),x[m]=!0)}else x[p]||("edit"===w.mode?d="@font-face{font-family:"+p+";src: url("+PREFIX_FILE_HOST+t.preWoffPath+") format(woff);}":window.scene&&window.scene.publishTime&&(d="@font-face{font-family:"+p+';src: url("'+PREFIX_S2_URL+"fc/"+p+"_"+t.sceneId+"_"+scene.publishTime+'.woff") format("woff");}'),e(d),x[p]=!0);"edit"===w.mode&&localStorage.setItem("shoppingFontFamily",JSON.stringify(x))}}if(t.css){var v=320-parseInt(t.css.left,10);if(s.css({width:v}),s.css({width:t.css.width,height:t.css.height,left:t.css.left,top:t.css.top,zIndex:t.css.zIndex,bottom:t.css.bottom,transform:t.css.transform,opacity:t.css.opacity}),0!==t.css.boxShadowSize&&""+t.css.boxShadowSize!="0"||(t.css.boxShadow="0px 0px 0px rgba(0,0,0,0.5)"),"edit"!==w.mode&&"x"===(""+t.type).charAt(0))return s.append(n),s.find(".element-box").css({borderStyle:t.css.borderStyle,borderWidth:t.css.borderWidth,borderColor:t.css.borderColor,borderTopLeftRadius:t.css.borderTopLeftRadius,borderTopRightRadius:t.css.borderTopRightRadius,borderBottomRightRadius:t.css.borderBottomRightRadius,borderBottomLeftRadius:t.css.borderBottomLeftRadius,boxShadow:t.css.boxShadow,backgroundColor:t.css.backgroundColor,width:"100%",height:"100%",overflow:"hidden"}),s.find("img").css({width:"100%"}),s;isAndroid()&&isWeixin()&&""+t.type=="4"&&"0px"!==t.css.borderRadius&&0===t.css.borderWidth&&t.properties.anim&&(t.css.borderWidth=1,t.css.borderColor="rgba(0,0,0,0)");var b=$.extend(!0,{},t.css),y=$.extend(!0,b,{opacity:""});delete y.fontFamily,l.css(y).css({width:"100%",height:"100%",transform:"none"}),l.children(".element-box-contents").css({width:"100%",height:"100%"}),"4"!==(""+t.type).charAt(0)&&"n"!==(""+t.type).charAt(0)&&"p"!==(""+t.type).charAt(0)&&"h"!==(""+t.type).charAt(0)&&"t"!==(""+t.type).charAt(0)&&"z"!==(""+t.type).charAt(0)&&$(n).css({width:t.css.width,height:t.css.height}),"w01"!==t.type&&"w02"!==t.type||$(n).css({lineHeight:t.css.height+"px"}),"h"===(""+t.type).charAt(0)&&($(n).find("g").length?$(n).find("g").attr("fill",t.css.color):$(n).children().attr("fill",t.css.color),l.children(".element-box-contents").css("position","relative"))}return s}}function n(t){for(var e=0;e<t.length-1;e++)for(var i=e+1;i<t.length;i++)if(parseInt(t[e].css.zIndex,10)>parseInt(t[i].css.zIndex,10)){var n=t[e];t[e]=t[i],t[i]=n}for(var o=0;o<t.length;o++)t[o].css.zIndex=o+1+"";return t}function o(t,e,o){e=e.find(".edit_area");var s,a=t.elements;if(a)for(a=n(a),s=0;s<a.length;s++)if(a[s].sceneId=t.sceneId,""+a[s].type=="3"){var r=c[(""+a[s].type).charAt(0)](a[s],e);"edit"===o&&d[(""+a[s].type).charAt(0)]&&d[(""+a[s].type).charAt(0)](r,a[s])}else{var l=i(a[s],o);if(!l)continue;e.append(l);for(var u=0;u<h.length;u++)h[u](l,a[s],o);p[(""+a[s].type).charAt(0)]&&(p[(""+a[s].type).charAt(0)](l,a[s]),"edit"!==o&&(v(l,a[s]),b(l,a[s]))),"edit"===o&&d[(""+a[s].type).charAt(0)]&&d[(""+a[s].type).charAt(0)](l,a[s])}}function s(){return d}function a(){return c}function r(t){h.push(t)}function l(){return h}var c={},d={},p={},h=[],u=containerWidth=320,g=containerHeight=486,f={getComponents:a,getEventHandlers:s,addComponent:t(c),bindEditEvent:t(d),bindAfterRenderEvent:t(p),addInterceptor:r,getInterceptors:l,wrapComp:i,disEvent:!1,mode:"view",parse:function(t){var e=$('<div class="edit_wrapper" data-scene-id="'+t.def.sceneId+'"><ul eqx-edit-destroy id="edit_area'+t.def.id+'" paste-element class="edit_area weebly-content-area weebly-area-active"></div>'),i=this.mode=t.mode;this.def=t.def,t.disEvent&&(this.disEvent=!0),"view"===i&&tplCount++;var n=$(t.appendTo);return containerWidth=n.width(),containerHeight=n.height(),ratioX=u/containerWidth,ratioY=g/containerHeight,o(t.def,e.appendTo($(t.appendTo)),i)}};return f});w.addInterceptor(function(t,e,i){eqxCommon.animation(t,e,i,w.def.properties)}),w.addComponent("1",function(t){var e=document.createElement("div");if(e.id=t.id,e.setAttribute("class","element comp_title"),t.content&&(e.textContent=t.content),t.css){var i,n=t.css;for(i in n)e.style[i]=n[i]}if(t.properties.labels)for(var o=t.properties.labels,s=0;s<o.length;s++)$('<a class = "label_content" style = "display: inline-block;">').appendTo($(e)).html(o[s].title).css(o[s].color).css("width",100/o.length+"%");return e});var x={};w.addComponent("2",function(t){var e=document.createElement("div");return e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element comp_paragraph editable-text"),t.content&&(t.properties.anim&&t.properties.anim.length&&"typer"===t.properties.anim[0].type&&"view"===w.mode?e.innerHTML="":e.innerHTML=t.content),e.style.cursor="default",t.css.fontSize&&(e.style.fontSize=t.css.fontSize+"px"),e}),w.addComponent("x",function(t){function e(){i=document.createElement("div"),i.id=t.id,i.setAttribute("ctype",t.type),i.setAttribute("class","element comp_paragraph editable-text"),t.content&&(i.innerHTML=t.content),i.style.cursor="default"}var i;return!mobilecheck()&&window.top===window.self&&$(".create_left").get(0)&&(w.mode="edit"),e(),i}),w.addComponent("3",function(e,i){var n,o=document.createElement("div");if("edit"===w.mode?(n=i?i.parent(".edit_wrapper"):$("#nr .edit_wrapper"),o.setAttribute("class","wrapper-background"),o.setAttribute("id",e.id)):"view"===w.mode&&(n=i?i.parent(".edit_wrapper"):$("#edit_area"+w.def.id).parent(".edit_wrapper"),o.setAttribute("id","wrapper-background"+w.def.id)),2!==e.properties.croptype||"edit"===w.mode||w.def.istpl){var s="100%";$(o).prependTo(n),2!==e.properties.croptype||w.def.istpl||(s=486*e.properties.pageLength+"px",$(o).parent().css("overflow","visible")),$(o).css({width:"100%",height:s})}var a,r=new Image;if(e.properties.imgSrc){a=e.properties.imgSrc;var l=/.svg/;if(t.isMobileApp()||l.test(a)||(a="view"===w.mode?2===e.properties.croptype&&e.properties.pageLength?t.qiniuZoom({css:{width:320,height:486*e.properties.pageLength}},a):t.qiniuZoom({css:{width:320,height:486}},a):t.qiniuZoom(null,a)),2===e.properties.croptype&&"view"===w.mode&&!w.def.istpl){var c="";return c=/^http.*!/.test(a)?"url("+a+")":"url("+PREFIX_FILE_HOST+a+")",i.parent().css({backgroundImage:c,height:486*(e.properties.pageLength-1)+(mobilecheck()?$(document).height():486)+"px"}),o}/^http.*!/.test(a)?(r.src=a,o.style.backgroundImage="url("+a+")"):(r.src=PREFIX_FILE_HOST+a,o.style.backgroundImage="url("+PREFIX_FILE_HOST+a+")"),o.style.backgroundOrigin="element content-box",o.style.backgroundSize="cover",o.style.backgroundPosition="50% 50%",e.effect&&("scaleUp"===e.effect.type?$(o).css({animation:"scaleUp 7s ease 1s","animation-fill-mode":"both"}):"scaleDown"===e.effect.type&&$(o).css({animation:"scaleDown 7s ease 1s","animation-fill-mode":"both"}))}else e.properties.bgColor&&(o.style.backgroundColor=e.properties.bgColor,e.properties.pageLength&&"edit"===w.mode&&$(o).css({height:486*e.properties.pageLength+"px"}).parent().css("overflow","visible"));return o}),w.addComponent("4",function(e){var n,o=new RegExp(t.getDomain(PREFIX_FILE_HOST)),s=/^http.*/.test(e.properties.src)?e.properties.src:PREFIX_FILE_HOST+e.properties.src;t.isMobileApp()||(s=s.replace(OLD_FILE_HOST,PREFIX_FILE_HOST));var a=/.svg/;if(o.test(s)&&!a.test(s)&&(s="view"===w.mode?t.qiniuZoom(e,s):t.qiniuZoom(null,s)),e.properties.filter){if(e.properties.filter.type){var r=i(),l=r[e.properties.filter.type-1];n=document.createElement("div");var c;c=mobilecheck()?'<svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg"><g><image width="100%" height="100%" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="'+s+'" filter="url(#'+e.id+')"></image><defs><filter id="'+e.id+'"><feColorMatrix class="saturation" color-interpolation-filters="sRGB" type="matrix" values="'+l.path+'"></feColorMatrix></filter></defs></g></svg>':'<svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg"><g><image width="100%" height="100%" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="'+s+'" filter="url('+window.location.href+"#"+e.id+')"></image><defs><filter id="'+e.id+'"><feColorMatrix class="saturation" color-interpolation-filters="sRGB" type="matrix" values="'+l.path+'"></feColorMatrix></filter></defs></g></svg>',n.innerHTML=c}}else n=document.createElement("img"),n.id=e.id,n.setAttribute("ctype",e.type),n.setAttribute("class","element comp_image editable-image"),n.src=s;return""+e.type=="403"&&n.setAttribute("data-event","1120611"),""+e.type=="403"&&e.properties.wxSrc&&isWeixin()&&(n.style.display="none"),n}),w.addComponent("h",function(t){var e,i;if(t.properties.src)return e=document.createElementNS(eqxiuSvg.NAMESPACE,"svg"),e.setAttribute("class","element svg-element"),$.ajax({type:"GET",url:PREFIX_FILE_HOST+t.properties.src,dataType:"xml",success:function(i){var o=i.getElementsByTagName("svg"),s=parseFloat($(o).attr("width")),a=parseFloat($(o).attr("height")),r=$(o).find('[fill], [style*="fill"]'),l=t.properties.items?t.properties.items:[];if(t.properties.items)if(l[0].elements||(t.properties.items=n(l,r)),r.length===l.length)for(var c=0;c<l.length;c++)r.eq(c).css({fill:l[c].fill});else $.each(r,function(t){for(var e=0;e<l.length;e++)for(var i=l[e].elements,n=0;n<i.length;n++)t===i[n]&&(""!==l[e].fill?r.eq(t).css({fill:l[e].fill}):r.eq(t).css({fill:"none"}))});else{var d=[],p={};$.each(r,function(t,e){var i=$(e).attr("style");if(i){for(var n=i.split(";"),o=0,s=n.length;o<s;o++)if(n[o].indexOf("fill:")>=0){d.push(n[o].split(":")[1]);break}}else d.push($(e).attr("fill"))});for(var h=0;h<d.length;h++)p[d[h]]||(p[d[h]]=1,"none"!==d[h]?l.push({fill:d[h],svgFill:d[h]}):l.push({fill:"",svgFill:"none"}));t.properties.items=n(l,r)}viewBoxVal="0 0 "+s+" "+a;var u=e.parentNode;u.removeChild(e),e=o[0],u.appendChild(e),e.setAttribute("viewBox",viewBoxVal),e.setAttribute("preserveAspectRatio","none"),e.setAttribute("width","100%"),e.setAttribute("height","100%"),e.id=t.id,e.setAttribute("class","element svg-element")}}),e;if(t.properties.type.indexOf("symbol")<0){var e=document.createElementNS(eqxiuSvg.NAMESPACE,"svg");return e.id=t.id,e.setAttribute("class","element svg-element"),e.setAttribute("xmlns",eqxiuSvg.NAMESPACE),e.setAttribute("version","1.1"),e.setAttribute("width","100%"),e.setAttribute("height","100%"),e.setAttribute("preserveAspectRatio","none"),i=eqxiuSvg.ShapeFromType(t.properties.type),i.setAttribute("fill","#555"),e.appendChild(i),s=eqxiuSvg.boundingBox(i),viewBox=[Math.round(s.x)||0,Math.round(s.y)||0,Math.round(s.width)||32,Math.round(s.height)||32].join(" "),e.setAttribute("viewBox",viewBox),e}return e=document.createElement("div"),i=eqxiuSvg.ShapeFromType(t.properties.type,100,100,t.id,t.css.color),e='<svg id="'+t.id+'" class="element svg-element" ctype="'+t.type+'" xmlns="'+eqxiuSvg.NAMESPACE+'" version="1.1" width="100%" height="100%" preserveAspectRatio="xMidYMid" viewBox="'+t.properties.viewBox+'">'+i+"</svg>"}),w.addComponent("v",function(t){var e=document.createElement("a");return e.setAttribute("class","element video_area"),e.id=t.id,e.setAttribute("ctype",t.type),t.properties.src&&e.setAttribute("videourl",t.properties.src),e}),w.addComponent("5",function(t){var e=document.createElement("textarea");return e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element comp_input editable-text"),e.setAttribute("maxlength","300"),t.properties.required&&e.setAttribute("required",t.properties.required),t.properties.placeholder&&e.setAttribute("placeholder",t.properties.placeholder),e.setAttribute("name","eq[f_"+t.id+"]"),e.style.width="100%",e}),w.addComponent("r",function(t){var e=$('<div class="element comp_radio editable-text" id="'+t.id+'"></div>');e.attr("ctype",t.type),e.attr("required",t.properties.required),e.attr("title",t.title),e.attr("name","eq[f_"+t.id+"]");var i=$('<div class="radio-title">'+t.title+"</div>");t.properties.titleStyle&&i.css(t.properties.titleStyle),e.append(i);var n=$('<div class="options"></div>'),o=JSON.parse(t.choices);return $.each(o.options,function(e,i){var s=$('<div class="option-group"><label class="option-label" for="'+(t.id+""+(e+1))+'" data-event="11208"><input class="option" id="'+(t.id+""+(e+1))+'" type="radio" name="eq[f_'+t.id+']" value="'+i.id+'" data-event="11208">'+i.label+"</label></div>");t.properties.optionStyle&&e<o.options.length-1&&s.css(t.properties.optionStyle),n.append(s)}),e.append(n),e.width("100%"),e.get(0)}),w.addComponent("c",function(t){var e=$('<div class="element comp_radio editable-text" id="'+t.id+'"></div>');e.attr("ctype",t.type),e.attr("required",t.properties.required),e.attr("title",t.title),e.attr("name","eq[f_"+t.id+"]");var i=$('<div class="radio-title">'+t.title+"(可多选)</div>");t.properties.titleStyle&&i.css(t.properties.titleStyle),e.append(i);var n=$('<div class="options"></div>'),o=JSON.parse(t.choices);return $.each(o.options,function(e,i){var s=$('<div class="option-group"><label class="option-label" for="'+(t.id+""+(e+1))+'" data-event="11209"><input class="option" id="'+(t.id+""+(e+1))+'" type="checkbox" name="eq[f_'+t.id+']" value="'+i.id+'" data-event="11209">'+i.label+"</label></div>");t.properties.optionStyle&&e<o.options.length-1&&s.css(t.properties.optionStyle),n.append(s)}),e.append(n),e.width("100%"),e.get(0)}),w.addComponent("a",function(t){var e=$('<div class="element comp_rating editable-text" id="'+t.id+'"></div>');e.attr("ctype",t.type),e.attr("required",t.properties.required),e.attr("title",t.title),e.attr("name","eq[f_"+t.id+"]"),e.append($('<div class="rating-title">'+t.title+"</div>"));for(var i=$('<div class="rating-icons"></div>'),n=0;n<5;n++)i.append($('<i class="'+t.properties.icon+"-line "+t.properties.size+'">').css("color",t.properties.color));return e.append(i),e.append($('<input type="hidden" name="eq[f_'+t.id+']" value="">')),e.width("100%"),e.get(0)}),w.addComponent("p",function(e){if(e.properties&&e.properties.children){var i=e.css.width,n=e.css.height,s=$('<div id="'+e.id+'" class="slider element" ctype="'+e.type+'"></div>');e.properties.bgColor&&s.css("backgroundColor",e.properties.bgColor);var a=/.svg/;return $.each(e.properties.children,function(r,l){var c=o(l.width,l.height,i,n),d=l.src;t.isMobileApp()||a.test(d)||(d="view"===w.mode?t.qiniuZoom(e,d):t.qiniuZoom(null,d));var p=$('<img src="'+PREFIX_FILE_HOST+d+'">');p.css({margin:(n-c.height)/2+"px "+(i-c.width)/2+"px",width:c.width,height:c.height}),s.append(p)}),utilPictures.deleteInterval(e.id),s.get(0)}}),w.addComponent("n",function(t){if(t.properties&&t.properties.pics.length){var e=$('<div id="'+t.id+'" class="random-event element comp_image editable-image" ctype="'+t.type+'"></div>');t.css.width||(t.css.width="180px");var i=180*parseInt(t.properties.pics[0].height,10)/parseInt(t.properties.pics[0].width,10);return t.css.height||(t.css.height=i+"px"),$.each(t.properties.pics,function(t,i){var n=$('<img src="'+PREFIX_FILE_HOST+i.src+'">');n.css({width:"100%",height:"100%",display:"none"}),0===t&&(n.css({display:"block"}),e.css({width:"100%",height:"100%"})),e.append(n)}),e.get(0)}}),w.addComponent("6",function(t){var e=document.createElement("button");if(e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element comp_button editable-text"),e.setAttribute("data-event","11201"),t.properties.title){var i=t.properties.title.replace(/ /g,"&nbsp;");e.innerHTML=i}return e.style.width="100%",e}),w.addComponent("8",function(t){var e=document.createElement("a");e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element comp_anchor editable-text"),e.setAttribute("data-event","1120602");var i=null;return t.properties.imgSrc?(i=$('<img style="width: 100%; height: 100%;" src="'+(PREFIX_FILE_HOST+t.properties.imgSrc)+'"/>'),$(e).html(i),"view"===w.mode&&$(e).attr("href","tel:"+t.properties.number)):t.properties.title&&(i=t.properties.title.replace(/ /g,"&nbsp;"),$(e).html(i),
"view"===w.mode&&$(e).attr("href","tel:"+t.properties.number)),e.style.cursor="default",e.style.width="100%",e}),w.addComponent("l",function(t){var e=document.createElement("a");e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element comp_anchor editable-text"),e.setAttribute("data-event","1120601");var i=null;return t.properties.imgSrc?(i=$('<img style="width: 100%; height: 100%;" src="'+(PREFIX_FILE_HOST+t.properties.imgSrc)+'"/>'),$(e).html(i)):t.properties.title&&(i=t.properties.title.replace(/ /g,"&nbsp;"),$(e).html(i)),e.style.cursor="default",e.style.width="100%",e}),w.addComponent("s",function(t){var e=document.createElement("a");e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element comp_anchor editable-text"),e.setAttribute("data-event","1120604");var i=null;return t.properties.imgSrc?(i=$('<img style="width: 100%; height: 100%;" src="'+(PREFIX_FILE_HOST+t.properties.imgSrc)+'"/>'),$(e).html(i)):t.properties.title&&(i=t.properties.title.replace(/ /g,"&nbsp;"),$(e).html(i)),e.style.cursor="default",e.style.width="100%",e}),w.addComponent("i",function(e){var i=$('<div class="element comp_counter not-voted editable-text" id="'+e.id+'"></div>');i.attr("ctype",e.type),i.attr("name","eq[f_"+e.id+"]"),i.addClass(e.properties.layout).addClass(e.properties.size);var n=$('<div class="counter-container"></div>');e.properties.imgSrc?(n.append($('<img class="counter-elem counter-icon" style="width: 115px; height: 115px; margin: 0 auto;" src="'+(PREFIX_FILE_HOST+e.properties.imgSrc)+'"/>')),n.attr("data-event","1120609")):(n.append($('<i class="counter-elem counter-icon '+e.properties.icon+'">').css("color",e.properties.color)),"eqf-love"===e.properties.icon?n.attr("data-event","1120605"):"eqf-good"===e.properties.icon?n.attr("data-event","1120606"):"eqf-flower2"===e.properties.icon?n.attr("data-event","1120607"):"eqf-vote"===e.properties.icon&&n.attr("data-event","1120608"));var o=$('<span class="counter-elem counter-number">0</span>').css("color",e.properties.color);if(n.append(o),"view"===w.mode?t.counterValues&&t.counterValues.then(function(i){var n=i.map[e.id]||0;o.attr("data-counter-number",n);var s=t.fixedNum(n);o.text(s)}):i.removeClass("not-voted"),i.width("100%"),"counter-tb"===e.properties.layout){var s=0;s=e.properties.imgSrc?"counter-l"===e.properties.size?77:"counter-m"===e.properties.size?71:66:"counter-l"===e.properties.size?40:"counter-m"===e.properties.size?30:20,n.css("margin-top",-s)}return"edit"!==w.mode&&setTimeout(function(){var t={width:"auto","min-width":e.css.width};i.css(t),i.parents("li.comp-resize").css(t)},100),i.append(n),e.css.lineHeight&&i.css("line-height",e.css.lineHeight),i.get(0)}),w.addComponent("d",function(e){var i=$('<div class="element comp_counter editable-text" id="'+e.id+'"></div>');i.attr("ctype",e.type),i.addClass(e.properties.layout).addClass(e.properties.size);var n=$('<div class="counter-container"></div>');n.append($('<i class="counter-elem counter-icon '+e.properties.icon+'">').css("color",e.properties.color));var o=$('<span class="counter-elem counter-number">0</span>').css("color",e.properties.color);if(n.append(o),"view"===w.mode&&t.showCount&&t.showCount.then(function(e){var i=t.fixedNum(e),n=i||0;o.text(n)}),i.width("100%"),"counter-tb"===e.properties.layout){var s=0;s="counter-l"===e.properties.size?40:"counter-m"===e.properties.size?30:20,n.css("margin-top",-s)}return i.append(n),e.css.lineHeight&&i.css("line-height",e.css.lineHeight),i.get(0)}),w.addComponent("7",function(t){var e=document.createElement("div");if(e.id="map_"+t.id,e.setAttribute("class","element comp_map_wrapper"),t.content&&(e.textContent=t.content),t.css){var i,n=t.css;for(i in n)e.style[i]=n[i]}return e.style.height="250px",e}),w.addComponent("m",function(t){var e,i,n=new qq.maps.LatLng(t.properties.lat?t.properties.lat:39.916527,t.properties.lng?t.properties.lng:116.397128);e=document.createElement("div"),e.id=t.id,e.setAttribute("ctype",t.type),e.setAttribute("class","element"),"edit"===w.mode?i={draggable:!1,scrollwheel:!1,disableDoubleClickZoom:!0,disableDefaultUI:!0,center:n,zoom:t.properties.zoom?t.properties.zoom:11}:(i={disableDefaultUI:!0,center:n,zoom:t.properties.zoom?t.properties.zoom:11},$(e).on("mousedown mousemove mouseup mouseleave touchstart touchmove touchend",function(t){t.stopPropagation()}));var o=new qq.maps.Map(e,i);if("edit"===w.mode&&$(e).data("map",o),t.content&&""!==t.content){var s=new qq.maps.Label({position:n,map:o,content:t.content});"edit"===w.mode&&$(e).data("label",s)}var a=new qq.maps.Point(25,5),r=new qq.maps.Size(34,34),l=new qq.maps.Point(0,0),c=new qq.maps.MarkerImage(PREFIX_HOST+"/assets/images/marker.png",r,l,a),d=new qq.maps.Marker({map:o,position:o.getCenter()});return d.setIcon(c),$(e).data("marker",d),e}),w.addComponent("w",function(t){var e,i=document.createElement("a");return""+t.type=="w01"?(e="element comp_wechat_play",i.innerHTML='<span style="font-size:16px;" class="eqf-nosy"></span>'):""+t.type=="w02"&&(e="element comp_wechat_hear",i.innerHTML=t.properties.title,i.setAttribute("data-event","1120612")),i.id=t.id,i.setAttribute("class",e),i.setAttribute("ctype",t.type),i}),w.addComponent("t",function(t){var e=$('<div class="create-chart" id="chart-'+t.id+'"></div>'),i=document.createElement("h5");i.setAttribute("class","chart-title"),e.append(i);var n=document.createElement("canvas");n.id=t.id,n.setAttribute("ctype",t.type),e.append(n);var o=document.createElement("div");o.id="legend-"+t.id,e.append(o);var s,h=t.properties.chartType,u=n.getContext("2d"),g=y(u);if(mobilecheck()&&g>1){var f=parseFloat(t.css.width),m=parseFloat(t.css.height)/2;n.width=f,n.height=m,n.style.width=f/g+"px",n.style.height=m/g+"px",u.scale(g,g)}"pie"===h?(s=c(u),"edit"===w.mode&&$(n).data("pieChart",s)):"bar"===h?(s=d(u),"edit"===w.mode&&$(n).data("barChart",s)):"line"!==h&&"curve"!==h||(s=p(u,h),"edit"===w.mode&&$(n).data("lineChart",s)),t.properties.chartTitle&&(i.innerHTML=t.properties.chartTitle),"pie"===h&&t.properties.pieChart&&(s=l(t,u,s),$(n).data("pieChart",s)),"bar"===h&&t.properties.barChart&&(s=r(t,u,s),$(n).data("barChart",s)),"line"!==h&&"curve"!==h||!t.properties.lineChart||(s=a(t,u,s),$(n).data("lineChart",s)),o.innerHTML=s.generateLegend();var v=t.properties.legPosition;return"position-align"===v?$(o).addClass("position-align"):"position-right"===v?$(o).addClass("position-right"):"position-none"===v&&$(o).addClass("position-none"),mobilecheck()||($(n).attr("width")&&($(n).removeAttr("width"),$(n).css("width","100%")),$(n).attr("height")&&($(n).removeAttr("height"),$(n).css("height","50%")),s.update()),e.get(0)});var y=function(t){var e=t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1,i=(window.devicePixelRatio||1)/e;return i};w.addComponent("z",function(t){var e=$('<div style="width:100%;height:100%" id="'+t.id+'"></div>');e.attr("ctype",t.type),e.attr("required",t.required);var i=$('<button type="button" class="btn dropdown-toggle btn-default" style="width:100%;height:100%;background-color:#ffffff;color:#666;padding-top: 0px;border: 1px solid rgb(8,161,239);font-family: Open Sans, sans-serif;font-weight: 400;font-size: 16px;border-top-left-radius: 0px;border-bottom-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;position:absolute;top:0px;left:0px;pointer-events:none;padding-bottom: 0px;padding-right:0px;padding-left:0px;overflow: hidden" data-toggle="dropdown" title="Nothing selected" aria-expanded="false"><span class="filter-option pull-left" style="margin-left: 8px;float:left;width:calc(100% - 42px);width:-moz-calc(100% - 42px);width:-webkit-calc(100% - 42px);overflow:hidden;text-align: left;" id="selectButton'+t.id+'">'+t.showText+'</span>&nbsp;<span class="bs-caret" style="float:right;margin-right:10px;"><span class="caret" style="display: inline-block;width: 0px;height: 0px;vertical-align: middle;border-top:4px dashed;border-right: 4px solid transparent;border-left: 4px solid transparent;margin-left: 0px;"></span></span></button>');e.append(i);var n=JSON.parse(t.choices).options,o=$('<select style="width:100%;height:100%; " name="eq[f_'+t.id+']"></select>');o.attr("ctype",t.type),o.attr("data-event","11210");var s=null,a=0;return s=t.placeholderText===t.showText?$('<option value="'+t.placeholderText+'" selected>'+t.placeholderText+"</option>"):$('<option value="'+t.placeholderText+'">'+t.placeholderText+"</option>"),o.append(s),$.each(n,function(e,i){i.label===t.showText?(a++,s=$('<option value="'+i.label+'" selected>'+i.label+"</option>")):s=$('<option value="'+i.label+'">'+i.label+"</option>"),o.append(s)}),$(o).change(function(){$("#selectButton"+t.id).text($(o).val())}),e.append(o),e}),w.addComponent("b",function(t){var e,i,n=document.createElement("div"),o=document.createDocumentFragment(),s=$('<div class="tool"><a class="replay">'+t.properties.meslabel+'</a><a class="more">'+t.properties.morelabel+"</a></div>").get(0);if(o.appendChild(s),"view"!==w.mode||w.disEvent){e=[{mes:"赞一个！好多新功能哦~",name:"匿名用户",time:"2月1日 13:00"},{mes:"赞一个！好多新功能哦~",name:"匿名用户",time:"2月1日 12:58"},{mes:"赞一个！好多新功能哦~",name:"匿名用户",time:"2月1日 12:55"}];for(var a=0;a<e.length;a++)i=$('<div class="record"><div class="headimg headimg-bg"><div class="logo"><em class="eqf-logo"></em></div></div><div class="name">'+e[a].name+'</div><div class="mes">'+e[a].mes+'</div><div class="time">'+e[a].time+"</div></div>").get(0),o.appendChild(i)}else m(t.sceneId,function(e,i){if(0===i){var o=$('<div class="empty-boards"><image style="margin-top:-20px;" src="'+CLIENT_CDN+"view/images/"+t.properties.style+'_boards.png" /></div>').get(0);n.appendChild(o)}else n.appendChild(e)});return n.appendChild(o),n.id=t.id,n.setAttribute("class","element boards-"+t.properties.style),n.setAttribute("ctype",t.type),n}),w.addComponent("g",function(e,i){var n=document.createElement("div");if("edit"===i&&$('<div class="over-ele"></div><div class="ad-contain"></div>').appendTo(n),e.content){var o=t.isMobileApp()?t.getDomain(PREFIX_HOST):location.host,s=$('<iframe id="iframe-'+e.id+'" scrolling="no" frameborder="0" width="100%" height="100%" src="http://'+o+'/advertisement.html"></iframe>'),a=s.get(0);a.onload=function(){var t=a.contentDocument,i=a.contentWindow.jQuery;i(t.body).append(i(e.content))},"edit"===i?$(n).find(".ad-contain").append(s):s.appendTo(n)}return e.css.zIndex=999,n.id=e.id,n.setAttribute("class","element"),n.setAttribute("ctype",e.type),n}),w.bindAfterRenderEvent("8",function(t,e){t=$("a",t)[0];var i={id:e.sceneId,num:e.properties.number};if("view"===w.mode){var n=function(){$.ajax({cache:!0,type:"POST",url:PREFIX_S1_URL+"eqs/dial",data:$.param(i),async:!1,error:function(){alert("Connection error")}})};t.addEventListener("click",n)}}),w.bindAfterRenderEvent("l",function(t,e){if(t=$("a",t)[0],"view"===w.mode){var i=e.properties.url;$(t).click(function(){isNaN(i)?window.open(i):eqxiu.pageScroll(i)})}}),w.bindAfterRenderEvent("i",function(e,i){if("view"===w.mode&&!w.disEvent){var n=$(e).find(".comp_counter");n.click(function(){var o={sceneId:i.sceneId,fieldId:i.id},s=$(e);$.ajax({cache:!0,type:"POST",url:PREFIX_S1_URL+"eqs/scene/counter",data:$.param(o),async:!1,error:function(){alert("Connection error")},success:function(){n.unbind("click"),s.find(".comp_counter").removeClass("not-voted");var e=$(".counter-number",s),i=(parseInt(e.attr("data-counter-number"),10)||0)+1;e.attr("data-counter-number",i);var o=t.fixedNum(i);$(".counter-number",s).text(o)}})})}}),w.bindAfterRenderEvent("4",function(t,e){"view"===w.mode&&(""+e.type=="4"?($(t).attr("data-event","1120601"),h(t,e)):""+e.type=="403"&&t.on("click",function(){return isWeixin()?void $(document).trigger("wx.img.upload",e.id):void alert("请在微信中点击我！")}))}),w.bindAfterRenderEvent("x",function(t,e){h(t,e)}),w.bindAfterRenderEvent("h",function(t,e){$(t).attr("data-event","1120601"),h(t,e)}),w.bindAfterRenderEvent("5",function(t,e){var i=mobilecheck();u($(t).find("textarea")),g($(t).find("textarea")),"view"===w.mode&&i&&parseFloat(e.css.top)>=200&&($(t).find("textarea").focus(function(){$(t).closest(".edit_area").css({top:"-150px"})}),$(t).find("textarea").blur(function(){$(t).closest(".edit_area").css({top:0})}))}),w.bindAfterRenderEvent("r",function(t){"view"===w.mode&&u($(t).find("label"))}),w.bindAfterRenderEvent("c",function(t){"view"===w.mode&&u($(t).find("label"))}),w.bindAfterRenderEvent("v",function(t,e){"view"===w.mode&&$(t).click(function(){$(t).hide(),$("#audio_btn").hasClass("video_exist")&&($("#audio_btn").hide(),$("#media")[0].pause()),utilSound.pause(),$('<div class="video_mask page_effect lock" id="mask_'+e.id+'"></div>').appendTo($(t).closest(".m-img")),$('<a class = "close_mask eqf-wrong" id="close_'+e.id+'"></a>').appendTo($(t).closest(".m-img")),$(e.properties.src).appendTo($("#mask_"+e.id)).attr("style","position: absolute;top:0; min-height: 45%; max-height: 100%; top: 20%;").attr("width","100%").removeAttr("height"),$("#close_"+e.id).bind("click",function(){$(t).show(),$("#mask_"+e.id).remove(),$("#close_"+e.id).remove(),$("#audio_btn").hasClass("video_exist")&&$("#audio_btn").show(function(){$("#media")[0].play()})})})}),w.bindAfterRenderEvent("2",function(t,e){f(t),h(t,e)}),w.bindAfterRenderEvent("6",function(e,i){if(e=$("button",e)[0],"view"===w.mode){var n={REQUIRED:"为必填项！",WRONG_PHONE_NUMBER_FORMAT:"电话号码格式错误！",WRONG_EMAIL_FORMAT:"邮箱格式错误！",FILL_OUT_THE_FORM:"请填写表单！",DUPLICATED_SUBMISSION:"请不要重复提交！",THANKS_FOR_PARTICIPATION:"谢谢您的参与！"},o=function(t,e,o){var s=!0,a={};if($("textarea",o).each(function(){if(s){if("required"===$(this).attr("required")&&""===$(this).val().trim())return alert($(this).attr("placeholder")+n.REQUIRED),void(s=!1);if("502"===$(this).attr("ctype")&&""!==$(this).val().trim()){var t=new RegExp(/^\d{3,15}$/);if(!t.test($(this).val()))return alert("电话输入有误，请输入3-15位数字"),void(s=!1)}if("503"===$(this).attr("ctype")&&""!==$(this).val().trim()){var e=new RegExp(/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/g);if(!e.test($(this).val()))return alert("邮箱格式错误！"),void(s=!1)}a[$(this).attr("name")]=$(this).val()}}),$("input:checked",o).each(function(){var t=$(this);a[t.attr("name")]?a[t.attr("name")]+=","+t.val():a[t.attr("name")]=t.val()}),$('.comp_radio[required="required"]',o).each(function(){var t=$(this);a[t.attr("name")]||(alert(t.attr("title")+n.REQUIRED),s=!1)}),$('input[type="hidden"]',o).each(function(){a[$(this).attr("name")]=$(this).val()}),$('.comp_rating[required="required"]',o).each(function(){var t=$(this);a[t.attr("name")]&&""+a[t.attr("name")]!="0"||(alert(t.attr("title")+"为必填项！"),s=!1)}),s){var r=!1;if($.isEmptyObject(a))return void(r=!0);for(var l in a)if(""!==a[l]){r=!0;break}if(!r)return void alert("请填写表单！");$("select",o).each(function(){var t=$(this).attr("name").substring(5,$(this).attr("name").length-1),e=$(this).find("option:first").val(),i=$(this).val();if("required"===$("#"+t).attr("required")){if(e===i)return alert("你还没有选择下拉列表！"),void(s=!1)}else e===i&&$(this).val(null);a[$(this).attr("name")]=$(this).val()}),s&&$.ajax({cache:!0,type:"POST",url:PREFIX_S1_URL+"eqs/r/"+e,data:$.param(a),async:!1,error:function(){alert("Connection error")},success:function(){$(t).unbind("click").click(function(){alert("请不要重复提交！")});var e;i.properties.layout||(i.properties.layout="rating-l",i.properties.text=""),i.properties.text.trim()||"rating-l"!==i.properties.layout?("rating-m"===i.properties.layout&&(e=i.properties.checkedLink?'<div class="feedback-box"><div class="feedback-form"><img src = "'+(PREFIX_FILE_HOST+i.properties.imgSrc)+'"/><a href="'+i.properties.link+'" style="margin-top:20px;"><span>'+i.properties.text+'</span></a><button class="feedback-button">我知道了</button></div></div>':'<div class="feedback-box"><div class="feedback-form"><img src = "'+(PREFIX_FILE_HOST+i.properties.imgSrc)+'"/><span style="margin-top:20px;">'+i.properties.text+'</span><button class="feedback-button">我知道了</button></div></div>'),"rating-s"===i.properties.layout&&(e=i.properties.checkedLink?'<div class="feedback-box"><div class="feedback-form"><a href="'+i.properties.link+'"><span>'+i.properties.text+'</span></a><img src = "'+(PREFIX_FILE_HOST+i.properties.imgSrc)+'" style="margin-top:20px;"/><button class="feedback-button">我知道了</button></div></div>':'<div class="feedback-box"><div class="feedback-form"><span>'+i.properties.text+'</span><img src = "'+(PREFIX_FILE_HOST+i.properties.imgSrc)+'" style="margin-top:20px;"/><button class="feedback-button">我知道了</button></div></div>'),"rating-l"===i.properties.layout&&(e=i.properties.checkedLink?'<div class="feedback-box"><div class="feedback-form"><a href="'+i.properties.link+'"><span>'+i.properties.text+'</span></a><button class="feedback-button">我知道了</button></div></div>':'<div class="feedback-box"><div class="feedback-form"><span>'+i.properties.text+'</span><button class="feedback-button">我知道了</button></div></div>')):e='<div class="feedback-box"><div class="feedback-form"><span>谢谢您的参与!</span><button class="feedback-button">我知道了</button></div></div>',$(e).prependTo(".z-current");var n=(0-parseInt($(".feedback-form").css("height"),10))/2;$(".feedback-form").css({marginTop:n+"px"}),$(".z-current").on("click",".feedback-button",function(){$(".feedback-box").animate({opacity:0},{duration:1e3,complete:function(){$(".feedback-box").remove()}})})}})}};$(e).bind("click",function(){if(t.isMobileApp())return void alert("场景还没有发布呢，请发布后提交内容！");var i,n=$(e).parents(".edit_wrapper").attr("data-scene-id");i=n?$(e).parents(".nr").find('.edit_wrapper[data-scene-id="'+n+'"]'):$(e).parents(".nr"),o(this,n,i)})}}),w.bindAfterRenderEvent("7",function(t,e){var i=new BMap.Map("map_"+e.id,{enableMapClick:!1}),n=new BMap.Point(e.properties.x,e.properties.y),o=new BMap.Marker(n);i.addOverlay(o);var s=new BMap.Label(e.properties.markTitle,{offset:new BMap.Size(20,(-10))});o.setLabel(s),i.disableDoubleClickZoom(),i.centerAndZoom(n,15)}),w.bindAfterRenderEvent("p",function(t,e){if(!$(t).closest(".page_tpl_container ").length){$(t).children(".element-box").css("overflow","visible"),utilPictures.deleteInterval(e.id);var i=$(t).find("#"+e.id);new flux.slider(i,{autoplay:e.properties.autoPlay,delay:e.properties.interval,pagination:!1,transitions:[utilPictures.getPicStyle(e.properties.picStyle).name],width:e.css.width,height:e.css.height,bgColor:e.properties.bgColor,onStartEnd:function(t){utilPictures.addInterval(e.id,t)}})}}),w.bindAfterRenderEvent("a",function(t,e){function i(t){o.each(function(e,i){$(i).removeClass(a).addClass(a+"-line"),e<=t&&$(i).removeClass(a+"-line").addClass(a)})}var n=$(t);if("view"===w.mode){var o=n.find("i"),s=n.find("input"),a=e.properties.icon;o.each(function(t,e){$(e).attr("data-event","11211"),$(e).bind("click",function(){i(t),s.val(t+1)}),$(e).bind("mouseenter",function(){i(t)})}),n.find(".rating-icons").bind("mouseleave",function(){i(parseInt(s.val(),10)-1)}),u(n.find(".rating-icons"))}}),w.bindAfterRenderEvent("w",function(t,e){"view"===w.mode&&(u($(t)),$(t).on("mousedown touchstart",function(t){if(t.preventDefault(),isWeixin())"w01"===e.type?$(document).trigger("wx.audio.play",e.id):"w02"===e.type&&$(document).trigger("wx.audio.record",e.id);else if("w01"===e.type){var i=document.createElement("audio");i.src=e.properties.src,i.play();var n=$("#media").get(0);n.pause()}else"w02"===e.type&&alert("请在微信中点我！")}).on("mouseup touchend",function(){isWeixin()&&"w02"===e.type&&$(document).trigger("wx.audio.recordend",e.id)}))}),w.bindAfterRenderEvent("g",function(t){t.attr("data-event","11212")}),w.bindAfterRenderEvent("b",function(e,i){function n(){if(r.find(".boards-panel").length)r.find(".boards-panel").show();else{r.append($('<div class="boards-panel boards-'+i.properties.style+'"><div class="boards-top"><div class="head">留言板<em class="eqf-wrong"></em></div><div class="boards-form"><textarea maxlength="140" class="content-text"></textarea><span class="content-tip">0/140</span><a class="record-btn" data-event="11207">提交留言</a></div><div class="spline-con"><span>更多留言</span><span class="spline"></span></div></div><div class="boards-con"><div class="list"></div></div>'+l+"</div>")),s=r.find(".record-btn"),iphoneCheck()&&r.find(".boards-con").addClass("ios-boards-con");var e=0;s.on("click",function(){if(t.isMobileApp())return void alert("场景还没有发布呢，请发布后提交内容！");if(!e){var i=r.find(".boards-panel .content-text").val();if(!$.trim(i))return void alert("留言不能为空!");e=10,s.text("提交留言("+e+"秒)"),s.css("backgroundColor","#b4b4b4");var n=setInterval(function(){e--,s.text("提交留言("+e+"秒)"),e||(s.css("backgroundColor","").text("提交留言"),clearInterval(n))},1e3),o={sceneId:c,content:i,url:"",name:"匿名用户"};weChatUser&&weChatUser.headimgurl&&(o.name=weChatUser.nickname,o.url=weChatUser.headimgurl),$.ajax({type:"POST",url:PREFIX_URL+"scene/form/send/msg",data:$.param(o),error:function(){alert("Connection error")},success:function(t){if(t.success){alert("留言成功，谢谢参与！");var e='<div class="headimg headimg-bg"><div class="logo-scale"><em class="eqf-eqxiu"></em></div></div>';weChatUser.headimgurl&&(e='<div class="headimg" style="background-image:url('+weChatUser.headimgurl+')"></div>'),$(".z-current #"+d).find(".empty-boards").length&&$(".z-current #"+d).find(".empty-boards").remove(),$(".z-current #"+d).find(".tool").after($('<div class="record">'+e+'<div class="name">'+t.obj.name+'</div><div class="mes">'+t.obj.content+'</div><div class="time">刚刚</div></div>')),r.find(".list").prepend($('<div class="record clearfix">'+e+'<div class="name">'+t.obj.name+'</div><div class="mes">'+t.obj.content+'</div><div class="time">刚刚</div></div>'))}}})}}),r.find(".boards-panel .content-text").on("input",function(t){var e=t.target.value.length+t.target.value.split("\n").length-1;r.find(".boards-panel .content-tip").html(e+"/140")})}r.find(".boards-panel").on("touchstart touchmove touchend mousedown mouseup mousemove",function(t){t.stopPropagation()}),r.find(".z-current").hide();var n=$('<div class="more-mes">查看更多</div>'),a=r.find(".list");a.empty();var p=a.get(0);a.append(n),m(c,function(t,e){o=e,p.insertBefore(t,n.get(0)),e||(n.html("没有更多"),n.unbind("click"))}),n.on("click",function(){m(c,function(t,e){o=e,a.get(0).insertBefore(t,n.get(0)),e||(n.html("没有更多"),n.unbind("click"))},o)})}if("view"===w.mode&&!w.disEvent){var o,s,a=$(e),r=mobilecheck()?$(document.body):$(".nr"),l=mobilecheck()?'<div class="boards-bottom"></div>':"",c=i.sceneId,d=i.id;a.find(".tool a").on("click",function(t,e){t.isTrigger&&!e||t.isTrigger&&"longPage"===e&&!mobilecheck()||($.isEmptyObject(weChatUser)&&isWeixin()?wechatUtils.weChatAuth(function(){n()},i.pageId):n())}),r.on("click",".boards-panel .eqf-wrong",function(){r.find(".boards-panel .list").empty(),r.find(".boards-panel").hide(),r.find(".z-current").show()})}});var S}(window.eqShow);var tplCount=0,eqxCommon=function(){var t=function(t){var e,i,n=t.type;return"typer"===n&&(e="typer"),0===n&&(e="fadeIn"),1===n&&(i=t.direction,0===i&&(e="fadeInLeft"),1===i&&(e="fadeInDown"),2===i&&(e="fadeInRight"),3===i&&(e="fadeInUp")),6===n&&(e="wobble"),5===n&&(e="rubberBand"),7===n&&(e="rotateIn"),8===n&&(e="flip"),9===n&&(e="swing"),2===n&&(i=t.direction,0===i&&(e="bounceInLeft"),1===i&&(e="bounceInDown"),2===i&&(e="bounceInRight"),3===i&&(e="bounceInUp")),3===n&&(e="bounceIn"),4===n&&(e="zoomIn"),10===n&&(e="fadeOut"),11===n&&(e="flipOutY"),12===n&&(e="rollIn"),13===n&&(e="lightSpeedIn"),14===n&&(e="bounceOut"),15===n&&(e="rollOut"),16===n&&(e="lightSpeedOut"),17===n&&(i=t.direction,0===i&&(e="fadeOutRight"),1===i&&(e="fadeOutDown"),2===i&&(e="fadeOutLeft"),3===i&&(e="fadeOutUp")),18===n&&(e="zoomOut"),19===n&&(i=t.direction,0===i&&(e="bounceOutRight"),1===i&&(e="bounceOutDown"),2===i&&(e="bounceOutLeft"),3===i&&(e="bounceOutUp")),20===n&&(e="flipInY"),21===n&&(e="tada"),22===n&&(e="jello"),23===n&&(e="flash"),26===n&&(e="twisterInDown"),27===n&&(e="puffIn"),28===n&&(e="puffOut"),29===n&&(e="slideDown"),30===n&&(e="slideUp"),24===n&&(e="flipInX"),25===n&&(e="flipOutX"),31===n&&(e="twisterInUp"),32==n&&(e="vanishOut"),33==n&&(e="vanishIn"),e},e=function(t,e,i,n,o){function s(t,n,o,a,r){if(o.length&&l<o.length){if("typer"==n[l]){var c=t.find(".element"),d=o[l].interval,p=o[l].delay,h=function(){for(var t=c.find("a[data]"),e=0;e<t.length;e++)if(t[e]&&"view"===i){$(t[e]).css("cursor","pointer");var n=$(t[e]).attr("data");!function(i){t[e].removeAttribute("href"),$(t[e]).click(function(){eqxiu.pageScroll(i)})}(n)}},u=function(){h(),clearInterval(c.data("typed").timeout),c.removeData("typed"),l++,s(t,n,o)},g=function(){c.data("typed")&&(clearInterval(c.data("typed").timeout),c.removeData("typed")),c.empty(),c.typed({strings:[e.content],contentType:"html",showCursor:!1,typeSpeed:1e3*d||0,startDelay:1e3*p||0,callback:u})};if(a&&r.top>486&&"view"==i){var f=function(t,e){Math.abs(e)>r.top&&(g(),$(document).unbind("pageScrollPos",f))};return void $(document).bind("pageScrollPos",f)}g()}t.css("animation","");t.get(0);if(t.css("animation",n[l]+" "+o[l].duration+"s ease "+o[l].delay+"s "+(o[l].countNum?o[l].countNum:"")),"view"==i?(o[l].count&&l==o.length-1&&t.css("animation-iteration-count","infinite"),t.css("animation-fill-mode","both")):(t.css("animation-iteration-count","1"),t.css("animation-fill-mode","backwards")),o[l].linear&&t.css("animation-timing-function","linear"),a&&r.top>486&&"view"==i){t.css("display","none");var m=function(e,i){Math.abs(i)>r.top&&(t.css("display","block"),$(document).unbind("pageScrollPos",m))};$(document).bind("pageScrollPos",m)}t.one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){l++,s(t,n,o)})}}if(e.trigger&&e.trigger.receives&&e.trigger.receives.length&&!o&&"view"==i)for(var a=e.trigger.receives,r=0;r<a.length;r++)if(1==a[r].type&&a[r].ids.length)return;var l=0;if(e.properties&&e.properties.anim){var c=[];e.properties.anim.length?c=e.properties.anim:c.push(e.properties.anim);var d=$(".element-box",t);d.attr("element-anim","");for(var p,h=[],u=[],r=0,g=c.length;r<g;r++)null!=c[r].type&&c[r].type!=-1&&(p=eqxCommon.convertType(c[r]),h.push(p),u.push(c[r]));if(n&&n.scale)return;e.properties.anim.trigger?t.click(function(){s(d,p,e.properties.anim)}):n&&n.longPage?s(d,h,u,!0,e.css):s(d,h,u)}},i=function(t,e){var i,n=$(t);if(e.trigger&&e.trigger.receives&&e.trigger.receives.length){$.each(e.trigger.receives,function(t,o){if(o.ids.length){var s=utilTrigger.getHandleType(o.type).name;"show"!=s&&"randomEvent"!=s||n.hide(),"hide"==s&&n.show(),n.bind(s,function(t,o){if("show"==s)$(this).show(),i||(i=!0,eqxCommon.animation(n,e,"view",null,!0));else if("hide"==s)$(this).hide(),i=!1;else if("randomEvent"==s){eqShow.playTriggerSound(),$(this).show();var a=Math.floor(Math.random()*e.properties.pics.length);$(this).find("img").css({display:"none"}),$(this).find("img").eq(a).css({display:"block"})}})}})}},n=function(){var t,e,i=window.navigator,n=["language","browserLanguage","systemLanguage","userLanguage"];if($.isArray(i.languages))for(t=0;t<i.languages.length;t++)if(e=i.languages[t],e&&e.length)return e;for(t=0;t<n.length;t++)if(e=i[n[t]],e&&e.length)return e;return null};return{convertType:t,animation:e,bindTrigger:i,getFirstBrowserLanguage:n}}();eqShow.clearTyperText=function(t){if(t&&t.elements){var e=t.elements;$.each(e,function(t,e){if(e.properties&&e.properties.anim){var i=e.properties.anim;$.each(i,function(t,i){0==t&&"typer"==i.type&&$("#inside_"+e.id).find(".element").empty()})}})}},eqShow.isMobileApp=function(){return!!window.viewData},eqShow.setPageHis=function(t){if(mobilecheck()&&t){var e=eqShow.getQueryString("toPage"),i=location.href;e?e!==""+t&&(i=i.replace(e,t)):i+=(/\?/.test(i)?"&":"?")+"toPage="+t,window.history.replaceState({title:$("title").html(),url:i},$("title").html(),i)}},eqShow.getShowCount=function(t){return this.showCount=$.ajax({type:"GET",url:PREFIX_S1_URL+"eqs/scene/pv?sceneId="+t,xhrFields:{withCredentials:!0},error:function(){alert("Connection error")},crossDomain:!0}),this.showCount},eqShow.getQueryString=function(t){var e=new RegExp("(^|&)"+t+"=([^&]*)(&|$)","i"),i=window.location.search.substr(1).match(e);return i?unescape(i[2]):null},eqShow.delQueStr=function(t,e){var n="";if(t.indexOf("?")===-1)return t;n=t.substr(t.indexOf("?")+1);var o=[],s="";if(n.indexOf("&")!==-1){o=n.split("&");for(i in o)o[i].split("=")[0]!=e&&(s=s+o[i].split("=")[0]+"="+o[i].split("=")[1]+"&");return t.substr(0,t.indexOf("?"))+"?"+s.substr(0,s.length-1)}return o=n.split("="),o[0]==e?t.substr(0,t.indexOf("?")):t},eqShow.getDomain=function(t){var e="null";"undefined"!=typeof t&&null!=t||(t=window.location.href);var i=/.*\:\/\/([^\/]*).*/,n=t.match(i);return"undefined"!=typeof n&&null!=n&&(e=n[1]),e},eqShow.DateFormit=function(t,e){var i,n=new Date(t);switch(e){case"MM月DD日":i=n.getMonth()+1+"月"+n.getDate()+"日 "+n.getHours()+":"+n.getMinutes();break;case"T":i="刚刚"}return i},eqShow.fixedNum=function(t){var e;return t<1e4?e=t:t>=1e4&&t<1e8?e=(t/1e4).toFixed(2)+"万":t>=1e8&&(e=(t/1e8).toFixed(2)+"亿"),e},eqShow.showProgressBar=function(t,e,i){if(t.obj.property.slideNumber){var n=$('<div class="progress"></div>'),o=$("<span></span>"),s=$('<em class="page-tip"></em>');n.append(o).append(s),i&&t.obj.property.slideDisplay?i.append(n.css("display",t.obj.property.slideDisplay)):$("#nr").append(n.css("display","block"))}var a=function(){t.obj.property.slideNumber&&o&&setTimeout(function(){var t=$(".z-active").get(0)?$(".z-active").get(0):$(".z-current").get(0);if(t){var i=$(t).find(".m-img").attr("id").substring(4),a=e.length,r=i/a,l=100;s.text(i+"/"+a),o.css("width",parseFloat(n.width())*r),$(t).find(".lock").length&&(l=0),n.css("z-index",l)}},100)};a(),e.eq(0).find(".u-arrow-bottom").css("bottom","30px"),eqShow.progressInterval=setInterval(function(){a()},300)},eqShow.selectElement=function(t){var e;return e=$("#inside_"+t,".phone-view").length?$("#inside_"+t,".phone-view"):$("#inside_"+t)},eqShow.substtrCharacters=function(t,e){if(t&&(t=t.replace(/\n|\r/g," ")),t&&t.length>e/2){var i=t.replace(/[^\x00-\xff]/g,"xx");if(i.length>e){var n=i.substring(0,e).replace(/xx/g,"中").length;t=t.substring(0,n)}}return t},eqShow.getCharactersLen=function(t){var e=t.replace(/[^\x00-\xff]/g,"xx");return e.length},eqShow.getRGB=function(t){if(t=t.toLowerCase(),t.indexOf("rgba")>=0){var e=t.split(",");e[0]=e[0].replace("rgba","rgb"),e.pop(),e[e.length-1]+=")",t=e.join(",")}return t},eqShow.convertToHexColor=function(t){if(t=t.toLowerCase(),t.indexOf("rgb")>=0){var e=t.split(","),i=e[0].substring(e[0].indexOf("(")+1);i=parseInt(i,10).toString(16),i=i.length<2?"0"+i:i;var n=parseInt(e[1],10).toString(16);n=n.length<2?"0"+n:n;var o=e[2].substring(0,e[2].indexOf(")"));o=parseInt(o,10).toString(16),o=o.length<2?"0"+o:o,t="#"+i+n+o}return t},eqShow.responsiveImage=function(t,e,i,n,o){var s=new Image;s.src=t,s.onload=function(s){var a,r,l=this;$.each(e,function(t,e){e.elements&&e.elements.length&&$.each(e.elements,function(t,e){if(e.id==i){var n=parseInt(e.css.width),o=parseInt(e.css.height);l.width/l.height>=n/o?(a=n,r=l.height*(n/l.width)):(r=o,a=l.width*(o/l.height))}})}),o.css({display:"block",width:a+"px",height:r+"px","margin-top":(parseInt(n.height())-r)/2+"px","margin-left":(parseInt(n.width())-a)/2+"px"}).attr("src",t)}},eqShow.getCookieId=function(){var t="",e="C_ID=",i=document.cookie,n=i.indexOf(e);if(n!=-1){n+=e.length;var o=i.indexOf(";",n);o==-1&&(o=i.length),t=i.substring(n,o)}return t},eqShow.delayLoadJSAndCSS=function(t,e,i){var n,o;if(e||(e=t.substr(t.lastIndexOf(".")+1)),"js"==e){var s=document.getElementsByTagName("script");for(o=0;o<s.length;o++)if(s[o].src&&s[o].src.indexOf(t)!=-1||s[o].title==i)return s[o];n=document.createElement("script"),n.type="text/javascript",n.src=t,i&&(n.title=i)}else{if("css"!=e)return;var a=document.getElementsByTagName("link");for(o=0;o<a.length;o++)if(a[o].href&&a[o].href.indexOf(t)!=-1||a[o].title==i)return a[o];n=document.createElement("link"),n.rel="stylesheet",n.type="text/css",n.href=t,i&&(n.title=i),n.disabled=!1}var r=document.getElementsByTagName("head")[0];
return r.appendChild(n),n},eqShow.copyToClipboard=function(t){var e,i,n="_hiddenCopyText_",o="INPUT"===t.tagName||"TEXTAREA"===t.tagName;if(o)s=t,e=t.selectionStart,i=t.selectionEnd;else{if(s=document.getElementById(n),!s){var s=document.createElement("textarea");s.style.position="absolute",s.style.left="-9999px",s.style.top="0",s.id=n,document.body.appendChild(s)}s.textContent=t.textContent}var a=document.activeElement;s.focus(),s.setSelectionRange(0,s.value.length);var r;try{r=document.execCommand("copy")}catch(l){r=!1}return a&&"function"==typeof a.focus&&a.focus(),o?t.setSelectionRange(e,i):s.textContent="",r},eqShow.getUrlParameter=function(t){var e,i,n=decodeURIComponent(window.location.search.substring(1)),o=n.split("&");for(i=0;i<o.length;i++)if(e=o[i].split("="),e[0]===t)return void 0===e[1]||e[1]};var listPages=[];eqShow.qiniuZoom=function(t,e){var i=/\?imageMogr2/;if(i.test(e))return e+"/strip";if(t&&t.css&&t.css.width&&t.css.height){var n,o,s=parseInt(t.css.width,10),a=parseInt(t.css.height,10);mobilecheck()?(n=2.2*s,o=2.2*a):tabletCheck()?(n=s,o=a):(n=1.1*s,o=1.1*a);var r=parseInt(n,10)>parseInt(o,10)?parseInt(n,10):parseInt(o,10);return e+"?imageMogr2/thumbnail/"+r+"x"+r+">/strip"}return e+"?imageMogr2/strip"},function(t){function e(e){return e.classList?e.classList:t(e).attr("class").match(/\S+/gi)}t.fn.ShareLink=function(i){function n(t){var e=a[t];return e=e.replace("{url}",encodeURIComponent(i.url)),e=e.replace("{title}",encodeURIComponent(i.title)),e=e.replace("{text}",encodeURIComponent(i.text)),e=e.replace("{image}",encodeURIComponent(i.image))}var o={title:"",text:"",image:"",url:window.location.href,class_prefix:"s_"},i=t.extend({},o,i),s=i.class_prefix.length,a={twitter:"https://twitter.com/intent/tweet?url={url}&text={text}",pinterest:"https://www.pinterest.com/pin/create/button/?media={image}&url={url}&description={text}",facebook:"https://www.facebook.com/sharer.php?u={url}",vk:"https://vkontakte.ru/share.php?url={url}&title={title}&description={text}&image={image}&noparse=true",linkedin:"https://www.linkedin.com/shareArticle?mini=true&url={url}&title={title}&summary={text}&source={url}",myworld:"https://connect.mail.ru/share?url={url}&title={title}&description={text}&imageurl={image}",odnoklassniki:"http://odnoklassniki.ru/dk?st.cmd=addShare&st.s=1&st._surl={url}&st.comments={text}",tumblr:"https://tumblr.com/share?s=&v=3&t={title}&u={url}",blogger:"https://blogger.com/blog-this.g?t={text}&n={title}&u={url}",delicious:"https://delicious.com/save?url={url}&title={title}",plus:"https://plus.google.com/share?url={url}",digg:"https://digg.com/submit?url={url}&title={title}",reddit:"http://reddit.com/submit?url={url}&title={title}",stumbleupon:"https://www.stumbleupon.com/submit?url={url}&title={title}",pocket:"https://getpocket.com/edit?url={url}&title={title}",chiq:"http://www.chiq.com/create/bookmarklet?u={url}&i={image}&d={title}&c={url}",qrifier:"http://qrifier.com/q?inc=qr&type=url&size=350&string={url}",qrsrc:"http://www.qrsrc.com/default.aspx?shareurl={url}",qzone:"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url={url}",tulinq:"http://www.tulinq.com/enviar?url={url}&title={title}",misterwong:"http://www.mister-wong.com/index.php?action=addurl&bm_url={url}&bm_description={title}&bm_notice=",sto_zakladok:"http://www.100zakladok.ru/save/?bmurl={url}&bmtitle={title}",two_linkme:"http://www.2linkme.com/?collegamento={url}&id=2lbar",adifni:"http://www.adifni.com/account/bookmark/?bookmark_url={url}",amazonwishlist:"http://www.amazon.com/gp/wishlist/static-add?u={url}&t={title}",amenme:"http://www.amenme.com/AmenMe/Amens/AmenToThis.aspx?url={url}&title={title}",aim:"http://lifestream.aol.com/share/?url={url}&title={title}&description={text} ",aolmail:"http://webmail.aol.com/25045/aol/en-us/Mail/compose-message.aspx?to=&subject={title}&body={{content}}",arto:"http://www.arto.com/section/linkshare/?lu={url}&ln={title}",baidu:"http://cang.baidu.com/do/add?it={title}&iu={url}&fr=ien&dc={text}",bitly:"https://bitly.com/a/bitmarklet?u={url}",bizsugar:"http://www.bizsugar.com/bizsugarthis.php?url={url}",blinklist:"http://www.blinklist.com/blink?u={url}&t={title}&d={text}",blip:"http://blip.pl/dashboard?body={title}%3A%20{url}",blogmarks:"http://blogmarks.net/my/new.php?mini=1&simple=1&url={url}&title={title}&content={text}",blurpalicious:"http://www.blurpalicious.com/submit/?url={url}&title={title}&desc={text}",bobrdobr:"http://bobrdobr.ru/addext.html?url={url}&title={title}&desc={text}",bonzobox:"http://bonzobox.com/toolbar/add?u={url}&t={title}&desc={text}",bookmerkende:"http://www.bookmerken.de/?url={url}&title={title}",box:"https://www.box.net/api/1.0/import?import_as=link&url={url}&name={title}&description={text}",bryderi:"http://bryderi.se/add.html?u={url}",buddymarks:"http://buddymarks.com/add_bookmark.php?bookmark_title={title}&bookmark_url={url}&bookmark_desc={text}",camyoo:"http://www.camyoo.com/note.html?url={url}",care2:"http://www.care2.com/news/compose?sharehint=news&share[share_type]news&bookmarklet=Y&share[title]={title}&share[link_url]={url}&share[content]={text}",citeulike:"http://www.citeulike.org/posturl?url={url}&title={title}",classicalplace:"http://www.classicalplace.com/?u={url}&t={title}&c={text}",cosmiq:"http://www.cosmiq.de/lili/my/add?url={url}",diggita:"http://www.diggita.it/submit.php?url={url}&title={title}",diigo:"http://www.diigo.com/post?url={url}&title={title}&desc={text}",domelhor:"http://domelhor.net/submit.php?url={url}&title={title}",dotnetshoutout:"http://dotnetshoutout.com/Submit?url={url}&title={title}",douban:"http://www.douban.com/recommend/?url={url}&title={title}",dropjack:"http://www.dropjack.com/submit.php?url={url}",edelight:"http://www.edelight.de/geschenk/neu?purl={url}",ekudos:"http://www.ekudos.nl/artikel/nieuw?url={url}&title={title}&desc={text}",elefantapl:"http://elefanta.pl/member/bookmarkNewPage.action?url={url}&title={title}&bookmarkVO.notes=",embarkons:"http://www.embarkons.com/sharer.php?u={url}&t={title}",evernote:"http://www.evernote.com/clip.action?url={url}&title={title}",extraplay:"http://www.extraplay.com/members/share.php?url={url}&title={title}&desc={text}",ezyspot:"http://www.ezyspot.com/submit?url={url}&title={title}",fabulously40:"http://fabulously40.com/writeblog?subject={title}&body={url}",informazione:"http://fai.informazione.it/submit.aspx?url={url}&title={title}&desc={text}",fark:"http://www.fark.com/cgi/farkit.pl?u={url}&h={title}",farkinda:"http://www.farkinda.com/submit?url={url}",favable:"http://www.favable.com/oexchange?url={url}&title={title}&desc={text}",favlogde:"http://www.favlog.de/submit.php?url={url}",flaker:"http://flaker.pl/add2flaker.php?title={title}&url={url}",folkd:"http://www.folkd.com/submit/{url}",fresqui:"http://fresqui.com/enviar?url={url}",friendfeed:"http://friendfeed.com/share?url={url}&title={title}",funp:"http://funp.com/push/submit/?url={url}",fwisp:"http://fwisp.com/submit.php?url={url}",givealink:"http://givealink.org/bookmark/add?url={url}&title={title}",gmail:"http://mail.google.com/mail/?view=cm&fs=1&to=&su={title}&body={text}&ui=1",goodnoows:"http://goodnoows.com/add/?url={url}",google:"http://www.google.com/bookmarks/mark?op=add&bkmk={url}&title={title}&annotation={text}",googletranslate:"http://translate.google.com/translate?hl=en&u={url}&tl=en&sl=auto",greaterdebater:"http://greaterdebater.com/submit/?url={url}&title={title}",hackernews:"http://news.ycombinator.com/submitlink?u={url}&t={title}",hatena:"http://b.hatena.ne.jp/bookmarklet?url={url}&btitle={title}",hedgehogs:"http://www.hedgehogs.net/mod/bookmarks/add.php?address={url}&title={title}",hotmail:"http://www.hotmail.msn.com/secure/start?action=compose&to=&subject={title}&body={{content}}",w3validator:"http://validator.w3.org/check?uri={url}&charset=%28detect+automatically%29&doctype=Inline&group=0",ihavegot:"http://www.ihavegot.com/share/?url={url}&title={title}&desc={text}",instapaper:"http://www.instapaper.com/edit?url={url}&title={title}&summary={text}",isociety:"http://isociety.be/share/?url={url}&title={title}&desc={text}",iwiw:"http://iwiw.hu/pages/share/share.jsp?v=1&u={url}&t={title}",jamespot:"http://www.jamespot.com/?action=spotit&u={url}&t={title}",jumptags:"http://www.jumptags.com/add/?url={url}&title={title}",kaboodle:"http://www.kaboodle.com/grab/addItemWithUrl?url={url}&pidOrRid=pid=&redirectToKPage=true",kaevur:"http://kaevur.com/submit.php?url={url}",kledy:"http://www.kledy.de/submit.php?url={url}&title={title}",librerio:"http://www.librerio.com/inbox?u={url}&t={title}",linkuj:"http://linkuj.cz?id=linkuj&url={url}&title={title}&description={text}&imgsrc=",livejournal:"http://www.livejournal.com/update.bml?subject={title}&event={url}",logger24:"http://logger24.com/?url={url}",mashbord:"http://mashbord.com/plugin-add-bookmark?url={url}",meinvz:"http://www.meinvz.net/Suggest/Selection/?u={url}&desc={title}&prov=addthis.com",mekusharim:"http://mekusharim.walla.co.il/share/share.aspx?url={url}&title={title}",memori:"http://memori.ru/link/?sm=1&u_data[url]={url}",meneame:"http://www.meneame.net/submit.php?url={url}",mixi:"http://mixi.jp/share.pl?u={url}",moemesto:"http://moemesto.ru/post.php?url={url}&title={title}",myspace:"http://www.myspace.com/Modules/PostTo/Pages/?u={url}&t={title}&c=",n4g:"http://www.n4g.com/tips.aspx?url={url}&title={title}",netlog:"http://www.netlog.com/go/manage/links/?view=save&origin=external&url={url}&title={title}&description={text}",netvouz:"http://netvouz.com/action/submitBookmark?url={url}&title={title}&popup=no&description={text}",newstrust:"http://newstrust.net/submit?url={url}&title={title}&ref=addthis",newsvine:"http://www.newsvine.com/_tools/seed&save?u={url}&h={title}&s={text}",nujij:"http://nujij.nl/jij.lynkx?u={url}&t={title}&b={text}",oknotizie:"http://oknotizie.virgilio.it/post?title={title}&url={url}",oyyla:"http://www.oyyla.com/gonder?phase=2&url={url}",pdfonline:"http://savepageaspdf.pdfonline.com/pdfonline/pdfonline.asp?cURL={url}",pdfmyurl:"http://pdfmyurl.com?url={url}",phonefavs:"http://phonefavs.com/bookmarks?action=add&address={url}&title={title}",plaxo:"http://www.plaxo.com/events?share_link={url}&desc={text}",plurk:"http://www.plurk.com/m?content={url}+({title})&qualifier=shares ",posteezy:"http://posteezy.com/node/add/story?title={title}&body={url}",pusha:"http://www.pusha.se/posta?url={url}&title={title}&description={text}",rediff:"http://share.rediff.com/bookmark/addbookmark?title={title}&bookmarkurl={url}",redkum:"http://www.redkum.com/add?url={url}&step=1&title={title}",scoopat:"http://scoop.at/submit?url={url}&title={title}&body={text}",sekoman:"http://sekoman.lv/home?status={title}&url={url}",shaveh:"http://shaveh.co.il/submit.php?url={url}&title={title}",shetoldme:"http://shetoldme.com/publish?url={url}&title={title}&body={text}",sinaweibo:"http://v.t.sina.com.cn/share/share.php?url={url}&title={title}",sodahead:"http://www.sodahead.com/news/submit/?url={url}&title={title}",sonico:"http://www.sonico.com/share.php?url={url}&title={title}",springpad:"http://springpadit.com/s?type=lifemanagr.Bookmark&url={url}&name={title}",startaid:"http://www.startaid.com/index.php?st=AddBrowserLink&type=Detail&v=3&urlname={url}&urltitle={title}&urldesc={text}",startlap:"http://www.startlap.hu/sajat_linkek/addlink.php?url={url}&title={title}",studivz:"http://www.studivz.net/Suggest/Selection/?u={url}&desc={title}&prov=addthis.com",stuffpit:"http://www.stuffpit.com/add.php?produrl={url}",stumpedia:"http://www.stumpedia.com/submit?url={url}",svejo:"http://svejo.net/story/submit_by_url?url={url}&title={title}&summary={text}",symbaloo:"http://www.symbaloo.com/en/add/?url={url}&title={title}",thewebblend:"http://thewebblend.com/submit?url={url}&title={title}",thinkfinity:"http://www.thinkfinity.org/favorite-bookmarklet.jspa?url={url}&subject={title}",thisnext:"http://www.thisnext.com/pick/new/submit/url/?description={text}&name={title}&url={url}",tuenti:"http://www.tuenti.com/share?url={url}",typepad:"http://www.typepad.com/services/quickpost/post?v=2&qp_show=ac&qp_title={title}&qp_href={url}&qp_text={text}",viadeo:"http://www.viadeo.com/shareit/share/?url={url}&title={title}&urlaffiliate=32005&encoding=UTF-8",virb:"http://virb.com/share?external&v=2&url={url}&title={title}",visitezmonsite:"http://www.visitezmonsite.com/publier?url={url}&title={title}&body={text}",vybralisme:"http://vybrali.sme.sk/sub.php?url={url}",webnews:"http://www.webnews.de/einstellen?url={url}&title={title}",wirefan:"http://www.wirefan.com/grpost.php?d=&u={url}&h={title}&d={text}",wordpress:"http://wordpress.com/wp-admin/press-this.php?u={url}&t={title}&s={text}&v=2",wowbored:"http://www.wowbored.com/submit.php?url={url}",wykop:"http://www.wykop.pl/dodaj?url={url}&title={title}&desc={text}",yahoobkm:"http://bookmarks.yahoo.com/toolbar/savebm?opener=tb&u={url}&t={title}&d={text}",yahoomail:"http://compose.mail.yahoo.com/?To=&Subject={title}&body={{content}}",yammer:"https://www.yammer.com/home/bookmarklet?bookmarklet_pop=1&u={url}&t={title}",yardbarker:"http://www.yardbarker.com/author/new/?pUrl={url}&pHead={title}",yigg:"http://www.yigg.de/neu?exturl={url}&exttitle={title}&extdesc={text}",yoolink:"http://go.yoolink.to/addorshare?url_value={url}&title={title}",yorumcuyum:"http://www.yorumcuyum.com/?baslik={title}&link={url}",youmob:"http://youmob.com/mobit.aspx?title={title}&mob={url}",zakladoknet:"http://zakladok.net/link/?u={url}&t={title}",ziczac:"http://ziczac.it/a/segnala/?gurl={url}&gtit={title}"};this.each(function(o,r){for(var l=e(r),o=0;o<l.length;o++){var c=l[o];if(c.substr(0,s)==i.class_prefix&&a[c.substr(s)]){var d=n(c.substr(s));t(r).attr("href",d).click(function(){var e=screen.width,n=screen.height,o=i.width?i.width:e-.2*e,s=i.height?i.height:n-.2*n,a=e/2-o/2,r=n/2-s/2,l="toolbar=0,status=0,width="+o+",height="+s+",top="+r+",left="+a;return window.open(t(this).attr("href"),"",l)&&!1})}}})}}(jQuery),function(){var t,e=0;eqShow.shakeTrigger=function(i,n){function o(t){var i=t.accelerationIncludingGravity,n=(new Date).getTime();if(n-h>100){var a=parseInt(n-h);h=n,c=i.x,d=i.y,p=i.z;var l=Math.abs(c+d+p-u-g-f)/a*1e4;window.removeEventListener("devicemotion",o,!0),l>r&&(m||(eqShow.playTriggerSound(),m=!0),window.removeEventListener("devicemotion",o,!0),s.sends&&s.sends.length&&$.each(s.sends,function(t,i){time=setTimeout(function(){$.each(i.handles,function(t,i){var n=utilTrigger.getHandleType(i.type).name;$.each(i.ids,function(t,i){var o=$("#inside_"+i);o.trigger(n,e)})})},1e3*i.delay)})),u=c,g=d,f=p}}var s,a=$(n).find(".m-img").attr("id").substring(4);if(i[a-1].properties&&(s=i[a-1].properties.trigger),s&&s.sends){var r=4e3,l=PREFIX_HOST+"/assets/audio/wxShake.mp3";t=document.createElement("audio"),t.src=l;var c,d,p,h=0,u=0,g=0,f=0,m=!1;window.DeviceMotionEvent&&n&&window.addEventListener("devicemotion",o,!1)}},eqShow.playTriggerSound=function(){t&&t.play()}}(),function(){eqShow.getImagesResourceHost=function(t,e){return location.host.indexOf(window.DOMAIN)!==-1&&(["2","21"].indexOf(t)!==-1&&["1","2","3","4","6","7","8","9"].indexOf(e)!==-1?PREFIX_FILE_HOST=VIP_FILE_HOST:PREFIX_FILE_HOST=COMMON_FILE_HOST),PREFIX_FILE_HOST}}(),function(t){function e(t,e,l){var c=0,d=[0],p="",h=null,p=l||"UTF8";if("UTF8"!==p&&"UTF16"!==p)throw"encoding must be UTF8 or UTF16";if("HEX"===e){if(0!==t.length%2)throw"srcString of HEX type must be in byte increments";h=n(t),c=h.binLen,d=h.value}else if("ASCII"===e||"TEXT"===e)h=i(t,p),c=h.binLen,d=h.value;else{if("B64"!==e)throw"inputFormat must be HEX, TEXT, ASCII, or B64";h=o(t),c=h.binLen,d=h.value}this.getHash=function(t,e,i,n){var o,l=null,p=d.slice(),h=c;if(3===arguments.length?"number"!=typeof i&&(n=i,i=1):2===arguments.length&&(i=1),i!==parseInt(i,10)||1>i)throw"numRounds must a integer >= 1";switch(e){case"HEX":l=s;break;case"B64":l=a;break;default:throw"format must be HEX or B64"}if("SHA-1"!==t)throw"Chosen SHA variant is not supported";for(o=0;o<i;o++)p=g(p,h),h=160;return l(p,r(n))},this.getHMAC=function(t,e,l,h,u){var f,m,v,b,w=[],x=[];switch(f=null,h){case"HEX":h=s;break;case"B64":h=a;break;default:throw"outputFormat must be HEX or B64"}if("SHA-1"!==l)throw"Chosen SHA variant is not supported";if(m=64,b=160,"HEX"===e)f=n(t),v=f.binLen,f=f.value;else if("ASCII"===e||"TEXT"===e)f=i(t,p),v=f.binLen,f=f.value;else{if("B64"!==e)throw"inputFormat must be HEX, TEXT, ASCII, or B64";f=o(t),v=f.binLen,f=f.value}if(t=8*m,e=m/4-1,m<v/8){if("SHA-1"!==l)throw"Unexpected error in HMAC implementation";f=g(f,v),f[e]&=4294967040}else m>v/8&&(f[e]&=4294967040);for(m=0;m<=e;m+=1)w[m]=909522486^f[m],x[m]=1549556828^f[m];if("SHA-1"!==l)throw"Unexpected error in HMAC implementation";return l=g(x.concat(g(w.concat(d),t+c)),t+b),h(l,r(u))}}function i(t,e){var i,n,o=[],s=[],a=0;if("UTF8"===e)for(n=0;n<t.length;n+=1)for(i=t.charCodeAt(n),s=[],2048<i?(s[0]=224|(61440&i)>>>12,s[1]=128|(4032&i)>>>6,s[2]=128|63&i):128<i?(s[0]=192|(1984&i)>>>6,s[1]=128|63&i):s[0]=i,i=0;i<s.length;i+=1)o[a>>>2]|=s[i]<<24-a%4*8,a+=1;else if("UTF16"===e)for(n=0;n<t.length;n+=1)o[a>>>2]|=t.charCodeAt(n)<<16-a%4*8,a+=2;return{value:o,binLen:8*a}}function n(t){var e,i,n=[],o=t.length;if(0!==o%2)throw"String of HEX type must be in byte increments";for(e=0;e<o;e+=2){if(i=parseInt(t.substr(e,2),16),isNaN(i))throw"String of HEX type contains invalid characters";n[e>>>3]|=i<<24-e%8*4}return{value:n,binLen:4*o}}function o(t){var e,i,n,o,s,a=[],r=0;if(-1===t.search(/^[a-zA-Z0-9=+\/]+$/))throw"Invalid character in base-64 string";if(e=t.indexOf("="),t=t.replace(/\=/g,""),-1!==e&&e<t.length)throw"Invalid '=' found in base-64 string";for(i=0;i<t.length;i+=4){for(s=t.substr(i,4),n=o=0;n<s.length;n+=1)e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(s[n]),o|=e<<18-6*n;for(n=0;n<s.length-1;n+=1)a[r>>2]|=(o>>>16-8*n&255)<<24-r%4*8,r+=1}return{value:a,binLen:8*r}}function s(t,e){var i,n,o="",s=4*t.length;for(i=0;i<s;i+=1)n=t[i>>>2]>>>8*(3-i%4),o+="0123456789abcdef".charAt(n>>>4&15)+"0123456789abcdef".charAt(15&n);return e.outputUpper?o.toUpperCase():o}function a(t,e){var i,n,o,s="",a=4*t.length;for(i=0;i<a;i+=3)for(o=(t[i>>>2]>>>8*(3-i%4)&255)<<16|(t[i+1>>>2]>>>8*(3-(i+1)%4)&255)<<8|t[i+2>>>2]>>>8*(3-(i+2)%4)&255,n=0;4>n;n+=1)s=8*i+6*n<=32*t.length?s+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(o>>>6*(3-n)&63):s+e.b64Pad;return s}function r(t){var e={outputUpper:!1,b64Pad:"="};try{t.hasOwnProperty("outputUpper")&&(e.outputUpper=t.outputUpper),t.hasOwnProperty("b64Pad")&&(e.b64Pad=t.b64Pad)}catch(i){}if("boolean"!=typeof e.outputUpper)throw"Invalid outputUpper formatting option";if("string"!=typeof e.b64Pad)throw"Invalid b64Pad formatting option";return e}function l(t,e){return t<<e|t>>>32-e}function c(t,e,i){return t^e^i}function d(t,e,i){return t&e^~t&i}function p(t,e,i){return t&e^t&i^e&i}function h(t,e){var i=(65535&t)+(65535&e);return((t>>>16)+(e>>>16)+(i>>>16)&65535)<<16|65535&i}function u(t,e,i,n,o){var s=(65535&t)+(65535&e)+(65535&i)+(65535&n)+(65535&o);return((t>>>16)+(e>>>16)+(i>>>16)+(n>>>16)+(o>>>16)+(s>>>16)&65535)<<16|65535&s}function g(t,e){var i,n,o,s,a,r,g,f,m,v=[],b=d,w=c,x=p,y=l,S=h,C=u,P=[1732584193,4023233417,2562383102,271733878,3285377520];for(t[e>>>5]|=128<<24-e%32,t[(e+65>>>9<<4)+15]=e,m=t.length,g=0;g<m;g+=16){for(i=P[0],n=P[1],o=P[2],s=P[3],a=P[4],f=0;80>f;f+=1)v[f]=16>f?t[f+g]:y(v[f-3]^v[f-8]^v[f-14]^v[f-16],1),r=20>f?C(y(i,5),b(n,o,s),a,1518500249,v[f]):40>f?C(y(i,5),w(n,o,s),a,1859775393,v[f]):60>f?C(y(i,5),x(n,o,s),a,2400959708,v[f]):C(y(i,5),w(n,o,s),a,3395469782,v[f]),a=s,s=o,o=y(n,30),n=i,i=r;P[0]=S(i,P[0]),P[1]=S(n,P[1]),P[2]=S(o,P[2]),P[3]=S(s,P[3]),P[4]=S(a,P[4])}return P}"function"==typeof define?define(function(){return e}):"undefined"!=typeof exports?"undefined"!=typeof module&&module.exports?module.exports=exports=e:exports=e:t.jsSHA=e}(this);var wechatUtils=function(){function t(t,i,n,a,r){s="",o="";var l=i.obj.name,c=i.obj.cover,d=i.obj.description||"",p=t;t.indexOf("toPage")>-1&&(p=eqShow.delQueStr(t,"toPage"));var d=i.obj.description||"",h=i.obj.property;if(i.list)t:for(var u=0;u<i.list.length;u++)if(i.list[u].elements)for(var g=0;g<i.list[u].elements.length;g++)if(("401"==i.list[u].elements[g].type||"201"==i.list[u].elements[g].type)&&"share"==i.list[u].elements[g].properties.type){p.indexOf("&userKey=")>-1?p=p.split("&userKey=")[0]:p.indexOf("?userKey=")>-1&&(p=p.split("?userKey=")[0]),s=Date.now()+""+Math.floor(1e5*Math.random()),o+=(/\?/.test(p)?"&":"?")+"userKey="+s;break t}n&&a&&(o="",p.indexOf("&userKey=")>-1?p=p.split("&userKey=")[0]:p.indexOf("?userKey=")>-1&&(p=p.split("?userKey=")[0]),s=Date.now()+""+Math.floor(1e5*Math.random()),o+=(/\?/.test(p)?"&":"?")+"userKey="+s),n&&a&&(window.wxCompData[n]=a),h&&"1"==h.showShareCount?(i.map||(i.map={},i.map.shareCount=0),$.ajax({type:"GET",url:PREFIX_S1_URL+"eqs/scene/pv?sceneId="+window.scene.id,xhrFields:{withCredentials:!0},error:function(t){alert("服务器异常！")},success:function(t){d+="我是第"+t+"位"+h.shareDes,d||(d=" "),e(l,d,p,o,c)}})):(d||(d=" "),e(l,d,p,o,c)),r&&$("#media")&&$("#media").get(0)&&$("#media").get(0).play()}function e(t,e,n,o,s){var a=n+o,r=scene.dsAppId?DS.linkChange(a):a;wx.onMenuShareTimeline({title:t,link:r,imgUrl:PREFIX_FILE_HOST+s,success:function(){scene.dsAppId&&DS.sendRepost("timeline"),i(wxCompData)},cancel:function(){}}),wx.onMenuShareAppMessage({title:t,desc:e,link:r,imgUrl:PREFIX_FILE_HOST+s,success:function(){scene.dsAppId&&DS.sendRepost("appMessage"),i(wxCompData)},cancel:function(t){console.log(t)}}),wx.onMenuShareQQ({title:t,desc:e,link:a,imgUrl:PREFIX_FILE_HOST+s,success:function(){},cancel:function(){}}),wx.onMenuShareWeibo({title:t,desc:e,link:a,imgUrl:PREFIX_FILE_HOST+s,success:function(){},cancel:function(){}})}function i(t){if(s){var e={userKey:s};weChatUser&&weChatUser.headimgurl&&(t.shareUserHeader=weChatUser.headimgurl),weChatUser&&weChatUser.headimgurl&&(t.shareUserName=weChatUser.nickname),e.data=JSON.stringify(t),$.ajax({type:"POST",url:PREFIX_S1_URL+"eqs/wx/component",data:$.param(e),error:function(t){alert(JSON.stringify(t))},success:function(t){}})}}function n(t,e){var i=PREFIX_S1_URL+"eqs/wx/user/cache";$.ajax({type:"GET",url:i,xhrFields:{withCredentials:!0},success:function(n){if(200===n.code)if(n.obj)window.weChatUser=n.obj,t();else{var o=eqShow.getDomain(window.location.href),s="";e&&(s="?toPage="+e),eqShow.getQueryString("userKey")&&(s=(/\?/.test(i)?"&":"?")+"userKey="+eqShow.getQueryString("userKey")),window.location.href="https://open.weixin.qq.com/connect/oauth2/authorize?appid="+APPID_WX+"&redirect_uri="+encodeURIComponent(PREFIX_S1_URL+"eqs/wx/user/info")+"&response_type=code&scope=snsapi_userinfo&state="+encodeURIComponent("http://"+o+"/s/"+window.scene.code+s)+"#wechat_redirect"}else alert("error")},error:function(t){},crossDomain:!0})}var o,s;return{shareWeixinWhenReady:t,shareWidthSDK:e,saveComponentInfo:i,weChatAuth:n}}(window);!function(){function t(e,i){var n=0;$.each(i,function(o,s){"shareUserHeader"!=o&&"shareUserName"!=o&&(n++,1==n&&wx.downloadImage({serverId:s,isShowProgressTips:0,success:function(n){eqShow.responsiveImage(n.localId,e,o,$("#inside_"+o),$("#"+o)),delete i[o],t(e,i)},fail:function(t){$("#"+o).css("display","block")}}))})}wechatUtils.wechatImgUpload=function(e,i){var n,o,s=i.list;if($(document).on("wx.img.upload",function(t,a){wx.chooseImage({count:1,sizeType:["original","compressed"],sourceType:["album","camera"],success:function(t){n=t.localIds,setTimeout(function(){wx.uploadImage({localId:n.toString(),isShowProgressTips:1,success:function(t){eqShow.responsiveImage(n,s,a,$("#inside_"+a),$("#"+a)),o=t.serverId,wechatUtils.shareWeixinWhenReady(e,i,a,o,!1)}})},100)}})}),i.map&&i.map.wxComponent){var a=$.extend(!0,{},i.map.wxComponent);t(i.list,a)}}}(),function(){var t,e={};wechatUtils.wechatAudioUpload=function(i,n){function o(t,o){e[o]=t,wx.uploadVoice({localId:t,isShowProgressTips:1,success:function(t){var e=t.serverId;wechatUtils.shareWeixinWhenReady(i,n,"wxp"+o.substring(3),e,!1)}})}function s(t){var e=document.createElement("audio");e.src=t,e.play(),$(e).bind("ended",function(){eqShow.executePlay()})}function a(t,e){$("#panel"+t).length&&$("#panel"+t).remove();var i=$("#wxp"+t.substring(3)),n='<div class="voice-panel" id="panel'+t+'"><span class="icon eqf-voice"></span><div class="voice-tip">松开手指 停止录音</div></div>';$(n).prependTo(".z-current"),i.addClass("background-transform"),c=setInterval(function(){e++,i.toggleClass("green-back"),e>=50&&$("#panel"+t).text(60-e),60==e&&(clearInterval(c),$("#panel"+t).remove(),i.removeClass("green-back"),wx.onVoiceRecordEnd({complete:function(i){e=0,$(document).trigger("wx.audio.recordend",t),eqShow.executePlay(),o(i.localId,t)}}))},1e3)}var r,l=0;$(document).on("wx.audio.record",function(t,e){wx.startRecord({success:function(t){eqShow.executePause(),r=!0,l=0,a(e,l)}}),$("#"+e).addClass("recording").text("松开 结束")}),$(document).on("wx.audio.recordend",function(t,e){c&&clearInterval(c),$("#"+e).removeClass("recording").text("按住 说话"),$("#panel"+e).remove(),$("#wxp"+e.substring(3)).removeClass("green-back"),wx.stopRecord({success:function(t){l=0,eqShow.executePlay(),o(t.localId,e)},error:function(t){alert(JSON.stringify(t))}})}),$(document).on("wx.audio.play",function(i,o){var a=($("#media").get(0),CLIENT_CDN+"assets/audio/wexin_sound.mp3");utilSound.pause(),e["wxr"+o.substring(3)]?(t=e["wxr"+o.substring(3)],eqShow.executePause(),wx.playVoice({localId:t})):n.map&&n.map.wxComponent&&n.map.wxComponent[o]?wx.downloadVoice({serverId:n.map.wxComponent[o],isShowProgressTips:1,success:function(e){var i=t=e.localId;eqShow.executePause(),wx.playVoice({localId:i})},error:function(t){eqShow.executePause(),s(a)}}):(eqShow.executePause(),s(a)),wx.onVoicePlayEnd({success:function(t){eqShow.executePlay()}})});var c},wechatUtils.stopWechatSound=function(){t&&wx.stopVoice({localId:t})}}();var wechatConfig=function(){function t(t){var o=location.href.split("#")[0],s=Date.now(),a="eqs/wx/ticket",r=new RegExp(n.replace("h5.","")),l=new RegExp(n.replace("h5.","").replace("cn","com"));r.test(o)||l.test(o)||(a+=(/\?/.test(a)?"&":"?")+"domain="+i),a+=(/\?/.test(a)?"&":"?")+"time="+(new Date).getTime(),$.ajax({type:"GET",url:PREFIX_S1_URL+a,crossDomain:!0}).then(function(i){i.success&&i.obj.appId&&i.obj.ticket&&i.obj.ticket!=-1&&e(i.obj.appId,i.obj.ticket,t,s)},function(t){})}function e(t,e,i,n){var o=location.href.split("#")[0],s="eqxiuview",a="jsapi_ticket="+e+"&noncestr="+s+"&timestamp="+n+"&url="+o,r=new jsSHA(a,"TEXT"),l=r.getHash("SHA-1","HEX");wx.config({debug:!1,appId:t,timestamp:n,nonceStr:s,signature:l,jsApiList:["checkJsApi","onMenuShareTimeline","onMenuShareAppMessage","onMenuShareQQ","onMenuShareWeibo","chooseImage","previewImage","uploadImage","downloadImage","startRecord","stopRecord","onVoiceRecordEnd","playVoice","pauseVoice","stopVoice","onVoicePlayEnd","uploadVoice","downloadVoice"]}),wx.ready(function(){wechatUtils.shareWeixinWhenReady(o,i,null,null,!0),wechatUtils.wechatImgUpload(o,i),wechatUtils.wechatAudioUpload(o,i)})}var i=eqShow.getDomain(window.location.href),n=eqShow.getDomain(PREFIX_SHOW_HOST);return{configWeixin:t}}(window);!function(t){t.completeEffect=function(t){return!t.find(".lock").get(0)}}(window,jQuery),function(){window.eqx={},window.eqx.money={config:{mode:3,effectCallback:"editMoney",imageCallback:"countMoney",resources:[{url:CLIENT_CDN+"common/js/countMoney.js",type:"js"},{url:CLIENT_CDN+"assets/images/money/moneybg.png",type:"image"},{url:CLIENT_CDN+"assets/images/money/moremoney.png",type:"image"},{url:CLIENT_CDN+"assets/images/money/flymoney.png",type:"image"},{url:CLIENT_CDN+"assets/images/money/float.png",type:"image"},{url:CLIENT_CDN+"assets/images/money/float2.png",type:"image"},{url:CLIENT_CDN+"assets/images/money/float3.png",type:"image"}]}},window.eqx.snowFly={config:{mode:4,effectCallback:"flyAction",resources:[{url:CLIENT_CDN+"common/js/snoweffect.js",type:"js"},{url:CLIENT_CDN+"common/js/threecanvas.js",type:"js"}]}},window.eqx.rainyDay={config:{mode:4,effectCallback:"rainyEffect",resources:[{url:CLIENT_CDN+"common/js/rainyday.js",type:"js"},{url:CLIENT_CDN+"common/js/rainyeffect.js",type:"js"}]}},window.eqx.fireWorks={config:{mode:4,effectCallback:"fireWorks",resources:[{url:CLIENT_CDN+"common/js/fireworks.js",type:"js"}]}}}(),function(){function t(t){resources.loaded=!0,t instanceof Array?t.forEach(function(t){e(t)}):e(t)}function e(t){if("loading"!==s[t.url]){if(s[t.url])return s[t.url];if(s[t.url]=!1,"image"===t.type){var e=new Image;s[t.url]="loading",e.onload=function(){s[t.url]=e,n()&&a.forEach(function(t){t()})},e.src=t.url}else"js"===t.type&&(s[t.url]="loading",$.getScript(t.url,function(){s[t.url]=!0,n()&&a.forEach(function(t){t()})}))}}function i(t){return s[t]}function n(){var t=!0;for(var e in s)if(s.hasOwnProperty(e)&&(!s[e]||"loading"===s[e]))return!1;return t}function o(t){a.push(t)}var s={},a=[];window.resources={load:t,get:i,onReady:o,isReady:n}}(),function(t,e){function i(t,i){completeEffect(e(".z-current"))&&(E="started",T.length||(T=u.find(".main-page")),i||(I?(t=event,m={x:t.touches[0].pageX-u.offset().left,y:t.touches[0].pageY-u.offset().top}):m={x:t.pageX-u.offset().left,y:t.pageY-u.offset().top}))}function n(t,i){if(E="turning",V&&V.obj.property.autoFlip&&V.obj.property.autoFlipTime&&h(),i||(I?(t=event,v={x:t.touches[0].pageX-u.offset().left,y:t.touches[0].pageY-u.offset().top}):v={x:t.pageX-u.offset().left,y:t.pageY-u.offset().top}),b=v.x-m.x,b<0){if(C){C=!1,I&&f?y=!0:m.y>=u.height()/2?w=!0:m.y<u.height()/2&&(x=!0),P=e(".z-current").get(0);var n=e(P).find(".m-img").attr("id").substring(4);if(g=e("#flip"+n),G||(k=e(P).parent(".flip-mask").get(0).nextElementSibling&&e(e(P).parent(".flip-mask").get(0).nextElementSibling).find(".main-page").get(0)?e(e(P).parent(".flip-mask").get(0).nextElementSibling).find(".main-page").get(0):!!$&&T.first().get(0)),k){e(k).find(".m-img").attr("id").substring(4);e(P).parent(".flip-mask").css({zIndex:100,display:"block"}),e(k).addClass("z-active").parent(".flip-mask").css({zIndex:99,display:"block"}),l(k),completeEffect(e(k))||e("#audio_btn").css("opacity",0),w?(e(".z-current").css({top:g.height()-u.height()+"px",left:"0"}),g.css({top:"-"+(g.height()-u.height())+"px"}),e(".turning").css({transformOrigin:"0% 100% 0px",left:u.width()+"px",top:u.height()+"px"})):x?e(".turning").css({top:"0",left:u.width()+"px",transformOrigin:"0% 0% 0px"}):y&&(e(".z-current").css({top:0,left:e(this).width()-u.width()+"px"}),g.css({top:0,left:-(g.width()-u.width())+"px"}),e(".turning").css({transformOrigin:"0% 100% 0px",left:u.width()+"px",top:0}))}}}else if(b>0&&C){C=!1,S=!0,P=e(".z-current").get(0);var n=e(P).find(".m-img").attr("id").substr(4);g=e("#flip"+n),G||(k=e(P).parent(".flip-mask").get(0).previousElementSibling&&e(e(P).parent(".flip-mask").get(0).previousElementSibling).find(".main-page").get(0)?e(e(P).parent(".flip-mask").get(0).previousElementSibling).find(".main-page").get(0):!!$&&T.last().get(0)),k&&(l(k),completeEffect(e(k))||e("#audio_btn").css("opacity",0),e(P).parent(".flip-mask").css({display:"block"}),e(k).addClass("z-active").parent(".flip-mask").css({zIndex:99,display:"block"}),e(".turning").css({top:"0",left:"0",transformOrigin:"0% 0% 0px"}))}k&&s(v)}function o(t,e){if(!k)return E="feeling",w=!1,x=!1,y=!1,S=!1,void(C=!0);E="leaving";var i,n,o,a;e?(i=t.x,n=t.y):I?(i=v.x-u.offset().left,n=v.y-u.offset().top):(i=t.pageX-u.offset().left,n=t.pageY-u.offset().top),w?(A=16,o=-u.width(),a=u.height(),_=setInterval(function(){i=i-o<=A?i:i-A,n=a-n<=A?n:n+A,s({x:i,y:n}),i-o<=A&&a-n<=A&&(clearInterval(_),r())},10)):x?(A=16,o=-u.width(),a=0,_=setInterval(function(){i=i-o<=A?i:i-A,n=n-a<=A?n:n-A,s({x:i,y:n}),i-o<=A&&n-a<=A&&(clearInterval(_),r())},1)):y?(A=5,o=-u.width(),_=setInterval(function(){i=i-o<=A?i:i-A,s({x:i,y:n}),i-o<=A&&(clearInterval(_),r())},1)):S&&(A=3,o=u.width(),a=0,_=setInterval(function(){i=o-i<=A?i:i+A,s({x:i,y:n}),o-i<=A&&(clearInterval(_),r())},1))}function s(t){w||x?(F=u.width()-t.x,w?M=Math.abs(u.height()-t.y):x&&(M=t.y),
q=M/F,z=M/Math.sqrt(F*F+M*M),R=Math.sqrt(1-z*z),j=Math.sqrt(F*F+M*M)/2,O=j*q,D=Math.sqrt(O*O+j*j),B=D/q,L=180*Math.atan(q)/Math.PI>0?180*Math.atan(q)/Math.PI:0,X=(u.width()-D)*R,N=(u.width()-D)*z*R,H=(u.width()-D)*(1-z*z),X>=1&&(w?(L>1?e(".turning").css({width:D+"px",height:B+"px",backgroundColor:"#ff0000",background:"-webkit-linear-gradient("+(180-L)+"deg, #fff 10%, #d1cfc7 40%, #f2eee2 50%, transparent 50%, transparent 100%)",transform:"translateX(-"+(D-3)+"px) translateY(-"+(B-3)+"px) rotate("+2*L+"deg) scaleX(-1)"}):a(t),W="0% 100% 0px",U="rotate(-"+(90-L)+"deg) translateY("+X+"px)",Y="rotate("+(90-L)+"deg) translateY(-"+N+"px) translateX(-"+H+"px)"):x&&(L>1?e(".turning").css({width:D+"px",height:B+"px",backgroundColor:"#000",background:"-webkit-linear-gradient(-"+(180-L)+"deg, #fff 10%, #d1cfc7 40%, #f2eee2 50%, transparent 50%, transparent 100%)",transform:"translateX(-"+(D-2)+"px) rotate(-"+2*L+"deg) scaleX(-1)"}):a(t),W="0% 0% 0px",U="rotate("+(90-L)+"deg) translateY(-"+X+"px)",Y="rotate(-"+(90-L)+"deg) translateY("+N+"px) translateX(-"+H+"px)"),g.css({zIndex:100,transformOrigin:W,transform:U}),e(k).parent(".flip-mask").css({zIndex:99,display:"block"}),e(k).css({zIndex:1e3}),e(P).css({transformOrigin:W,transform:Y}))):y?(e(".turning").css({width:(u.width()-t.x)/2+"px",height:u.height()+"px",left:t.x+"px",background:"-webkit-linear-gradient(left, #fff 0% , #d1cfc7 15%, #f2eee2 85%, #fff 100%)"}),g.css({transformOrigin:"0% 50% 0px",left:0,transform:"translateX(-"+(g.width()-t.x)+"px)"}),e(P).css({transformOrigin:"0% 50% 0px",transform:"translateX("+(g.width()-t.x)+"px)"})):S&&(g.css({zIndex:100,transformOrigin:"0% 50% 0px",transform:"translateX("+t.x+"px)"}),e(P).css({transformOrigin:"0% 50% 0px",transform:"translateX(-"+t.x+"px)"}),e(".turning").css({width:u.width()-t.x+"px",height:u.height()+"px",left:-(u.width()-2*t.x)+"px",background:"-webkit-linear-gradient(left, #fff 0% , #d1cfc7 15%, #f2eee2 85%, #fff 100%)"}))}function a(t){e(".turning").css({width:(u.width()-t.x+6)/2+"px",height:u.height()+"px",top:0,left:t.x+2+"px",background:"-webkit-linear-gradient(left, #fff 0% , #d1cfc7 10%, #f2eee2 90%, #fff 100%)",transform:"",border:0})}function r(){var t=V.list;V.obj.property.autoFlip&&V.obj.property.autoFlipTime&&p(),utilSound.pause();var i=e("#report0");i.length&&i.remove(),E="feeling",w=!1,x=!1,y=!1,S=!1,C=!0,b=0,e(".flip-mask").css({transform:"",top:0,left:0,zIndex:0}),e(P).removeClass("z-current").css({transform:"",top:0,left:0}),e(k).removeClass("z-active").addClass("z-current").css({transform:""}),e(".turning").css({width:0,height:0,top:0,left:0,transform:"",background:"none"}),P=k;var n=e(k).find(".m-img").attr("id").substring(4);e("#flip"+n).css({zIndex:100}),e("#audio_btn").css("opacity",1),k=null;var o=e(P).find(".m-img").attr("id").substring(4);t[o-1].elements&&t[o-1].elements.length&&e.each(t[o-1].elements,function(t,i){"d"==i.type&&eqShow.getShowCount(V.obj.id).then(function(t){var n=eqShow.fixedNum(t);e("#"+i.id).find(".counter-number").text(n)})}),K||eqShow.showProgressBar(V,e("#nr").find(".main-page")),K=!0}function l(t){if(t){var i=e(t).find(".m-img").attr("id").substring(4);e(t).find("li").each(function(t){for(var n=0;n<V.list[i-1].elements.length;n++)V.list[i-1].elements[n].id==parseInt(e(this).attr("id").substring(7),10)&&eqxCommon.animation(e(this),V.list[i-1].elements[n],"view")})}}function c(){"turning"!=E&&"leaving"!=E&&(m={x:0,y:u.height()},i(m,"mock"),E="turning",e(".main-page").css({width:u.width()+"px",height:u.height()+"px"}),v={x:0,y:u.height()},S=!0,_=setInterval(function(){v.x++,n(v,"mock"),v.x<=250&&(clearInterval(_),o(v,"mock"))},1))}function d(){"turning"!=E&&"leaving"!=E&&(m={x:u.width(),y:u.height()},i(m,"mock"),E="turning",e(".main-page").css({width:u.width()+"px",height:u.height()+"px"}),v={x:u.width(),y:u.height()},I&&f?y=!0:w=!0,Z=setInterval(function(){v.x-=5,v.y-=5,n(v,"mock"),v.x<=200&&(clearInterval(Z),o(v,"mock"),$||k||h())},1))}function p(){J=setInterval(function(){return completeEffect(e(".z-current"))?void d():void h()},1e3*Q)}function h(){clearInterval(J)}var u=e(".nr"),g=null,f=isAndroid(),m={},v={},b=0,w=!1,x=!1,y=!1,S=!1,C=!0,P=null,k=null,$=!1,I=mobilecheck(),_=null,T=[],E="feeling",A=0,L=0,F=0,M=0,q=0,z=0,R=0,j=0,O=0,D=0,B=0,X=0,N=0,H=0,W=0,U=0,Y=0,V=null,Q=0,Z="",G=!1;t.turnBook=function(t){V=t,V.obj.property.autoFlip&&V.obj.property.autoFlipTime&&(Q=V.obj.property.autoFlipTime,p()),$=V.obj.property.triggerLoop,e('<div class="turning"></div>').appendTo(".nr"),e(".main-page").css({width:e(".nr").width()+"px",height:e(".nr").height()+"px"}),u.on(I?"touchstart":"mousedown",function(t){V.obj.property.forbidHandFlip||"feeling"==E&&(i(t),e(".main-page").css({width:u.width()+"px",height:u.height()+"px"}))}).on(I?"touchmove":"mousemove",function(t){V.obj.property.forbidHandFlip||"started"!=E&&"turning"!=E||n(t)}).on(I?"touchend":"mouseup mouseleave",function(t){if(!V.obj.property.forbidHandFlip&&(G=!1,e(".z-current").get(0)))return 0==b?(C=!0,void(E="feeling")):void("turning"==E&&o(t))})};var K=!1;t.flipBookScroll=function(t){G=!0;for(var i,n=0,o=V.list.length;n<o;n++)t==V.list[n].id&&(i=V.list[n].num);i||(i=t),P=e(".z-current").get(0);var s=e(P).find(".m-img").attr("id").substring(4),a=e(P).parent(".flip-mask").siblings(".flip-mask").find(".main-page").find("#page"+i);a&&(k=e(a).parent(".main-page").get(0),s>i?c():s<i&&d())},e(document).on("bookFlipPre",function(t){c()}),e(document).on("bookFlipNext",function(t){d()});var J}(window,jQuery);var eqxiu=function(){function t(t,n){for(var o,s=0,a=u._pageData.length;s<a;s++)t==u._pageData[s].id&&(o=u._pageData[s].num);if(o||(o=t),n){if(1==o)return;$(u.$currentPage).removeClass("z-current"),u.$currentPage=$(u.$currentPage).siblings(".main-page").find("#page"+o).parent().addClass("z-current")}else if("10"!=u._scrollMode){T=!0;var r=$(u.$currentPage).find(".m-img").attr("id").substring(4),l=$(u.$currentPage).siblings(".main-page").find("#page"+o);if(!l)return;u.$activePage=$(l).parent(".main-page").get(0),r>o?e():r<o&&i()}else flipBookScroll(t)}function e(t){if(!(S&&2==t||C&&1==t))if("10"!=u._scrollMode){var e=0;g();var i=setInterval(function(){e+=2,"0"==u._scrollMode||"1"==u._scrollMode||"2"==u._scrollMode||"6"==u._scrollMode||"7"==u._scrollMode||"8"==u._scrollMode||"11"==u._scrollMode||"12"==u._scrollMode||"13"==u._scrollMode||"14"==u._scrollMode||"15"==u._scrollMode?q=e:"3"!=u._scrollMode&&"4"!=u._scrollMode&&"5"!=u._scrollMode&&"9"!=u._scrollMode||(M=e),f(),e>=21&&(clearInterval(i),m())},1)}else $(document).trigger("bookFlipPre")}function i(t){if(!(S&&2==t||C&&1==t))if("10"!=u._scrollMode){x=!1;var e=0;"block"==$("body .boards-panel").css("display")&&($("body .boards-panel").hide(),$("body .z-current").show()),g();var i=setInterval(function(){e-=2,"0"==u._scrollMode||"1"==u._scrollMode||"2"==u._scrollMode||"6"==u._scrollMode||"7"==u._scrollMode||"8"==u._scrollMode||"11"==u._scrollMode||"12"==u._scrollMode||"13"==u._scrollMode||"14"==u._scrollMode||"15"==u._scrollMode?q=e:"3"!=u._scrollMode&&"4"!=u._scrollMode&&"5"!=u._scrollMode&&"9"!=u._scrollMode||(M=e),f(),e<=-21&&(clearInterval(i),m(),_||u.$activePage||clearInterval(k))},1)}else $(document).trigger("bookFlipNext")}function n(){k=setInterval(function(){10===u._scrollMode||z||i()},y)}function o(){clearInterval(k)}function s(){u.$activePage=u._$pages.last().get(0),u._$pages.parent().find(".z-current").removeClass("z-current"),u._$pages.last().addClass("z-current")}function a(t){t?u._$pages.last().prev().remove():u._$pages.last().remove()}function r(t){u._scrollMode=t,v=t,_scrollMode=t}function l(t){u._isforbidHandFlip=t}function c(t){y=1e3*t,o(),n()}function d(){u._$pages=u._$app.find(".main-page")}function s(t){u._$pages.parent().find(".z-current").removeClass("z-current"),t?(u.$activePage=u._$pages.last().prev().get(0),u._$pages.last().prev().addClass("z-current")):(u.$activePage=u._$pages.last().get(0),u._$pages.last().addClass("z-current"))}function p(t){u._pageData=t}function h(t){_=t}var u,g,f,m,v,b,w,x,y,S,C,P,k,I=$(window),_=!1,T=!1,E=mobilecheck(),A=tabletCheck(),L=0,F=0,M=0,q=0,z=!1,R=!1,j=!0,O=500,D=.4,B=function(t,e,i,o){function s(t,e,i){for(var n=["","webkit","moz"],o=0,s=n.length;o<s;o++){0!=o||mobilecheck()||(e=e.substring(0,1).toLowerCase()+e.substring(1,e.length));var a=i instanceof Array?i[o]:i,r=n[o]+e;t[r]=a}}function a(t,e,i){for(var n=["","-webkit-","-moz-"],o=0;o<n.length;o++)t.css(n[o]+e,i)}function r(t){var e;return e=$("#inside_"+t,".phone-view").length?$("#inside_"+t,".phone-view"):$("#inside_"+t)}function l(){u._isDisableFlipPage=!0;var t;"0"==e||"1"==e||"2"==e||"6"==e||"9"==e||"11"==e||"12"==e?(t=q>0?-w:w,a($(u.$activePage),"transform","translateY("+t+"px)"),a($(u.$currentPage),"transform","translateY(0) scale(1)")):"3"!=e&&"5"!=e||(t=M>0?-b:b,a($(u.$activePage),"transform","translateX("+t+"px)"),a($(u.$currentPage),"transform","translateX(0) scale(1)")),setTimeout(function(){$(u.$currentPage).attr("style",""),$(u.$activePage).attr("style",""),$(u.$activePage).removeClass("z-active z-move"),u._isDisableFlipPage=!1},500)}function c(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage)))if(q>0){if(u._isDisableFlipPrevPage)return;R||j?(R=!1,j=!1,tt(!0),et(!0,"bottom center","translateY",w)):it(!0,"translateY",w,q,u._scrollMode)}else if(q<0){if(u._isDisableFlipNextPage)return;!R||j?(R=!0,j=!1,tt(!1),et(!1,"top center","translateY",w)):it(!1,"translateY",w,q,u._scrollMode)}}function d(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?(nt("translateY",q,w,u._scrollMode),$(document).trigger("flipend")):(u._isDisableFlipPage=!1,l())}function p(){if(Math.abs(M)>Math.abs(q)&&completeEffect($(u.$currentPage)))if(M>0){if(u._isDisableFlipPrevPage)return;R||j?(R=!1,j=!1,tt(!0),et(!0,"center right","translateX",b)):it(!0,"translateX",b,M,u._scrollMode)}else if(M<0){if(u._isDisableFlipNextPage)return;!R||j?(R=!0,j=!1,tt(!1),et(!1,"center left","translateX",b)):it(!1,"translateX",b,M,u._scrollMode)}}function h(){Math.abs(M)>Math.abs(q)&&Math.abs(M)>20?(nt("translateX",M,b,u._scrollMode),$(document).trigger("flipend")):(u._isDisableFlipPage=!1,l())}function v(){if(Math.abs(M)>Math.abs(q)&&completeEffect($(u.$currentPage)))if(M>0){if(u._isDisableFlipPrevPage)return;R||j?(R=!1,j=!1,tt(!0),b=E?window.innerWidth:$(".nr").width(),et(!0,"","translateX",b)):it(!0,"translateX",b,M,u._scrollMode)}else if(M<0){if(u._isDisableFlipNextPage)return;!R||j?(R=!0,j=!1,tt(!1),b=E?window.innerWidth:$(".nr").width(),et(!1,"","translateX",b)):it(!1,"translateX",b,M,u._scrollMode)}}function x(){Math.abs(M)>Math.abs(q)&&Math.abs(M)>20?(nt("translateX",M,b,u._scrollMode),$(document).trigger("flipend")):(u._isDisableFlipPage=!1,l())}function k(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage)))if(q>0){if(u._isDisableFlipPrevPage)return;R||j?(R=!1,j=!1,tt(!0),w=E?window.innerHeight:$(".nr").height(),et(!0,"","translateY",w)):it(!0,"translateY",w,q,u._scrollMode)}else if(q<0){if(u._isDisableFlipNextPage)return;!R||j?(R=!0,j=!1,tt(!1),w=E?window.innerHeight:$(".nr").height(),et(!1,"","translateY",w)):it(!1,"translateY",w,q,u._scrollMode)}}function B(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?(nt("translateY",q,w,u._scrollMode),$(document).trigger("flipend")):(u._isDisableFlipPage=!1,l())}function X(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage)))if(q>0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&$(u.$activePage).removeClass("z-move z-active"),tt(!0),s(u.$activePage.style,"Transform","rotateX(90deg) translateY(-"+w/2+"px) translateZ("+w/2+"px)"),s(ot.get(0).style,"Perspective","700px"),s(ot.get(0).style,"TransformStyle","preserve-3d")),u.$activePage&&u.$activePage.classList.contains("main-page")&&($(u.$activePage).addClass("z-active z-move").trigger("active").css("zIndex",1),s(u.$currentPage.style,"Transform","rotateX(-"+q/w*90+"deg) translateY("+q/2+"px) translateZ("+q/2+"px)"),s(u.$activePage.style,"Transform","rotateX("+(90-q/w*90)+"deg) translateY("+(-(w/2)+q/2)+"px) translateZ("+(w/2-q/2)+"px)"))}else if(q<0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&$(u.$activePage).removeClass("z-move z-active"),tt(!1),s(u.$activePage.style,"Transform","rotateX(-90deg) translateY(-"+w/2+"px) translateZ(-"+w/2+"px)"),s(ot.get(0).style,"Perspective","700px"),s(ot.get(0).style,"TransformStyle","preserve-3d")),u.$activePage&&u.$activePage.classList.contains("main-page")?($(u.$activePage).addClass("z-active z-move").trigger("active").css("zIndex",0),s(u.$currentPage.style,"Transform","rotateX("+-q/w*90+"deg) translateY("+q/2+"px) translateZ("+-q/2+"px)"),s(u.$activePage.style,"Transform","rotateX("+(-90-q/w*90)+"deg) translateY("+(w/2+q/2)+"px) translateZ("+(w/2+q/2)+"px)")):(s(u.$currentPage.style,"Transform","translateX(0px) scale(1)"),u.$activePage=null)}}function N(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?(q>0?s(u.$currentPage.style,"Transform","rotateX(-90deg) translateY("+w/2+"px) translateZ("+w/2+"px)"):s(u.$currentPage.style,"Transform","rotateX(90deg) translateY(-"+w/2+"px) translateZ("+w/2+"px)"),s(u.$currentPage.style,"zIndex","0"),s(u.$activePage.style,"Transform","rotateX(0deg) translateY(0px) translateZ(0px)"),s(u.$activePage.style,"zIndex","2"),$(document).trigger("flipend")):(s(u.$currentPage.style,"Transition","none"),s(u.$activePage.style,"Transition","none"),u._isDisableFlipPage=!1,l())}function H(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage)))if(q>0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&$(u.$activePage).removeClass("z-move z-active"),tt(!0),a(ot,"perspective","700px"),a(ot,"transform-style","preserve-3d"),s(u.$activePage.style,"TransformOrigin","top"),s(u.$activePage.style,"Transform","rotateX(90deg)")),u.$activePage&&u.$activePage.classList.contains("main-page")&&($(u.$activePage).addClass("z-active z-move").trigger("active"),s(u.$activePage.style,"Transform","rotateX("+(90-q/w*90)+"deg) "))}else if(q<0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&$(u.$activePage).removeClass("z-move z-active"),tt(!1),s(u.$activePage.style,"TransformOrigin","bottom"),s(u.$activePage.style,"Transform","rotateX(-90deg)"),a(ot,"perspective","700px"),a(ot,"transform-style","preserve-3d")),u.$activePage&&u.$activePage.classList.contains("main-page")?($(u.$activePage).addClass("z-active z-move").trigger("active"),s(u.$activePage.style,"Transform","rotateX("+(-90-q/w*90)+"deg) ")):(s(u.$currentPage.style,"Transform","translateX(0px) scale(1)"),u.$activePage=null)}}function W(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?(q>0?s(u.$activePage.style,"Transform","rotateX(0deg)"):s(u.$activePage.style,"Transform","rotateX(0deg)"),$(document).trigger("flipend")):(s(u.$currentPage.style,"Transition","none"),s(u.$activePage.style,"Transition","none"),u._isDisableFlipPage=!1,l())}function U(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage))){if(q>0){if(u._isDisableFlipPrevPage)return;(R||j)&&(R=!1,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),tt(!0),u.$activePage.style.zIndex=2,u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-move")),u.$activePage.style.opacity=0)}else if(q<0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),tt(!1),u.$activePage.style.zIndex=2,u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-move")),u.$activePage.style.opacity=0)}var t=Math.abs(q)/w*1.3;u.$activePage.style.opacity=t.toFixed(1),t.toFixed(3)<=1&&a($(u.$activePage),"transform","scale("+t.toFixed(3)+")")}}function Y(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?(a($(u.$activePage),"transform","scale(1)"),u.$activePage.style.opacity=1,$(document).trigger("flipend")):(s(u.$currentPage.style,"Transition","none"),s(u.$activePage.style,"Transition","none"),u._isDisableFlipPage=!1,l())}function V(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage)))if(q>0){if(u._isDisableFlipPrevPage)return;(R||j)&&(R=!1,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-fade-in"),u.$activePage.classList.remove("z-move")),tt(!0),u.$currentPage.style.zIndex=1,u.$activePage.style.zIndex=2,u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-fade-in"),u.$activePage.classList.add("z-move")))}else if(q<0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-fade-in"),u.$activePage.classList.remove("z-move")),tt(!1),u.$currentPage.style.zIndex=1,u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.style.zIndex=2,u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-fade-in"),u.$activePage.classList.add("z-move")))}}function Q(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?setTimeout(function(){$(document).trigger("flipend")},1600):(u._isDisableFlipPage=!1,l())}function Z(){if(Math.abs(M)>Math.abs(q)&&completeEffect($(u.$currentPage)))if(M>0){if(u._isDisableFlipPrevPage)return;R||j?(R=!1,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),tt(!0),u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-move"),a($(u.$activePage),"Transform","scale(0.3) translateX(0) translateZ(-"+w+"px) rotateY(45deg)"),u.$activePage.style.zIndex="0"),a(ot,"perspective","1000px"),u.$currentPage.style.zIndex="100"):u.$activePage&&(M<=b/4?a($(u.$currentPage),"Transform","translateX("+M+"px)"):a($(u.$currentPage),"Transform","translateX("+1.5*M+"px) scale("+((5*b/4-M)/b).toFixed(3)+") rotateY("+M/b*45+"deg) translateZ(-"+(M-b/4)+"px)"))}else if(M<0){if(u._isDisableFlipNextPage)return;!R||j?(R=!0,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),tt(!1),u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-move"),a($(u.$activePage),"Transform","scale(0.3) translateX("+(b+300)+"px) translateZ(-"+w+"px) rotateY(-45deg)"),u.$activePage.style.zIndex="0"),a(ot,"perspective","1000px"),u.$currentPage.style.zIndex="100"):u.$activePage&&(M>=-b/4?a($(u.$currentPage),"Transform","translateX("+M+"px)"):a($(u.$currentPage),"Transform","translateX("+1.5*M+"px) scale("+((5*b/4+M)/b).toFixed(3)+") rotateY("+M/b*45+"deg) translateZ("+(M+b/4)+"px)"),a($(u.$activePage),"Transform","scale("+(.3-(M+b/4)/b).toFixed(3)+") translateX("+(-M-b/4+200)+"px) translateZ("+(-M-3*b/4)+"px) rotateY(-"+(45+(M+b/4)/b*45)+"deg)"))}}function G(){Math.abs(M)>Math.abs(q)&&Math.abs(M)>20?(M>0?(u.$currentPage.style.webkitTransformOrigin="left",u.$currentPage.style.webkitTransform="translateX(0) translateZ(-"+w+"px) rotateY(0) scale(0.2)",u.$activePage.style.webkitTransform="translateX(0) translateZ(0) rotateY(0) scale(1)",u.$currentPage.style.zIndex="0",u.$activePage.style.zIndex="1"):(u.$currentPage.style.webkitTransformOrigin="right",u.$currentPage.style.webkitTransform="translateX("+b+"px) translateZ(-"+w+"px) rotateY(0) scale(0.2)",u.$activePage.style.webkitTransform="translateX(0) translateZ(0) rotateY(0) scale(1)",u.$activePage.style.zIndex="1",u.$currentPage.style.zIndex="0"),$(document).trigger("flipend")):(s(u.$currentPage.style,"Transition","none"),s(u.$activePage.style,"Transition","none"),u._isDisableFlipPage=!1,l())}function K(){if(Math.abs(q)>Math.abs(M)&&completeEffect($(u.$currentPage))){if(q>0){if(u._isDisableFlipPrevPage)return;(R||j)&&(R=!1,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),tt(!0),u.$activePage&&u.$activePage.classList.contains("main-page")&&($(u.$activePage).addClass("z-active z-move"),$(u.$activePage).css({zIndex:0,opacity:1})),$(u.$currentPage).css({opacity:1}),$(u.$activePage).css({zIndex:0,opacity:1}),a($(u.$activePage),"transform","translateY(0)"),a($(u.$currentPage),"transform-origin","0% 0% 0px"))}else if(q<0){if(u._isDisableFlipNextPage)return;R&&!j||(R=!0,j=!1,u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),tt(!1),u.$activePage&&u.$activePage.classList.contains("main-page")&&(u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-move"),$(u.$activePage).css({zIndex:0,opacity:1})),$(u.$currentPage).css({opacity:1}),$(u.$activePage).css({zIndex:0,opacity:1}),a($(u.$activePage),"transform","translateY(0)"),a($(u.$currentPage),"transform-origin","0% 0% 0px"))}u.$activePage&&(a($(u.$currentPage),"transform-origin","0% 0% 0px"),a($(u.$currentPage),"transform","rotate("+Math.abs(q)/w*90+"deg)"),u.$currentPage.style.opacity=((w-Math.abs(q))/w).toFixed(1))}}function J(){Math.abs(q)>Math.abs(M)&&Math.abs(q)>20?(a($(u.$currentPage),"transform","translateY("+w+"px) rotate("+Math.abs(q)/w*90+"deg)"),$(u.$currentPage).css({opacity:.5}),$(document).trigger("flipend")):(s(u.$currentPage.style,"Transition","none"),s(u.$activePage.style,"Transition","none"),u._isDisableFlipPage=!1,l())}function tt(t){T||(t?u.$currentPage.previousElementSibling&&u.$currentPage.previousElementSibling.classList.contains("main-page")?u.$activePage=u.$currentPage.previousElementSibling:_?u.$activePage=u._$pages.last().get(0):u.$activePage=!1:u.$currentPage.nextElementSibling&&u.$currentPage.nextElementSibling.classList.contains("main-page")?u.$activePage=u.$currentPage.nextElementSibling:_?u.$activePage=u._$pages.first().get(0):u.$activePage=!1)}function et(t,e,i,n){if(u.$activePage&&(u.$activePage.classList.remove("z-active"),u.$activePage.classList.remove("z-move")),u.$activePage&&u.$activePage.classList.contains("main-page")){u.$activePage.classList.add("z-active"),u.$activePage.classList.add("z-move");var o=t?"-":"";u.$activePage.style.webkitTransition="none",u.$activePage.style.webkitTransform=i+"("+o+n+"px)",u.$activePage.style.mozTransition="none",u.$activePage.style.mozTransform=i+"("+o+n+"px)",u.$activePage.style.transition="none",u.$activePage.style.transform=i+"("+o+n+"px)",$(u.$activePage).trigger("active"),e&&a($(u.$currentPage),"transform-origin",e)}else s(u.$currentPage.style,"Transform",i+"(0px) scale(1)")}function it(t,e,i,n,o){if(u.$activePage){var s=t?"-":"";a($(u.$activePage),"transform",e+"("+s+(i-Math.abs(n))+"px)"),"1"==o||"3"==o?a($(u.$currentPage),"transform","scale("+((i-Math.abs(n))/w).toFixed(3)+")"):"5"!=o&&"11"!=o||a($(u.$currentPage),"transform",e+"("+n+"px)")}}function nt(t,e,i,n){if("1"==n||"3"==n)a($(u.$currentPage),"transform","scale(0.2)");else if("5"==n||"11"==n){var o=e>0?"":"-";a($(u.$currentPage),"transform",t+"("+o+i+"px)")}else a($(u.$currentPage),"transform","scale(1)");a($(u.$activePage),"transform",t+"(0px)")}this._$app=t,this._$pages=this._$app.find(".main-page"),this.$currentPage=this._$pages.eq(0),this.$activePage=null,this._isInitComplete=!1,this._isDisableFlipPage=!1,this._isDisableFlipPrevPage=!1,this._isDisableFlipNextPage=!1,this._scrollMode=e,this._pageData=i,this.pageData=o,e=e,this._isforbidHandFlip=o.obj.property.forbidHandFlip,u=this,b=E||A?window.innerWidth:t.width(),w=E||A?window.innerHeight:t.height();var ot=$("#con"),st=!1;"8"!=e&&"9"!=e||(D=.7,O=800),0==e||1==e||2==e||6==e||7==e||8==e||11==e||12==e?C=!0:3!=e&&4!=e&&5!=e&&10!=e||(S=!0),C?(P=$(".ctrl_panel_dir .ctrl-down"),$nextCtrl=$(".ctrl_panel_dir .ctrl-up")):S&&(P=$(".ctrl_panel_dir .ctrl-right"),$nextCtrl=$(".ctrl_panel_dir .ctrl-left")),o.obj.property.hasOwnProperty("triggerLoop")||(o.obj.property.triggerLoop=!0),_=o.obj.property.triggerLoop,o.obj.property.autoFlip&&(y=1e3*o.obj.property.autoFlipTime,n());var at;if(i[0].elements&&i[0].elements.length)for(var rt=0;rt<i[0].elements.length;rt++){at||(eqShow.shakeTrigger(i,u.$currentPage),at=!0);var lt=r(i[0].elements[rt].id);eqxCommon.bindTrigger(lt,i[0].elements[rt])}if(function(){I.on("scroll.elasticity",function(t){t.preventDefault()}).on("touchmove.elasticity",function(t){t.preventDefault()}),I.delegate("img","mousemove",function(t){t.preventDefault()})}(),"10"!=e){var ct=!1;u._$app.on("mousedown touchstart",function(t){u._isforbidHandFlip||(g(t),ct=!0)}).on("mousemove touchmove",function(t){u._isforbidHandFlip||ct&&f(t)}).on("mouseup touchend mouseleave",function(t){u._isforbidHandFlip||(m(t),ct=!1)})}else turnBook(o);g=function(t){st=!1,E&&t&&(t=event),u._isDisableFlipPage||(u.$currentPage=u._$pages.filter(".z-current").get(0),T||(u.$activePage=null),u.$currentPage&&completeEffect($(u.$currentPage))&&(z=!0,R=!1,j=!0,M=0,q=0,t&&"mousedown"==t.type?(L=t.pageX,F=t.pageY):t&&"touchstart"==t.type&&(L=t.touches?t.touches[0].pageX:t.originalEvent.touches[0].pageX,F=t.touches?t.touches[0].pageY:t.originalEvent.touches[0].pageY),u.$currentPage.classList.add("z-move"),s(u.$currentPage.style,"Transition","none"),"12"==u._scrollMode&&(u.$currentPage.style.zIndex=3)))},f=function(t){E&&t&&(t=event),z&&u._$pages.length>1&&(t&&"mousemove"==t.type?(M=t.pageX-L,q=t.pageY-F):t&&"touchmove"==t.type&&(M=(t.touches?t.touches[0].pageX:t.originalEvent.touches[0].pageX)-L,q=(t.touches?t.touches[0].pageY:t.originalEvent.touches[0].pageY)-F),!st&&(Math.abs(M)>20||Math.abs(q)>20)&&(st=!0),"0"==u._scrollMode||"2"==u._scrollMode||"1"==u._scrollMode||"15"==u._scrollMode?c():"4"==u._scrollMode||"3"==u._scrollMode?p():"5"==u._scrollMode?v():"6"==u._scrollMode?X():"7"==u._scrollMode?H():"8"==u._scrollMode?U():"9"==u._scrollMode?Z():"11"==u._scrollMode?k():"12"==u._scrollMode?K():"13"==u._scrollMode?V():"14"==u._scrollMode&&V())},m=function(t){if(z&&completeEffect($(u.$currentPage)))if(z=!1,u.$activePage){u._isDisableFlipPage=!0;var e;e="6"==u._scrollMode||"7"==u._scrollMode?"cubic-bezier(0,0,0.99,1)":"12"==u._scrollMode?"cubic-bezier(.17,.67,.87,.13)":"linear",u.$currentPage.style.webkitTransition="-webkit-transform "+D+"s "+e,u.$activePage.style.webkitTransition="-webkit-transform "+D+"s "+e,u.$currentPage.style.mozTransition="-moz-transform "+D+"s "+e,u.$activePage.style.mozTransition="-moz-transform "+D+"s "+e,u.$currentPage.style.transition="transform "+D+"s "+e,u.$activePage.style.transition="transform "+D+"s "+e,"0"==u._scrollMode||"2"==u._scrollMode||"1"==u._scrollMode||"15"==u._scrollMode?d():"4"==u._scrollMode||"3"==u._scrollMode?h():"5"==u._scrollMode?x():"6"==u._scrollMode?N():"7"==u._scrollMode?W():"8"==u._scrollMode?Y():"9"==u._scrollMode?G():"11"==u._scrollMode?B():"12"==u._scrollMode?J():"13"==u._scrollMode?Q():"14"==u._scrollMode&&Q();var i=$(u.$activePage).find(".m-img").attr("id").replace("page","")-1;u._pageData[i].properties&&u._pageData[i].properties.longPage&&$(document).trigger("clearTouchPos"),$(u.$activePage).find("li.comp-resize").each(function(t){for(var e=0;e<u._pageData[i].elements.length;e++)if(u._pageData[i].elements[e].id==parseInt($(this).attr("id").substring(7),10)){eqxCommon.animation($(this),u._pageData[i].elements[e],"view",u._pageData[i].properties);var n=r(u._pageData[i].elements[e].id);eqxCommon.bindTrigger(n,u._pageData[i].elements[e])}});for(var n=0;n<u._pageData.length;n++)u._pageData[n].effObj&&(u._pageData[n].effObj.pause=!0);u._pageData[i].effObj&&u._pageData[i].effObj.startPlay(),eqShow.setPageHis(u._pageData[i].id)}else u.$currentPage.classList.remove("z-move");T=!1},$(document).on("flipend",function(t){completeEffect($(u.$activePage))||$("#audio_btn").css("opacity",0);var n=$("#report0"),a=$(u.$activePage).find(".m-img").attr("id").substring(4),r=[];i=u._pageData,i[a-1].elements&&i[a-1].elements.length&&(r=i[a-1].elements,$.each(r,function(t,e){"d"==e.type&&eqShow.getShowCount(o.obj.id).then(function(t){var i=eqShow.fixedNum(t);$("#"+e.id).find(".counter-number").text(i)})})),eqShow.clearTyperText(i[a-1]),setTimeout(function(){s(u.$currentPage.style,"Transition","none"),$(u.$activePage).removeClass("z-active z-move").addClass("z-current"),$(u.$currentPage).removeClass("z-current z-move"),u._isDisableFlipPage=!1,u.$currentPage=$(u.$activePage).trigger("current"),$(u.$currentPage).trigger("hide"),utilSound.pause(),n.length&&n.remove(),"8"!=e&&"9"!=e&&"12"!=e||($(u.$currentPage).css("z-index","1"),$(".main-page").attr("style","")),eqShow.shakeTrigger(i,u.$currentPage),_||(1==a?P.removeClass("enabled"):a==u._pageData.length?$nextCtrl.removeClass("enabled"):(P.addClass("enabled"),$nextCtrl.addClass("enabled"))),window.wechatUtils&&wechatUtils.stopWechatSound()},O)}),$(document).on("startAutoFlip",function(t){o.obj.property.autoFlip&&n()}),eqShow.showProgressBar(o,u._$pages,t)};return{pageScroll:t,nextPage:i,prePage:e,lastPage:s,app:B,pauseAutoFlip:o,removeLastPage:a,changeScrollMode:r,startAutoFlip:c,changeAppPage:d,setTriggerLoop:h,forbidHandFlip:l,setPageData:p}}();!function(t,e){function i(t,i){if(!e("#report0").length){var o=[];o[0]='<div id="report0"></div>',o[1]='<div id="report1"></div>',o[2]='<div id="report2"><p><img src="'+CLIENT_CDN+'/view/images/jubao_03.png" width="50px;"></p><h1>请选择举报原因</h1></div>',o[3]='<div id="report3"><ul id="reportList"></ul></div>',o[4]='<div id="report4"><a id="reportSubmit" data-event="11203">提交举报</a></div>',e(o[0]).appendTo("#page"+t),e(o[1]).appendTo("#report0");for(var s=2;s<=4;s++)e(o[s]).appendTo("#report1");n(i)}}function n(t){if(a.length)return void o(a,t);var i=PREFIX_S1_URL+"eqs/class/expose_types";e.ajax({type:"GET",url:i,xhrFields:{withCredentials:!0},crossDomain:!0}).then(function(e){e.success&&(a=e.list,o(a,t))})}function o(t,i){for(var n,o=0,a=t.length;o<a;o++){var r='<li value="'+t[o].value+'"><span>'+t[o].name+"</span></li>";e(r).appendTo("#reportList")}var l=e("#reportList").find("li").eq(0);l.addClass("active"),n=l.val(),e("#reportList").find("li").click(function(t){e(this).siblings().removeClass("active"),e(this).addClass("active"),n=e(this).val()}),e("#reportSubmit").click(function(t){s(i,n)}),e("#report0").parent(".m-img").click(function(t){e("#report0").remove()}),e("#report0").click(function(t){t.stopPropagation()})}function s(t,i){var n=PREFIX_URL+"eqs/expose",o={sceneId:t,type:i};e.ajax({type:"POST",url:n,data:e.param(o),xhrFields:{withCredentials:!0},crossDomain:!0}).then(function(t){t.success&&(e("#report0").remove(),alert("举报成功！"))},function(t){e("#report0").remove()})}t.addReport=function(t,n){var o='<li comp-drag="" comp-rotate="" class="comp-resize comp-rotate inside wsite-text" id="inside_439881" num="1" ctype="2" comp-resize="" style="width: 320px; height: 36px; left: -250px; top: 420px; z-index: 999;"><div class="element-box" style="height: 100%; z-index: 3; width: 100%; left: 0px; top: 420px; transform: none;-webkit-animation: fadeIn 3s ease 1s both;-webkit-animation-play-state: initial;\\"><div class="element-box-contents" style="width: 100%; height: 100%;"><div id="439881" ctype="2" class="element comp_paragraph editable-text" style="cursor: default; width: 320px; height: 36px;"><div style="text-align: right;"><span style="line-height: 1; background-color: initial;"><font size="2" color="#888888"><b>举报</b></font></span></div></div></div></div></li>',s=e("#page"+t).find(".edit_wrapper").find("ul");e(o).appendTo(s).click(function(e){e.stopPropagation(),i(t,n)})};var a=[]}(window,jQuery),function(window,$){function appendActivityPage(t,e){t.obj.property.activityPageId&&(activityPagePromise=$.ajax({type:"GET",url:PREFIX_S2_URL+"eqs/trailer/"+t.obj.property.activityPageId,crossDomain:!0,success:function(t){t.obj&&e.push(t.obj)}}))}function internationalLastPage(t,e,i){var n='{"id":"","sceneId":"","num":2,"name":null,"properties":null,"elements":[{"id":439880,"pageId":129810,"sceneId":16060,"num":0,"type":"3","isInput":0,"title":null,"content":null,"status":1,"css":{},"properties":{"bgColor":"#E6E9EE"}},{"id":439881,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;\\"><span style=\\"line-height: 1; background-color: initial;\\"><font size=\\"4\\" color=\\"#888888\\"><b>场景名称</b></font></span></div>","status":1,"css":{"height":"65","zIndex":"10","width":"320","left":"0px","top":"77px"},"properties":{}},{"id":439882,"pageId":129810,"sceneId":16060,"num":1,"type":"4","isInput":0,"title":null,"content":null,"status":1,"css":{"borderRadius":"10px","borderStyle":"solid","zIndex":"9","borderColor":"rgba(0,0,0,1)","paddingTop":"0px","height":"141","backgroundColor":"","color":"","boxShadow":"0px 0px 0px #333333","borderWidth":"0px","width":"142.13709677419354","left":"92px","paddingBottom":"0px","top":"177px"},"properties":{"height":"100px","imgStyle":{"width":142,"height":142,"marginTop":"-0.5px","marginLeft":"0px"},"width":"100px","src":"group1/M00/BA/DA/yq0KA1Rq8COAAYRjAAKU4OVYum0889.jpg"}},{"id":439883,"pageId":129810,"sceneId":16060,"num":1,"type":"4","isInput":0,"title":null,"content":null,"status":1,"css":{"height":"16","zIndex":"11","width":"280","left":"21px","top":"122px"},"properties":{"height":"100px","imgStyle":{"width":280,"height":73,"marginTop":"-24px","marginLeft":"0px"},"width":"100px","src":"'+CLIENT_CDN+'view/images/line.png"}},';
return 100==t.obj.bizType&&isMobile&&(n+='{"id":439884,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div id=\\"eqx-share-container\\" style=\\"text-align: center;padding-top: 0;\\"></div>","status":1,"css":{"height":"45","zIndex":"11","width":"280","left":"21px","top":"360px","text-align": "center"},"properties":{"anim":[{"type":20,"direction":0,"duration":"1","delay":"1","countNum":"1"}]}},'),n+='{"id":439885,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;padding-top: 0;\\"><span style=\\"font-size: small; line-height: 1; background-color: initial;\\"><a href=\\"'+PREFIX_S1_URL+"eqs/link?id=16060&amp;url="+encodeURIComponent(redirectUrl)+'\\" target=\\"_blank\\"><img style=\\"width: 140px;\\" src=\\"'+CLIENT_CDN+'assets/images/available-on-the-app-store.png\\"></a></span></div>","status":1,"css":{"borderRadius":"0px","borderStyle":"solid","height":"50","paddingTop":"0px","borderColor":"rgba(222,220,227,1)","zIndex":"12","boxShadow":"0px 0px 0px rgba(200,200,200,0.6)","color":"","backgroundColor":"rgba(255,255,255,0)","borderWidth":"0px","width":"320","left":"1px","paddingBottom":"20px","top":"410px"},"properties":{"anim":{"type":1,"direction":3,"duration":"1","delay":"0.6"}}}]}'}function eqFreepage(t,e,i){function n(t,e,i){activityPagePromise?activityPagePromise.done(function(){i.list.push(t),parsePage(e,i)}).fail(function(){i.list.push(t),parsePage(e,i)}):(i.list.push(t),parsePage(e,i))}var o='{"id":"","sceneId":"","num":2,"name":null,"properties":null,"elements":[{"id":439880,"pageId":129810,"sceneId":16060,"num":0,"type":"3","isInput":0,"title":null,"content":null,"status":1,"css":{},"properties":{"bgColor":"#E6E9EE"}},{"id":439881,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;\\"><span style=\\"line-height: 1; background-color: initial;\\"><font size=\\"4\\" color=\\"#888888\\"><b>场景名称</b></font></span></div>","status":1,"css":{"height":"65","zIndex":"10","width":"320","left":"0px","top":"77px"},"properties":{}},{"id":439882,"pageId":129810,"sceneId":16060,"num":1,"type":"4","isInput":0,"title":null,"content":null,"status":1,"css":{"borderRadius":"10px","borderStyle":"solid","zIndex":"9","borderColor":"rgba(0,0,0,1)","paddingTop":"0px","height":"141","backgroundColor":"","color":"","boxShadow":"0px 0px 0px #333333","borderWidth":"0px","width":"142.13709677419354","left":"92px","paddingBottom":"0px","top":"177px"},"properties":{"height":"100px","imgStyle":{"width":142,"height":142,"marginTop":"-0.5px","marginLeft":"0px"},"width":"100px","src":"group1/M00/BA/DA/yq0KA1Rq8COAAYRjAAKU4OVYum0889.jpg"}},{"id":439883,"pageId":129810,"sceneId":16060,"num":1,"type":"4","isInput":0,"title":null,"content":null,"status":1,"css":{"height":"16","zIndex":"11","width":"280","left":"21px","top":"122px"},"properties":{"height":"100px","imgStyle":{"width":280,"height":73,"marginTop":"-24px","marginLeft":"0px"},"width":"100px","src":"'+CLIENT_CDN+'view/images/line.png"}},{"id":439885,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;padding-top: 0;\\"><span style=\\"font-size: small; line-height: 1; background-color: initial;\\"><a href=\\"'+PREFIX_S1_URL+"eqs/link?id=16060&amp;url="+encodeURIComponent(redirectUrl)+'\\" target=\\"_blank\\"><font color=\\"#888888\\">免费创建一个场景？→</font><font color=\\"#23a3d3\\">易企秀</font></a></span></div>","status":1,"css":{"borderRadius":"0px","borderStyle":"solid","height":"30","paddingTop":"0px","borderColor":"rgba(222,220,227,1)","zIndex":"12","boxShadow":"0px 0px 0px rgba(200,200,200,0.6)","color":"","backgroundColor":"rgba(255,255,255,0)","borderWidth":"0px","width":"320","left":"1px","paddingBottom":"20px","top":"420px"},"properties":{"anim":{"type":1,"direction":3,"duration":"1","delay":"0.6"}}}]}',o='{"id":"","sceneId":"","num":2,"name":null,"properties":null,"elements":[{"id":439880,"pageId":129810,"sceneId":16060,"num":0,"type":"3","isInput":0,"title":null,"content":null,"status":1,"css":{},"properties":{"bgColor":"#E6E9EE"}},{"id":439881,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;\\"><span style=\\"line-height: 1; background-color: initial;\\"><font size=\\"4\\" color=\\"#888888\\"><b>场景名称</b></font></span></div>","status":1,"css":{"height":"65","zIndex":"10","width":"320","left":"0px","top":"77px"},"properties":{}},{"id":439882,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div class=\\"bottom-logo\\" style=\\"text-align: center;cursor:pointer;height:142px;width:142px;border-radius:10px;\\"><em style=\\"color:white;line-height:142px;font-size:120px;\\" class=\\"eqf-eqxiu\\"></em></div>","status":1,"css":{"height":"157","width":"172","left":"77px","top":"170px"},"properties":{}},{"id":439883,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"width:280px;height:1px;background-color:rgba(60,60,60,0.4);cursor:pointer;position:absolute;left:0;-webkit-filter:drop-shadow(0px 1px 0px rgba(60,60,60,0.4));top:12px;\\"></div>","status":1,"css":{"height":"24","width":"280","left":"21px","top":"122px"},"properties":{}},{"id":439885,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;padding-top: 0;\\"><span style=\\"font-size: small; line-height: 1; background-color: initial;\\"><a href=\\"'+PREFIX_S1_URL+"eqs/link?id=16060&amp;url="+encodeURIComponent(redirectUrl)+'\\" target=\\"_blank\\" data-event=\\"1120201\\"><font color=\\"#888888\\">免费创建一个场景？→</font><font color=\\"#23a3d3\\">易企秀</font></a></span></div>","status":1,"css":{"borderRadius":"0px","borderStyle":"solid","height":"30","paddingTop":"0px","borderColor":"rgba(222,220,227,1)","zIndex":"12","boxShadow":"0px 0px 0px rgba(200,200,200,0.6)","color":"","backgroundColor":"rgba(255,255,255,0)","borderWidth":"0px","width":"320","left":"1px","paddingBottom":"20px","top":"420px"},"properties":{"anim":{"type":1,"direction":3,"duration":"1","delay":"0.6"}}}]}';100==t.obj.bizType&&(o=internationalLastPage(t,e,i));var s='{"id":439882,"pageId":129810,"sceneId":16060,"num":1,"type":"4","isInput":0,"title":null,"content":null,"status":1,"css":{"borderRadius":"10px","borderStyle":"solid","zIndex":"9","borderColor":"rgba(0,0,0,1)","paddingTop":"0px","height":"141","backgroundColor":"","color":"","boxShadow":"0px 0px 0px #333333","borderWidth":"0px","width":"142.13709677419354","left":"92px","paddingBottom":"0px","top":"177px"},"properties":{"height":"100px","imgStyle":{"width":142,"height":142,"marginTop":"-0.5px","marginLeft":"0px"},"width":"100px","src":"group1/M00/BA/DA/yq0KA1Rq8COAAYRjAAKU4OVYum0889.jpg"}}',a='{"id":81395,"pageId":"","sceneId":"","num":1,"type":"4","isInput":0,"title":null,"content":null,"status":1,"css":{"borderRadius":"%","borderStyle":"solid","height":"158","zIndex":"1000","paddingTop":"0px","borderColor":"rgba(0,0,0,1)","boxShadow":"0 0px 0px #333333","color":"#000000","backgroundColor":"white","borderWidth":"0px","width":"158","left":"84px","paddingTop":"11px","paddingLeft":"10px","top":"170px"},"properties":{"height":"100px","imgStyle":{"width":139,"height":136,"marginTop":"0px","marginLeft":"0px"},"width":"100px","src":"group1/M00/01/30/yq0JCFQpOR-AOULFAAFBPO1yzBQ984.jpg"}}',r='{"id":439882,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div class=\\"bottom-logo\\" style=\\"text-align: center;cursor:pointer;height:136px;width:139px;\\"><em style=\\"color:white;line-height:136px;font-size:120px;\\" class=\\"eqf-eqxiu\\"></em></div>","status":1,"css":{"height":"158","width":"158","left":"84px","top":"170px","backgroundColor":"white"},"properties":{}}',l='{"id":81465,"pageId":"","sceneId":"","num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;\\"><font color=\\"#ffffff\\" size=\\"3\\">击此处进行编辑</font></div>","status":1,"css":{"zIndex":"102","height":"65","width":"320","left":"0px","top":"70px"},"properties":{}}',c='{"id":2557867,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div class=\\"logo-shadow1\\" style=\\"text-align: center;cursor:pointer;height:127px;width:220px;transform:rotate(-45deg);-webkit-transform:rotate(-45deg);position:absolute;left:20px;top:56px;\\"></div>","status":1,"css":{"height":"257","width":"257","left":"78px","top":"175px"},"properties":{}}',d='{"id":439883,"pageId":129810,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"width:280px;height:1px;background-color:rgba(60,60,60,0.4);cursor:pointer;position:absolute;left:0;-webkit-filter:drop-shadow(0px 1px 0px rgba(60,60,60,0.4));top:12px;\\"></div>","status":1,"css":{"height":"24","width":"280","left":"21px","top":"122px"},"properties":{}}';if(ad=1,t.obj.property.lastPageId)customLastPage=!0,$.ajax({type:"GET",url:PREFIX_S2_URL+"eqs/trailer/"+t.obj.property.lastPageId,crossDomain:!0,success:function(i){if(!i.obj){o=o.replace(/id=16060/,"id="+t.obj.id);var s=JSON.parse(o);return s.num=t.list.length+1,s.elements[2].properties.src=t.obj.cover.replace("/strip",""),s.elements[1].content=s.elements[1].content.replace(/场景名称/,t.obj.name),s.elements[1].properties.height=65,s.elements[1].height=65,void n(s,e,t)}i.obj.sceneId=t.obj.id;for(var p,h=0;h<i.obj.elements.length;h++)"4"!=i.obj.elements[h].type||"group1/M00/A5/5E/yq0KA1QmePmAKr7yAAEByp5jyLc752.jpg"!=i.obj.elements[h].properties.src&&"group1/M00/C5/9D/yq0KA1SH1zuAFgkLAAAFgBR8hJs456.png"!=i.obj.elements[h].properties.src&&"group1/M00/C5/3F/yq0KA1SHp-2AQZZZAAB-7rIaK6I743.png"!=i.obj.elements[h].properties.src&&"group1/M00/C5/9D/yq0KA1SH1zuAeQuFAAAFfUkeXDc110.png"!=i.obj.elements[h].properties.src||(i.obj.elements.splice(h,1),h--);"group1/M00/61/8A/yq0KA1T2vYSAEgo7AACovQVgHxk048.jpg"!=t.obj.cover?(p=JSON.parse(a),p.properties.src=t.obj.cover.replace("/strip","")):p=JSON.parse(r),i.obj.elements.push(p),i.obj.elements.push(JSON.parse(c)),i.obj.elements.push(JSON.parse(d));var u=JSON.parse(l);u.content=u.content.replace(/击此处进行编辑/,t.obj.name),i.obj.elements.push(u);for(var h=0;h<i.obj.elements.length;h++)"2"===i.obj.elements[h].type?/http:\/\/service.eqxiu.com\/eqs\/link/.test(i.obj.elements[h].content)&&(i.obj.elements[h].content=i.obj.elements[h].content.replace(/;url=.*com"/,";url="+encodeURIComponent(redirectUrl)+'"')):"3"===i.obj.elements[h].type&&i.obj.elements[h].properties.imgSrc?i.obj.elements[h].properties.imgSrc=window.moblieViewImgBg?window.moblieViewImgBg+i.obj.elements[h].properties.imgSrc:i.obj.elements[h].properties.imgSrc:"4"===i.obj.elements[h].type&&i.obj.elements[h].properties.src&&(i.obj.elements[h].properties.src=window.moblieViewImgBg?window.moblieViewImgBg+i.obj.elements[h].properties.src:i.obj.elements[h].properties.src);n(i.obj,e,t)}});else{o=o.replace(/id=16060/,"id="+t.obj.id);var p=JSON.parse(o);p.num=t.list.length+1,t.obj.cover=window.moblieViewImgBg?window.moblieViewImgBg+t.obj.cover:t.obj.cover,"group1/M00/00/0D/wKj5L1aog9iANhl8AAAdI0Feqt0377.jpg"!=t.obj.cover&&(p.elements[2]=JSON.parse(s),p.elements[2].properties.src=t.obj.cover.replace("/strip","")),p.elements[1].content=p.elements[1].content.replace(/场景名称/,t.obj.name),n(p,e,t)}}function eqDefaultBottomLabel(t,e){var i='{"id":480292,"pageId":136042,"sceneId":16060,"num":1,"type":"2","isInput":0,"title":null,"content":"<div style=\\"text-align: center;transform: none;-webkit-animation: fadeIn 2s ease 1s both;-webkit-animation-play-state: initial;\\"><a href=\\"'+PREFIX_S1_URL+"eqs/link?id=16060&amp;url="+encodeURIComponent(redirectUrl)+'\\" target=\\"_blank\\" style=\\"font-size: x-small;display:block;line-height: 10px;\\" data-event=\\"1120202\\"><font color=\\"#ffffff\\">'+companyName+'</font></a></div>","status":1,"css":{"zIndex":"1000","height":"20","width":"129","left":"97px","top":"418px","backgroundColor":"rgba(0,0,0,0.6)","borderRadius":"20px"},"properties":{"anim":{"type":0,"direction":0,"duration":2,"delay":"0"}}}';ad=2;var n;i=i.replace(/id=16060/,"id="+t.obj.id),n=e[e.length-1].elements,e[e.length-1].properties&&e[e.length-1].properties.longPage&&(i=i.replace("418px",486*e[e.length-1].properties.longPage-68+"px")),e[e.length-1].elements||(n=e[e.length-1].elements=[]),n.push(JSON.parse(i)),parsePage(e,t)}function eqCustomBottomLabel(t,e){ad=2,$.ajax({type:"GET",url:PREFIX_S2_URL+"eqs/trailer/"+t.obj.property.bottomLabel.id,crossDomain:!0,success:function(i){if(!i.obj)return void eqDefaultBottomLabel(t,e);var n=i.obj.elements;if(e[e.length-1].properties&&e[e.length-1].properties.longPage)for(var o=e[e.length-1].properties.longPage-1,s=0;s<n.length;s++)n[s].css.top+=486*o;var s=0;for(n.length;s<n.length;s++){var a=n[s];if(a.sceneId=t.obj.id,a.pageId=e[e.length-1].id,t.obj.property.bottomLabel.name&&t.obj.property.bottomLabel.url&&"http://"!=t.obj.property.bottomLabel.url)2==a.type&&a.content.indexOf("EQXIU.COM科技公司")>0&&(a.content=a.content.replace(/EQXIU.COM科技公司/,'<a href="'+PREFIX_S1_URL+"eqs/link?id="+t.obj.id+"&amp;url="+encodeURIComponent(t.obj.property.bottomLabel.url)+'" target=_blank data-event="1120203">'+t.obj.property.bottomLabel.name+"</a>"));else if(t.obj.property.bottomLabel.name)2==a.type&&a.content.indexOf("EQXIU.COM科技公司")>0&&(a.content=a.content.replace(/EQXIU.COM科技公司/,t.obj.property.bottomLabel.name));else if(/易企秀技术支持/.test(a.content)){a.content='<div style="text-align: center;">'+a.content+"</div>";var r={zIndex:"1000",height:"33",width:"129",left:"97px"};$.extend(a.css,r)}else 2==a.type&&a.content&&(a.content="");a.css.zIndex=200,t.list[t.list.length-1].elements||(t.list[t.list.length-1].elements=[]),t.list[t.list.length-1].elements.push(a),customLastPage=!0}parsePage(e,t)}})}function eqHideAll(t,e){ad=0,parsePage(e,t)}function parsePage(t,e){var i=e.map;i&&i.wxComponent&&$.each(i.wxComponent,function(e,i){$.each(t,function(t,i){i.elements&&i.elements.length&&$.each(i.elements,function(t,i){e==i.id&&(i.properties.wxSrc=!0)})})}),window.eqxiuSvg?window.eqxiuSvg.SYMBOLS||(window.eqxiuSvg.SYMBOLS={}):window.eqxiuSvg={SYMBOLS:{}};for(var n=[],o=!1,s=!1,a={bgAudio:e.obj.bgAudio},r=[],l=1;l<=t.length;l++)t[l-1].elements&&t[l-1].elements.length&&$.each(t[l-1].elements,function(t,e){if("h"==e.type&&e.properties.type&&e.properties.type.indexOf("symbols")>=0){s=!0;var i=e.properties.type.replace(/^symbols\-/,""),n=CLIENT_CDN+"view/js/shape/"+i+".js";r.push({url:n,type:"js"})}});var c=0;s&&(resources.load(r),resources.onReady(function(){if(c++,1==c){for(var i=1;i<=t.length;i++){var s=i;if(t[s-1].properties&&!$.isEmptyObject(t[s-1].properties)?t[s-1].properties.image||t[s-1].properties.scratch?scriptLoaded.scratch?addScratchEffect(t,s):!function(e){$.getScript(CLIENT_CDN+"common/js/scratch_effect.js",function(i,n,o){scriptLoaded.scratch=!0,addScratchEffect(a,t,e)})}(s):t[s-1].properties.finger?(n.push({num:s,finger:t[s-1].properties.finger}),o||(o=!0,$.getScript(CLIENT_CDN+"common/js/lock_effect.js",function(e,i,o){lockEffect(a,t,n,$(".m-img").width(),$(".m-img").height())}))):t[s-1].properties.fallingObject?scriptLoaded.fallingObject?fallingObject(t,s):!function(e){$.getScript(CLIENT_CDN+"common/js/falling_object.js",function(i,n,o){scriptLoaded.fallingObject=!0,fallingObject(t,e),1==e&&eqShow.playVideo(a)})}(s):t[s-1].properties.effect?!function(e){resources.load(window.eqx[t[e-1].properties.effect.name].config.resources),resources.onReady(function(){window[t[e-1].properties.effect.name].doEffect(a,e,t,renderPage)})}(s):renderPage(eqShow,s,t):(renderPage(eqShow,s,t),1==s&&eqShow.playVideo(a)),i==t.length){eqxiu.app($(".nr"),e.obj.pageMode,t,e);addEnabledClassToPageCtrl(e);var r=eqShow.getQueryString("toPage");r&&eqxiu.pageScroll(r,!0)}}addReportToLastPage(t,e)}}));for(var d=1;d<=t.length;d++){if($('<section class="main-page"><div class="m-img" id="page'+d+'"></div></section>').appendTo(".nr"),10==pageMode&&($("#page"+d).parent(".main-page").wrap('<div class="flip-mask" id="flip'+d+'"></div>'),$(".main-page").css({width:$(".nr").width()+"px",height:$(".nr").height()+"px"})),t.length>1&&14!=pageMode&&!e.obj.property.forbidHandFlip&&(0==pageMode||1==pageMode||2==pageMode||6==pageMode||7==pageMode||8==pageMode||11==pageMode||12==pageMode||13==pageMode||14==pageMode?$('<section class="u-arrow-bottom"><div class="pre-wrap"><div class="pre-box1"><div class="pre1"></div></div><div class="pre-box2"><div class="pre2"></div></div></div></section>').appendTo("#page"+d):3!=pageMode&&4!=pageMode&&5!=pageMode&&9!=pageMode&&10!=pageMode||$('<section class="u-arrow-right"><div class="pre-wrap-right"><div class="pre-box3"><div class="pre3"></div></div><div class="pre-box4"><div class="pre4"></div></div></div></section>').appendTo("#page"+d)),1==d&&($(".loading").hide(),$(".main-page").eq(0).addClass("z-current"),t[d-1].elements&&t[d-1].elements.length&&$.each(t[d-1].elements,function(t,i){"d"==i.type&&eqShow.getShowCount(e.obj.id)})),!s&&(t[d-1].properties&&!$.isEmptyObject(t[d-1].properties)?t[d-1].properties.image||t[d-1].properties.scratch?scriptLoaded.scratch?addScratchEffect(t,d):!function(e){$.getScript(CLIENT_CDN+"common/js/scratch_effect.js",function(i,n,o){scriptLoaded.scratch=!0,addScratchEffect(a,t,e)})}(d):t[d-1].properties.finger?(n.push({num:d,finger:t[d-1].properties.finger}),o||(o=!0,$.getScript(CLIENT_CDN+"common/js/lock_effect.js",function(e,i,o){lockEffect(a,t,n,$(".m-img").width(),$(".m-img").height())}))):t[d-1].properties.fallingObject?scriptLoaded.fallingObject?t[d-1].effObj=fallingObject(t,d):!function(e){$.getScript(CLIENT_CDN+"common/js/falling_object.js",function(i,n,o){scriptLoaded.fallingObject=!0,t[e-1].effObj=fallingObject(t,e),1==e&&eqShow.playVideo(a)})}(d):t[d-1].properties.effect?!function(e){resources.load(window.eqx[t[e-1].properties.effect.name].config.resources),resources.onReady(function(){t[e-1].effObj=window[t[e-1].properties.effect.name].doEffect(a,e,t,renderPage)})}(d):(renderPage(eqShow,d,t),1==d&&eqShow.playVideo(a)):(renderPage(eqShow,d,t),1==d&&eqShow.playVideo(a)),d==t.length)){eqxiu.app($(".nr"),e.obj.pageMode,t,e);addEnabledClassToPageCtrl(e);var p=eqShow.getQueryString("toPage");p&&eqxiu.pageScroll(p,!0)}if(d==t.length&&(isMobile||$("img").on("dragstart",function(t){t.preventDefault()}),!preview)){var h=PREFIX_S1_URL+"eqs/pv/"+e.obj.id;param&&(h+="?1=1",h+=/\?.*/.test(param)?"&"+param.substring(1):/\&.*/.test(param)?param:"&"+param),h+=(/\?/.test(h)?"&":"?")+"ad="+ad,$.ajax({type:"GET",url:h,xhrFields:{withCredentials:!0},crossDomain:!0})}}s||addReportToLastPage(t,e)}function addReportToLastPage(pages,data){if(data.obj.createTime>14165028e5){if(100!=data.obj.bizType&&!data.obj.property.hideEqAd&&1==data.obj.property.eqAdType)return void addReport(pages.length,data.obj.id);100==data.obj.bizType||data.obj.property.eqAdType||data.obj.property.hideEqAd||data.obj.property.isAdvancedUser||addReport(pages.length,data.obj.id)}if(100==data.obj.bizType){var $eqxShareContainer=$("#eqx-share-container");with($eqxShareContainer.length&&($eqxShareContainer.append($('<div class="eqx-share">\n    <a class="eqx-share-btn btn-facebook"><span class="eqx-share-icon icon-facebook"></span></a>\n    <a class="eqx-share-btn btn-twitter"><span class="eqx-share-icon icon-twitter"></span></a>\n    <a class="eqx-share-btn btn-plus"><span class="eqx-share-icon icon-google_plus"></span></a>\n    <a class="eqx-share-btn btn-linkedin"><span class="eqx-share-icon icon-linkedin"></span></a>\n    <a class="eqx-share-btn btn-pinterest"><span class="eqx-share-icon icon-pinterest"></span></a>\n    <a class="addthis_sharing_toolbox"></a>\n</div>')),$(".eqx-share-btn").ShareLink({title:data.obj.name,text:data.obj.description,image:PREFIX_FILE_HOST+data.obj.cover,url:window.location.href.split("#")[0],class_prefix:"btn-"})),document)(0)[(getElementsByTagName("head")[0]||body).appendChild(createElement("script")).src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-55c029461a7d08e5"]}}function addEnabledClassToPageCtrl(t){var e,i,n=t.obj.pageMode,o=t.obj.property.triggerLoop;0==n||1==n||2==n||6==n||7==n||8==n||11==n||12==n?e=!0:3!=n&&4!=n&&5!=n&&10!=n||(i=!0),setTimeout(function(){e?($(".ctrl_panel_dir .ctrl-up").addClass("enabled"),o&&$(".ctrl_panel_dir .ctrl-down").addClass("enabled")):i&&($(".ctrl_panel_dir .ctrl-left").addClass("enabled"),o&&$(".ctrl_panel_dir .ctrl-right").addClass("enabled"))},0)}function addPreviewFooter(){var t=eqShow.getUrlParameter("id"),e=PREFIX_HOST+"/mobile/fillHome.html?edit=true&id="+t;eqShow.getUrlParameter("preview")&&$('<div id="shareFooter" style="background-color: rgba(51, 51, 51, 0.4);border-top: 2px solid rgba(8, 161, 239, 0.4);padding: 10px;position: fixed;bottom: 0;left: 0;right: 0;overflow: scroll;z-index: 10000;height:40px"><div  style="float: left;margin-top: 12px;margin-left: 12px;color:#FFFFFF"><laber ><a style="color:#FFFFFF" href="'+e+'">编辑</a></laber></div><div style="float: right;margin-right: 15px;margin-top:2px;"><button style="width: 80px;height: 32px;background-color: #44cb83;border: 0px;border-radius: 2px;color: #FFFFFF;"><a style="color:#FFFFFF" onclick="wapTitleSet();">分享</a></button></div></div>').appendTo(".nr")}var redirectUrl,companyName,pageMode,preview,param,ad,customLastPage=!1,isMobile=mobilecheck(),scriptLoaded=[],flipTime=3e3,activityPagePromise=null;window.appendLastPage=function(t,e,i,n,o,s){if(pageMode=i,preview=n,param=o,ad=s,100==t.obj.bizType?(redirectUrl="https://itunes.apple.com/us/app/easyshow-free-h5-sence-slides/id987351120?mt=8",companyName="Hypefolio"):(redirectUrl="http://eqxiu.com",companyName="易企秀技术支持"),addPreviewFooter(),appendActivityPage(t,e),t.obj.createTime>14165028e5)if(100==t.obj.bizType)eqFreepage(t,e);else if(t.obj.property.hideEqAd)eqHideAll(t,e);else{if(t.obj.property&&t.obj.property.eqAdType)switch(t.obj.property.eqAdType){case 1:return void eqFreepage(t,e);case 2:return void eqDefaultBottomLabel(t,e);case 3:return void eqCustomBottomLabel(t,e)}t.obj.property.isAdvancedUser?t.obj.property&&t.obj.property.bottomLabel&&t.obj.property.bottomLabel.id?eqCustomBottomLabel(t,e):eqDefaultBottomLabel(t,e):eqFreepage(t,e)}else eqHideAll(t,e)},isMobile&&$(".nr").css({width:"100%",height:"100%"}),window.wapTitleSet=function(){$.get(PREFIX_HOST+"/view/share.html",function(t){$("#wapShareSet").show(),$("#wapShareSet").html(t),$("#shareFooter").hide(),wapShare.init(scene)})}}(window,jQuery),function(window,$){function isSample(){$("#view_reg").after('<div id="sample_btn">使用该样例</div>')}function getWechatAuth(t,e){window.weChatUser={},window.wxCompData={};var i=JSON.parse(window.scene.property);if(!isWeixin()||!i.wxAuth)return void(t?completeLoad(e):getSceneData());var n=PREFIX_S1_URL+"eqs/wx/user/cache";$.ajax({type:"GET",url:n,xhrFields:{withCredentials:!0},success:function(i){if(200===i.code)if(i.obj)window.weChatUser=i.obj,t?(replaceNameAndHeader(e,i.obj),completeLoad(e,!0)):getSceneData(i.obj);else{var n="";eqShow.getQueryString("userKey")&&(n="?userKey="+eqShow.getQueryString("userKey")),window.location.href="https://open.weixin.qq.com/connect/oauth2/authorize?appid="+APPID_WX+"&redirect_uri="+encodeURIComponent(PREFIX_S1_URL+"eqs/wx/user/info")+"&response_type=code&scope=snsapi_userinfo&state="+encodeURIComponent("http://"+hostDomain+"/s/"+window.scene.code+n)+"#wechat_redirect"}else alert("error")},error:function(t){},crossDomain:!0})}function getSceneData(t){var e=window.viewData;if(e)return e.obj=window.scene,replaceNameAndHeader(e,t),void completeLoad(e,!1);window.isStatic&&window.location.href.indexOf(VIP_HOST)>=0&&(vipService=!0);var i=getRequestUrl(),n={type:"GET",url:i,crossDomain:!0};window.viewOverflow||vipService||(n.xhrFields={withCredentials:!0}),$.ajax(n).done(function(e){e.obj=e.obj||window.scene,replaceNameAndHeader(e,t),completeLoad(e,!1)})}function replaceNameAndHeader(t,e){isWeixin()&&t.list&&t.list.length&&$.each(t.list,function(i,n){n.elements&&n.elements.length&&$.each(n.elements,function(i,n){"201"==n.type&&("own"==n.properties.type&&e&&(n.content=e.nickname),"share"==n.properties.type&&t.map&&t.map.wxComponent&&t.map.wxComponent.shareUserName&&(n.content=t.map.wxComponent.shareUserName)),"401"==n.type&&("own"==n.properties.type&&e&&(n.properties.src=e.headimgurl,delete n.properties.imgStyle),"share"==n.properties.type&&t.map&&t.map.wxComponent&&t.map.wxComponent.shareUserHeader&&(n.properties.src=t.map.wxComponent.shareUserHeader,delete n.properties.imgStyle))})})}function completeLoad(t,e){t.map&&t.map.wxComponent&&(window.wxCompData=t.map.wxComponent),getCounterValues(t);for(var i=!1,n=0;n<t.list.length;n++){var o=t.list[n];if(o.elements)for(var s=0;s<o.elements.length;s++)if(o.elements[s].type+""=="m"){i=!0;break}}if(i){eqShow.parseStart=function(){$(document).trigger("parseStart")},$(document).on("parseStart",function(){parseJson(t,e)});var a=document.createElement("script");a.type="text/javascript",a.src="http://map.qq.com/api/js?v=2.exp&callback=eqShow.parseStart",document.body.appendChild(a)}else parseJson(t,e)}function getCounterValues(t){var e={sceneId:t.obj.id,fieldIds:""};$.each(t.list,function(t,i){i.elements&&$.each(i.elements,function(t,i){"i"===i.type&&(e.fieldIds+=(e.fieldIds?",":"")+i.id)})}),e.fieldIds&&(window.eqShow.counterValues=$.ajax({type:"GET",url:PREFIX_S1_URL+"eqs/scene/counter/values",data:$.param(e),xhrFields:{withCredentials:!0},error:function(t){alert("Connection error")},crossDomain:!0}))}function getRequestUrl(){window.isStatic&&window.location.href.indexOf(VIP_HOST)>=0&&(vipService=!0);var t;if(preview)t=isNewPreviewLocation?PREFIX_URL+"m/scene/preview/"+sceneId+".data":PREFIX_URL+"m/scene/preview/"+sceneId,branchid&&(t+=(/\?/.test(t)?"&":"?")+"user="+branchid);else if(mobileview)t=PREFIX_URL+"event/9100?p1="+sceneId;else if(window.scene&&window.scene.id)if(window.isCheck)t=MAX_SERVER_HOST+"m/eqs/view/page/"+window.scene.id;else{var e=window.viewOverflow||vipService?PREFIX_S2_URL:PREFIX_S1_URL,i=eqShow.getQueryString("userKey"),n=eqShow.getQueryString("cache");t=e+"eqs/page/"+window.scene.id,null!=i&&i.toString().length>1&&(t+=(/\?/.test(t)?"&":"?")+"userKey="+i),null!=n&&n.toString().length>1&&(t+=(/\?/.test(t)?"&":"?")+"cache="+n)}else t=PREFIX_S1_URL+"eqs/s/"+sceneId;return window.viewOverflow||vipService||(t+=(/\?/.test(t)?"&":"?")+"time="+(new Date).getTime()),t}function bindShare(data){if(mobilecheck()||tabletCheck())isWeixin()&&wechatConfig.configWeixin(data);else if(100!=data.obj.bizType)with(window._bd_share_config={common:{bdSnsKey:{},bdText:data.obj.name,bdSign:"on",bdMini:"2",bdMiniList:!1,bdDesc:data.obj.description?data.obj.description:"",bdUrl:PREFIX_HOST+"/s/"+sceneId,bdPic:PREFIX_FILE_HOST+data.obj.cover,bdStyle:"0",bdSize:"32"},share:{}},document)(0)[(getElementsByTagName("head")[0]||body).appendChild(createElement("script")).src="http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion="+~(-new Date/36e5)]}function parseJson(t,e){isNewPreviewLocation||window.scene||(document.title=t.obj.name,$("#metaDescription").attr("content",t.obj.name+", "+t.obj.description+", 由易企秀免费移动场景应用自营销管家提供技术支持"),$(".scene_title").text(t.obj.name));var i=t.obj.cover;if(isWeixin()){var n=/.svg/;n.test(i)||(i=eqShow.qiniuZoom({css:{width:140,height:140}},i)),$("#shareImage").find("img").attr("src",PREFIX_FILE_HOST+i)}bindShare(t),pageMode=t.obj.pageMode;var o=[];return t.obj.property&&(t.obj.property=JSON.parse(t.obj.property)||{}),t.obj.bgAudio&&"string"==typeof t.obj.bgAudio&&(t.obj.bgAudio=JSON.parse(t.obj.bgAudio)||null),o=t.list,o.length<=0?(alert("此场景不存在!"),void(window.location.href="http://eqxiu.com")):void appendLastPage(t,o,pageMode,preview,param,ad)}var url,ad=0,customLastPage=!1,page=1,hostDomain=eqShow.getDomain(window.location.href),eqxDomain=eqShow.getDomain(PREFIX_HOST),h5Domain=eqShow.getDomain(PREFIX_SHOW_HOST),preview,mobileview,pageMode,branchid,scriptLoaded={},num,a,timeout,x1,y1,x2,y2,startX,startY,imageHeight,imageWidth,numImages=0,loadedImages=0,area=0,nums=0;$.ajaxSetup({cache:!0});var vipService,isNewPreviewLocation=/[http|https]:\/\/.*\/m\/scene\/preview\//.test(window.location.href);url=/[http|https]:\/\/.*\/s\//.test(window.location.href)?window.location.href.split("/s/")[1]:isNewPreviewLocation?window.location.href.split("/m/scene/preview/")[1]:window.location.href.split("?sceneId=")[1],window.viewData&&(url=scene.code);var sceneId=url.split("#")[0].split("&")[0].split("?")[0];isNewPreviewLocation&&(sceneId=sceneId.substring(0,sceneId.indexOf(".html")));var param=url.split(sceneId)[1];if((param.indexOf("preview=preview")>0||window.preview||isNewPreviewLocation)&&(preview=!0),param.indexOf("branchid=")>0&&(branchid=param.substring(param.indexOf("branchid=")+9)),param.indexOf("mobileview=mobileview")>0&&(mobileview=!0),!(mobilecheck()||tabletCheck()&&window==window.top)){var getBg=function(){$.ajax({type:"GET",url:PREFIX_S2_URL+"eqs/image/scene/preview",crossDomain:!0}).then(function(t){t?$("body").css("backgroundImage","url("+t+")"):$("body").css("backgroundImage","url(/view/images/previewbg_spring.jpg)")},function(){$("body").css("backgroundImage","url(/view/images/previewbg_spring.jpg)")})};window.addElmentsForPc=function(t){var e=document.getElementsByTagName("head")[0],i=document.createElement("link");i.href=CLIENT_CDN+"common/css/pcviewer.css",i.rel="stylesheet",e.appendChild(i),window!=window.top?$("body").css("background-image","none"):(getBg(),$.getScript(CLIENT_CDN+"common/js/qrcode.js",function(){$.getScript(CLIENT_CDN+"common/js/jquery.qrcode.js",function(){window.scene&&100==window.scene.bizType?($("#con").before('<div id="code" style="margin-top: -200px;">\n    <div style="font-size: 14px;">Share your folio on social network!</div>\n    <div class="eqx-share">\n        <a class="eqx-share-btn btn-facebook"><span class="eqx-share-icon icon-facebook"></span></a>\n        <a class="eqx-share-btn btn-twitter"><span class="eqx-share-icon icon-twitter"></span></a>\n        <a class="eqx-share-btn btn-plus"><span class="eqx-share-icon icon-google_plus"></span></a>\n        <a class="eqx-share-btn btn-linkedin"><span class="eqx-share-icon icon-linkedin"></span></a>\n        <a class="eqx-share-btn btn-pinterest"><span class="eqx-share-icon icon-pinterest"></span></a>\n        <a class="addthis_sharing_toolbox"></a>\n    </div>\n    <div id="view_reg" style="border: none;margin-bottom: 26px;"><span>\n        <a target="_blank" href="http://eqxiu.com" style="color: #fff;border-bottom-color: #fff;font-size: 14px;">So Cool, Let me try it!</a>\n    </span></div>\n    <div style="text-align: center;background:#fff;padding: 10px;" id="codeImg"/> \n    <div style="text-align: center;font-size: 14px;">Scan the QR Code!</div>\n    <div id="support">Powered BY <a target="_blank" href="http://eqxiu.com"><img id="logoSmall" style="width: 64px;vertical-align: bottom;" src="'+CLIENT_CDN+'view/images/hypefolio-logo.png"/></a></div></div>'),$(".eqx-share-btn").ShareLink({title:window.scene.name,text:window.scene.description,image:PREFIX_FILE_HOST+window.scene.cover,url:window.location.href.split("#")[0],class_prefix:"btn-"})):($("#con").before('<div id="code"><div style="margin-bottom:15px;"><div class="app" style="position:relative;"><a id="downApp" styly="font-size:12px;margin-top:-4px;">下载APP</a><div id="downAppView" class="zoomIn-change"><h3><a id="close" style="cursor:pointer">X</a>易企秀APP</h3><div id="downCode"></div><p style="padding-bottom:20px;padding-top:10px;">一键生成H5，随时随地查数据</p></div></div>扫一扫，分享给朋友！</div><div style="text-align: center;background:#fff;padding: 10px;" id="codeImg"/><div id="view_share" class="bdsharebuttonbox"><a href="#" class="bds_more" data-cmd="more"></a><a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"></a><a href="#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"></a><a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"></a><a href="#" class="bds_sqq" data-cmd="sqq" title="分享到QQ好友"></a><a href="#" class="bds_douban" data-cmd="douban" title="分享到豆瓣网"></a></div><div id="view_reg">这么漂亮的场景&nbsp;→<span><a target="_blank" href="http://eqxiu.com">我也来制作</a></span></div><div id="support">技术支持 BY <a target="_blank" href="http://eqxiu.com"><img id="logoSmall" src="'+CLIENT_CDN+'view/images/bg_small.png"/></a></div></div>'),
window.scene&&1===window.scene.isTemplate&&isSample());var e;e=window.location.href.indexOf(eqxDomain)>=0||window.location.href.indexOf(h5Domain)>=0?1==scene.userType?PREFIX_HOST_ARRAY[Math.floor(11*Math.random())%11]+"/":2!=scene.userType&&21!=scene.userType||scene.memberType?3==scene.userType||4==scene.userType?PREFIX_SERVICE_HOST+"/":99==scene.userType?PREFIX_SHOW_HOST+"/":scene.expiryTime&&new Date(scene.expiryTime).getTime()<Date.now?PREFIX_HOST_ARRAY[Math.floor(11*Math.random())%11]+"/":PREFIX_COMPANY_HOST_ARRAY[Math.floor(2*Math.random())%2]+"/":PREFIX_HOST_ARRAY[Math.floor(11*Math.random())%11]+"/":"http://"+hostDomain+"/",window.isStatic&&(e=VIP_HOST),$("#downApp").click(function(){$("#downAppView").css("display","block")}),$("#close").click(function(){$("#downAppView").css("display","none")}),$("#downCode").qrcode({render:"canvas",width:200,height:200,text:"http://a.app.qq.com/o/simple.jsp?pkgname=cn.knet.eqxiu"}),$("#codeImg").qrcode({render:"canvas",width:200,height:200,text:e+"s/"+t+"?eqrcode=1"})})}),$(".p-index").wrap('<div class = "phone_panel"></div>'),$('<div class = "ctrl_panel"></div>').appendTo($(".phone_panel")),setTimeout(function(){window.scene&&100==window.scene.bizType?($(".phone_menubar").addClass("hypefolio"),$('<a id = "pre_page" type = "button" class = "pre_btn btn" onclick = "eqxiu.prePage()">\n    <span style="transform: rotateZ(90deg);display: inline-block;font-size: 36px;">&lt;</span>\n</a>').prependTo($(".ctrl_panel")),$('<a id = "next_page" type = "button" class = "next_btn btn" onclick = "eqxiu.nextPage()">\n    <span style="transform: rotateZ(90deg);display: inline-block;font-size: 36px;margin-top: 5px;">&gt;</span>\n</a>').appendTo($(".ctrl_panel"))):($('<a id = "pre_page" type = "button" class = "pre_btn btn" onclick = "eqxiu.prePage()">上一页</a>').prependTo($(".ctrl_panel")),$('<a id = "next_page" type = "button" class = "next_btn btn" onclick = "eqxiu.nextPage()">下一页</a>').appendTo($(".ctrl_panel")))},100))}}$("body").on("click","#sample_btn",function(){window.open(PREFIX_HOST+"/scene?useTplId="+scene.id)}),window.moblieViewImgBg,jQuery.support.cors=!0,eqShow.bootstrap=function(){!window.scene||"2"!==window.scene.userType&&"21"!==window.scene.userType||(PREFIX_URL=PREFIX_URL1,PREFIX_S1_URL=PREFIX_S1_URL1),window.viewData?(window.moblieViewImgBg=PREFIX_FILE_HOST,PREFIX_FILE_HOST=""):PREFIX_FILE_HOST=eqShow.getImagesResourceHost(scene.userType,scene.memberType),getWechatAuth(),eqShow.forExemplarReview()||mobilecheck()||tabletCheck()&&window==window.top||(addElmentsForPc(scene.code),$("title").text(window.scene.name+" | H5微场景制作-易企秀(eqxiu.com)"))},eqShow.bootstrapWithPassword=function(){function t(){$("#verifyTip").addClass("shake").one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){$(this).removeClass("shake"),i()})}function e(e){$("#loading").show(),$.ajax({type:"GET",url:a,data:$.param({password:e}),xhrFields:{withCredentials:!0},success:function(e){200===e.code?(e.obj=e.obj||window.scene,$("#verifyCode").remove(),getWechatAuth(!0,e)):($("#loading").hide(),$("#verifyCode").show(),t())},crossDomain:!0})}function i(){$(".password-indicator li").each(function(t,e){t<g.length?$(e).addClass("active"):$(e).removeClass("active")})}function n(t){var n=$(t.target);n.addClass("active"),g+=n.text(),i(),4==g.length&&(e(g),g=""),setTimeout(function(){n.removeClass("active")},100)}function o(t){g="",i()}function s(t){g&&(g=g.substring(0,g.length-1),i())}!window.scene||"2"!==window.scene.userType&&"21"!==window.scene.userType||(PREFIX_URL=PREFIX_URL1,PREFIX_S1_URL=PREFIX_S1_URL1),eqShow.forExemplarReview()||mobilecheck()||tabletCheck()&&window==window.top||addElmentsForPc(scene.code);var a=getRequestUrl();if($("#loading").hide(),$("#verifyCode").show(),window.scene){var r={name:window.scene.name,cover:window.scene.cover,property:window.scene.property,description:window.scene.description};bindShare({obj:r})}var l=mobilecheck(),c=tabletCheck();if(!l||l&&/Android (\d+\.\d+)/.test(navigator.userAgent)?($(".password-numbers>span").on("click",n),$("#btnClear").on("click",o),$("#btnCancel").on("click",s)):($(".password-numbers>span").on("touchstart",n),$("#btnClear").on("touchstart",o),$("#btnCancel").on("touchstart",s)),l||c){var d,p=$(".container"),h=p.width(),u=p.height();d=Math.floor(10*Math.min(document.documentElement.clientHeight/u,document.documentElement.clientWidth/h))/10,p.css("transform","scale("+d+", "+d+")")}var g=""}}(window,jQuery),$(".main").show(),$.easing.jswing=$.easing.swing,$.extend($.easing,{def:"easeOutQuad",swing:function(t,e,i,n,o){return $.easing[$.easing.def](t,e,i,n,o)},easeInQuad:function(t,e,i,n,o){return n*(e/=o)*e+i},easeOutQuad:function(t,e,i,n,o){return-n*(e/=o)*(e-2)+i},easeInOutQuad:function(t,e,i,n,o){return(e/=o/2)<1?n/2*e*e+i:-n/2*(--e*(e-2)-1)+i},easeInCubic:function(t,e,i,n,o){return n*(e/=o)*e*e+i},easeOutCubic:function(t,e,i,n,o){return n*((e=e/o-1)*e*e+1)+i},easeInOutCubic:function(t,e,i,n,o){return(e/=o/2)<1?n/2*e*e*e+i:n/2*((e-=2)*e*e+2)+i},easeInQuart:function(t,e,i,n,o){return n*(e/=o)*e*e*e+i},easeOutQuart:function(t,e,i,n,o){return-n*((e=e/o-1)*e*e*e-1)+i},easeInOutQuart:function(t,e,i,n,o){return(e/=o/2)<1?n/2*e*e*e*e+i:-n/2*((e-=2)*e*e*e-2)+i},easeInQuint:function(t,e,i,n,o){return n*(e/=o)*e*e*e*e+i},easeOutQuint:function(t,e,i,n,o){return n*((e=e/o-1)*e*e*e*e+1)+i},easeInOutQuint:function(t,e,i,n,o){return(e/=o/2)<1?n/2*e*e*e*e*e+i:n/2*((e-=2)*e*e*e*e+2)+i},easeInSine:function(t,e,i,n,o){return-n*Math.cos(e/o*(Math.PI/2))+n+i},easeOutSine:function(t,e,i,n,o){return n*Math.sin(e/o*(Math.PI/2))+i},easeInOutSine:function(t,e,i,n,o){return-n/2*(Math.cos(Math.PI*e/o)-1)+i},easeInExpo:function(t,e,i,n,o){return 0==e?i:n*Math.pow(2,10*(e/o-1))+i},easeOutExpo:function(t,e,i,n,o){return e==o?i+n:n*(-Math.pow(2,-10*e/o)+1)+i},easeInOutExpo:function(t,e,i,n,o){return 0==e?i:e==o?i+n:(e/=o/2)<1?n/2*Math.pow(2,10*(e-1))+i:n/2*(-Math.pow(2,-10*--e)+2)+i},easeInCirc:function(t,e,i,n,o){return-n*(Math.sqrt(1-(e/=o)*e)-1)+i},easeOutCirc:function(t,e,i,n,o){return n*Math.sqrt(1-(e=e/o-1)*e)+i},easeInOutCirc:function(t,e,i,n,o){return(e/=o/2)<1?-n/2*(Math.sqrt(1-e*e)-1)+i:n/2*(Math.sqrt(1-(e-=2)*e)+1)+i},easeInElastic:function(t,e,i,n,o){var s=1.70158,a=0,r=n;if(0==e)return i;if(1==(e/=o))return i+n;if(a||(a=.3*o),r<Math.abs(n)){r=n;var s=a/4}else var s=a/(2*Math.PI)*Math.asin(n/r);return-(r*Math.pow(2,10*(e-=1))*Math.sin((e*o-s)*(2*Math.PI)/a))+i},easeOutElastic:function(t,e,i,n,o){var s=1.70158,a=0,r=n;if(0==e)return i;if(1==(e/=o))return i+n;if(a||(a=.3*o),r<Math.abs(n)){r=n;var s=a/4}else var s=a/(2*Math.PI)*Math.asin(n/r);return r*Math.pow(2,-10*e)*Math.sin((e*o-s)*(2*Math.PI)/a)+n+i},easeInOutElastic:function(t,e,i,n,o){var s=1.70158,a=0,r=n;if(0==e)return i;if(2==(e/=o/2))return i+n;if(a||(a=o*(.3*1.5)),r<Math.abs(n)){r=n;var s=a/4}else var s=a/(2*Math.PI)*Math.asin(n/r);return e<1?-.5*(r*Math.pow(2,10*(e-=1))*Math.sin((e*o-s)*(2*Math.PI)/a))+i:r*Math.pow(2,-10*(e-=1))*Math.sin((e*o-s)*(2*Math.PI)/a)*.5+n+i},easeInBack:function(t,e,i,n,o,s){return void 0==s&&(s=1.70158),n*(e/=o)*e*((s+1)*e-s)+i},easeOutBack:function(t,e,i,n,o,s){return void 0==s&&(s=1.70158),n*((e=e/o-1)*e*((s+1)*e+s)+1)+i},easeInOutBack:function(t,e,i,n,o,s){return void 0==s&&(s=1.70158),(e/=o/2)<1?n/2*(e*e*(((s*=1.525)+1)*e-s))+i:n/2*((e-=2)*e*(((s*=1.525)+1)*e+s)+2)+i},easeInBounce:function(t,e,i,n,o){return n-$.easing.easeOutBounce(t,o-e,0,n,o)+i},easeOutBounce:function(t,e,i,n,o){return(e/=o)<1/2.75?n*(7.5625*e*e)+i:e<2/2.75?n*(7.5625*(e-=1.5/2.75)*e+.75)+i:e<2.5/2.75?n*(7.5625*(e-=2.25/2.75)*e+.9375)+i:n*(7.5625*(e-=2.625/2.75)*e+.984375)+i},easeInOutBounce:function(t,e,i,n,o){return e<o/2?.5*$.easing.easeInBounce(t,2*e,0,n,o)+i:.5*$.easing.easeOutBounce(t,2*e-o,0,n,o)+.5*n+i}}),function(t,e){function i(){var t=TRACK_HOST+"c.gif?",e=window,i=e.screen,o=i.availWidth+"x"+i.availHeight,s=encodeURIComponent,a=document;n=e.navigator;var r={lag:n.userLanguage||n.language};typeof scene!==scene&&(r.event_description=scene.description,r.event_id=scene.id,r.scene_type=scene.type,r.creator_id=scene.userId,r.creator_type=scene.userType);var l="action_name="+s(a.title)+"&idsite=2&url="+s(a.location)+"&urlref="+s(a.referrer)+"&res="+o+"&data="+s(JSON.stringify(r));l+=1,l+="&ct="+(new Date).getTime(),t+=l;var c=a.createElement("img");c.setAttribute("src",t),c.setAttribute("height","0"),c.setAttribute("width","0"),a.body.appendChild(c)}t.getScript(TRACK_HOST+"d.js?pid=2&v=1",function(){function t(){window.scene?i():e=setTimeout(t)}if(window.scene)i();else var e=setTimeout(t,100)}),t.getScript(TRACK_HOST+"r.js?pid=3&v=1")}(jQuery,window),function(t,e){t.wapShare=function(){function i(t){c=t,c.property&&(c.property=JSON.stringify(c.property)),p=t.code;var i=PREFIX_HOST+"/s/"+p;e("#sceneLink").text(i)}function n(){var t=e("#sceneName").val();if(null!==t||void 0!==t){c.name=t;var i={name:c.name,id:c.id,status:1,code:c.code,cover:c.cover};e.ajax({type:"POST",url:PREFIX_URL+"m/scene/saveSettings",contentType:"text/plain; charset=UTF-8",data:JSON.stringify(i),xhrFields:{withCredentials:!0},success:function(t){}}),wechatUtils.shareWidthSDK(c.name,c.description,location.href.split("?")[0],"",c.cover)}else alert("你还没有填写作品名称！")}function o(){t.location.href=PREFIX_HOST+"/mobile/fillHome.html?edit=true&id="+d}function s(){t.location.href=PREFIX_HOST+"/mobile/fillHome.html?"}function a(){e("#wapShareSet").hide(),e("#shareFooter").show()}function r(){isWeixin()&&(e("#wechatShare").css({display:"block"}),e("#backPreview").css({"float":"left"}))}function l(t){i(t),d=t.id,e("#sceneName").focus(function(){e(this).val().length>0&&e(this).select()}),e("#sceneName").blur(function(){e(this).val().length>0&&n()}),r()}var c={},d="",p="";return{init:l,editScene:o,createAnotherScene:s,backToPreview:a}}()}(window,jQuery),function(t,e){e.forExemplarReview=function(){var t=!1;return e.getUrlParameter("exemplarReview")?($(".phoneBox").css({width:"320px",height:"486px",marginLeft:"0px",marginRight:"40px"}),$("#con").after('<div class="exemplarReview" style="width:40px;height:486px;background:#ffffff;position: fixed;right: 0px;top: 0px;border-right: 1px solid #ccd5db;"><div class="preview" style="position:relative;height: 70px;margin-top:173px;"><a onclick="eqxiu.prePage()" ><em class="eqf-clickmore2" style="color:#7b8893;"></em></a></div> <div class="next" style="height:73px;margin-bottom:173px;"><a onclick="eqxiu.nextPage()"><em class="eqf-clickmore" style="color:#7b8893;"></em></a> </div></div>'),$(".exemplarReview a").css({width:"40px",height:"70px",display:"block",textAlign:"center",lineHeight:"70px"}),$(".exemplarReview a").hover(function(){$(this).css({backgroundColor:"#f0f3f4"})},function(){$(this).css({backgroundColor:"#FFFFFF"})}),t=!0):t=!1,t}}(window,eqShow);
//# sourceMappingURL=data:application/json;base64,
